{"posts": [{"title": "Java\u9762\u8bd5\u98983", "date": "2020-01-06T12:00:00-00.00", "path": "/archives/java-interview-3/", "text": "\u4ece\u7f51\u7edc\u4e0a\u6536\u96c6\u6574\u7406\u7684Java\u9762\u8bd5\u9898\uff0c\u5982\u6709\u4fb5\u6743\uff0c\u8bf7\u8054\u7cfb\u5220\u9664\uff01\u8fd9\u90e8\u5206\u4e3b\u8981\u662f\u5f00\u6e90Java EE\u6846\u67b6\u65b9\u9762\u7684\u5185\u5bb9\uff0c\u5305\u62echibernate\u3001MyBatis\u3001spring\u3001Spring MVC\u7b49\n\u7531\u4e8eStruts 2\u5df2\u7ecf\u662f\u660e\u65e5\u9ec4\u82b1\uff0c\u5728\u8fd9\u91cc\u5c31\u4e0d\u8ba8\u8bbaStruts 2\u7684\u9762\u8bd5\u9898\uff0c\u5982\u679c\u9700\u8981\u4e86\u89e3\u76f8\u5173\u5185\u5bb9\uff0c\u53ef\u4ee5\u53c2\u8003\u6211\u7684\u53e6\u4e00\u7bc7\u6587\u7ae0\u300aJava\u9762\u8bd5\u9898\u96c6\uff0886-115\uff09\u300b\u3002\u6b64\u5916\uff0c\u8fd9\u7bc7\u6587\u7ae0\u8fd8\u5bf9\u4f01\u4e1a\u5e94\u7528\u67b6\u6784\u3001\u5927\u578b\u7f51\u7ad9\u67b6\u6784\u548c\u5e94\u7528\u670d\u52a1\u5668\u4f18\u5316\u7b49\u5185\u5bb9\u8fdb\u884c\u4e86\u7b80\u5355\u7684\u63a2\u8ba8\uff0c\u8fd9\u4e9b\u5185\u5bb9\u76f8\u4fe1\u5bf9\u9762\u8bd5\u4f1a\u5f88\u6709\u5e2e\u52a9\u3002\n126\u3001\u4ec0\u4e48\u662fORM\uff1f\n\u7b54\uff1a\u5bf9\u8c61\u5173\u7cfb\u6620\u5c04\uff08Object-Relational Mapping\uff0c\u7b80\u79f0ORM\uff09\u662f\u4e00\u79cd\u4e3a\u4e86\u89e3\u51b3\u7a0b\u5e8f\u7684\u9762\u5411\u5bf9\u8c61\u6a21\u578b\u4e0e\u6570\u636e\u5e93\u7684\u5173\u7cfb\u6a21\u578b\u4e92\u4e0d\u5339\u914d\u95ee\u9898\u7684\u6280\u672f\uff1b\u7b80\u5355\u7684\u8bf4\uff0cORM\u662f\u901a\u8fc7\u4f7f\u7528\u63cf\u8ff0\u5bf9\u8c61\u548c\u6570\u636e\u5e93\u4e4b\u95f4\u6620\u5c04\u7684\u5143\u6570\u636e\uff08\u5728Java\u4e2d\u53ef\u4ee5\u7528XML\u6216\u8005\u662f\u6ce8\u89e3\uff09\uff0c\u5c06\u7a0b\u5e8f\u4e2d\u7684\u5bf9\u8c61\u81ea\u52a8\u6301\u4e45\u5316\u5230\u5173\u7cfb\u6570\u636e\u5e93\u4e2d\u6216\u8005\u5c06\u5173\u7cfb\u6570\u636e\u5e93\u8868\u4e2d\u7684\u884c\u8f6c\u6362\u6210Java\u5bf9\u8c61\uff0c\u5176\u672c\u8d28\u4e0a\u5c31\u662f\u5c06\u6570\u636e\u4ece\u4e00\u79cd\u5f62\u5f0f\u8f6c\u6362\u5230\u53e6\u5916\u4e00\u79cd\u5f62\u5f0f\u3002\n127\u3001\u6301\u4e45\u5c42\u8bbe\u8ba1\u8981\u8003\u8651\u7684\u95ee\u9898\u6709\u54ea\u4e9b\uff1f\u4f60\u7528\u8fc7\u7684\u6301\u4e45\u5c42\u6846\u67b6\u6709\u54ea\u4e9b\uff1f\n\u7b54\uff1a\u6240\u8c13\"\u6301\u4e45\"\u5c31\u662f\u5c06\u6570\u636e\u4fdd\u5b58\u5230\u53ef\u6389\u7535\u5f0f\u5b58\u50a8\u8bbe\u5907\u4e2d\u4ee5\u4fbf\u4eca\u540e\u4f7f\u7528\uff0c\u7b80\u5355\u7684\u8bf4\uff0c\u5c31\u662f\u5c06\u5185\u5b58\u4e2d\u7684\u6570\u636e\u4fdd\u5b58\u5230\u5173\u7cfb\u578b\u6570\u636e\u5e93\u3001\u6587\u4ef6\u7cfb\u7edf\u3001\u6d88\u606f\u961f\u5217\u7b49\u63d0\u4f9b\u6301\u4e45\u5316\u652f\u6301\u7684\u8bbe\u5907\u4e2d\u3002\u6301\u4e45\u5c42\u5c31\u662f\u7cfb\u7edf\u4e2d\u4e13\u6ce8\u4e8e\u5b9e\u73b0\u6570\u636e\u6301\u4e45\u5316\u7684\u76f8\u5bf9\u72ec\u7acb\u7684\u5c42\u9762\u3002\n\u6301\u4e45\u5c42\u8bbe\u8ba1\u7684\u76ee\u6807\u5305\u62ec\uff1a\n\n\u6570\u636e\u5b58\u50a8\u903b\u8f91\u7684\u5206\u79bb\uff0c\u63d0\u4f9b\u62bd\u8c61\u5316\u7684\u6570\u636e\u8bbf\u95ee\u63a5\u53e3\u3002\n\n\u6570\u636e\u8bbf\u95ee\u5e95\u5c42\u5b9e\u73b0\u7684\u5206\u79bb\uff0c\u53ef\u4ee5\u5728\u4e0d\u4fee\u6539\u4ee3\u7801\u7684\u60c5\u51b5\u4e0b\u5207\u6362\u5e95\u5c42\u5b9e\u73b0\u3002\n\n\u8d44\u6e90\u7ba1\u7406\u548c\u8c03\u5ea6\u7684\u5206\u79bb\uff0c\u5728\u6570\u636e\u8bbf\u95ee\u5c42\u5b9e\u73b0\u7edf\u4e00\u7684\u8d44\u6e90\u8c03\u5ea6\uff08\u5982\u7f13\u5b58\u673a\u5236\uff09\u3002\n\n\u6570\u636e\u62bd\u8c61\uff0c\u63d0\u4f9b\u66f4\u9762\u5411\u5bf9\u8c61\u7684\u6570\u636e\u64cd\u4f5c\u3002\n\n\n\u6301\u4e45\u5c42\u6846\u67b6\u6709\uff1a\n\nHibernate\n\nMyBatis\n\nTopLink\n\nGuzz\n\njOOQ\n\nSpring Data\n\nActiveJDBC\n\n\n128\u3001Hibernate\u4e2dSessionFactory\u662f\u7ebf\u7a0b\u5b89\u5168\u7684\u5417\uff1fSession\u662f\u7ebf\u7a0b\u5b89\u5168\u7684\u5417\uff08\u4e24\u4e2a\u7ebf\u7a0b\u80fd\u591f\u5171\u4eab\u540c\u4e00\u4e2aSession\u5417\uff09\uff1f\n\u7b54\uff1aSessionFactory\u5bf9\u5e94Hibernate\u7684\u4e00\u4e2a\u6570\u636e\u5b58\u50a8\u7684\u6982\u5ff5\uff0c\u5b83\u662f\u7ebf\u7a0b\u5b89\u5168\u7684\uff0c\u53ef\u4ee5\u88ab\u591a\u4e2a\u7ebf\u7a0b\u5e76\u53d1\u8bbf\u95ee\u3002\nSessionFactory\u4e00\u822c\u53ea\u4f1a\u5728\u542f\u52a8\u7684\u65f6\u5019\u6784\u5efa\u3002\u5bf9\u4e8e\u5e94\u7528\u7a0b\u5e8f\uff0c\u6700\u597d\u5c06SessionFactory\u901a\u8fc7\u5355\u4f8b\u6a21\u5f0f\u8fdb\u884c\u5c01\u88c5\u4ee5\u4fbf\u4e8e\u8bbf\u95ee\u3002\nSession\u662f\u4e00\u4e2a\u8f7b\u91cf\u7ea7\u975e\u7ebf\u7a0b\u5b89\u5168\u7684\u5bf9\u8c61\uff08\u7ebf\u7a0b\u95f4\u4e0d\u80fd\u5171\u4eabsession\uff09\uff0c\u5b83\u8868\u793a\u4e0e\u6570\u636e\u5e93\u8fdb\u884c\u4ea4\u4e92\u7684\u4e00\u4e2a\u5de5\u4f5c\u5355\u5143\u3002\nSession\u662f\u7531SessionFactory\u521b\u5efa\u7684\uff0c\u5728\u4efb\u52a1\u5b8c\u6210\u4e4b\u540e\u5b83\u4f1a\u88ab\u5173\u95ed\u3002Session\u662f\u6301\u4e45\u5c42\u670d\u52a1\u5bf9\u5916\u63d0\u4f9b\u7684\u4e3b\u8981\u63a5\u53e3\u3002Session\u4f1a\u5ef6\u8fdf\u83b7\u53d6\u6570\u636e\u5e93\u8fde\u63a5\uff08\u4e5f\u5c31\u662f\u5728\u9700\u8981\u7684\u65f6\u5019\u624d\u4f1a\u83b7\u53d6\uff09\u3002\n\u4e3a\u4e86\u907f\u514d\u521b\u5efa\u592a\u591a\u7684session\uff0c\u53ef\u4ee5\u4f7f\u7528ThreadLocal\u5c06session\u548c\u5f53\u524d\u7ebf\u7a0b\u7ed1\u5b9a\u5728\u4e00\u8d77\uff0c\u8fd9\u6837\u53ef\u4ee5\u8ba9\u540c\u4e00\u4e2a\u7ebf\u7a0b\u83b7\u5f97\u7684\u603b\u662f\u540c\u4e00\u4e2asession\u3002\nHibernate 3\u4e2dSessionFactory\u7684getCurrentSession()\u65b9\u6cd5\u5c31\u53ef\u4ee5\u505a\u5230\u3002\n129\u3001Hibernate\u4e2dSession\u7684load\u548cget\u65b9\u6cd5\u7684\u533a\u522b\u662f\u4ec0\u4e48\uff1f\n\u7b54\uff1a\u4e3b\u8981\u6709\u4ee5\u4e0b\u4e09\u9879\u533a\u522b\uff1a\n\n\u5982\u679c\u6ca1\u6709\u627e\u5230\u7b26\u5408\u6761\u4ef6\u7684\u8bb0\u5f55\uff0cget\u65b9\u6cd5\u8fd4\u56denull\uff0cload\u65b9\u6cd5\u629b\u51fa\u5f02\u5e38\u3002\n\nget\u65b9\u6cd5\u76f4\u63a5\u8fd4\u56de\u5b9e\u4f53\u7c7b\u5bf9\u8c61\uff0cload\u65b9\u6cd5\u8fd4\u56de\u5b9e\u4f53\u7c7b\u5bf9\u8c61\u7684\u4ee3\u7406\u3002\n\n\u5728Hibernate 3\u4e4b\u524d\uff0cget\u65b9\u6cd5\u53ea\u5728\u4e00\u7ea7\u7f13\u5b58\u4e2d\u8fdb\u884c\u6570\u636e\u67e5\u627e\uff0c\u5982\u679c\u6ca1\u6709\u627e\u5230\u5bf9\u5e94\u7684\u6570\u636e\u5219\u8d8a\u8fc7\u4e8c\u7ea7\u7f13\u5b58\uff0c\u76f4\u63a5\u53d1\u51faSQL\u8bed\u53e5\u5b8c\u6210\u6570\u636e\u8bfb\u53d6\uff1bload\u65b9\u6cd5\u5219\u53ef\u4ee5\u4ece\u4e8c\u7ea7\u7f13\u5b58\u4e2d\u83b7\u53d6\u6570\u636e\uff1b\u4eceHibernate 3\u5f00\u59cb\uff0cget\u65b9\u6cd5\u4e0d\u518d\u662f\u5bf9\u4e8c\u7ea7\u7f13\u5b58\u53ea\u5199\u4e0d\u8bfb\uff0c\u5b83\u4e5f\u662f\u53ef\u4ee5\u8bbf\u95ee\u4e8c\u7ea7\u7f13\u5b58\u7684\u3002\n\n\n\u8bf4\u660e\uff1a\u5bf9\u4e8eload()\u65b9\u6cd5Hibernate\u8ba4\u4e3a\u8be5\u6570\u636e\u5728\u6570\u636e\u5e93\u4e2d\u4e00\u5b9a\u5b58\u5728\u53ef\u4ee5\u653e\u5fc3\u7684\u4f7f\u7528\u4ee3\u7406\u6765\u5b9e\u73b0\u5ef6\u8fdf\u52a0\u8f7d\uff0c\u5982\u679c\u6ca1\u6709\u6570\u636e\u5c31\u629b\u51fa\u5f02\u5e38\uff0c\u800c\u901a\u8fc7get()\u65b9\u6cd5\u83b7\u53d6\u7684\u6570\u636e\u53ef\u4ee5\u4e0d\u5b58\u5728\u3002\n130\u3001Session\u7684save()\u3001update()\u3001merge()\u3001lock()\u3001saveOrUpdate()\u548cpersist()\u65b9\u6cd5\u5206\u522b\u662f\u505a\u4ec0\u4e48\u7684\uff1f\u6709\u4ec0\u4e48\u533a\u522b\uff1f\n\u7b54\uff1aHibernate\u7684\u5bf9\u8c61\u6709\u4e09\u79cd\u72b6\u6001\uff1a\u77ac\u65f6\u6001\uff08transient\uff09\u3001\u6301\u4e45\u6001\uff08persistent\uff09\u548c\u6e38\u79bb\u6001\uff08detached\uff09\uff0c\u5982\u7b2c135\u9898\u4e2d\u7684\u56fe\u6240\u793a\u3002\n\u77ac\u65f6\u6001\u7684\u5b9e\u4f8b\u53ef\u4ee5\u901a\u8fc7\u8c03\u7528save()\u3001persist()\u6216\u8005saveOrUpdate()\u65b9\u6cd5\u53d8\u6210\u6301\u4e45\u6001\uff1b\u6e38\u79bb\u6001\u7684\u5b9e\u4f8b\u53ef\u4ee5\u901a\u8fc7\u8c03\u7528 update()\u3001saveOrUpdate()\u3001lock()\u6216\u8005replicate()\u53d8\u6210\u6301\u4e45\u6001\u3002\nsave()\u548cpersist()\u5c06\u4f1a\u5f15\u53d1SQL\u7684INSERT\u8bed\u53e5\uff0c\u800cupdate()\u6216merge()\u4f1a\u5f15\u53d1UPDATE\u8bed\u53e5\u3002save()\u548cupdate()\u7684\u533a\u522b\u5728\u4e8e\u4e00\u4e2a\u662f\u5c06\u77ac\u65f6\u6001\u5bf9\u8c61\u53d8\u6210\u6301\u4e45\u6001\uff0c\u4e00\u4e2a\u662f\u5c06\u6e38\u79bb\u6001\u5bf9\u8c61\u53d8\u4e3a\u6301\u4e45\u6001\u3002merge()\u65b9\u6cd5\u53ef\u4ee5\u5b8c\u6210save()\u548cupdate()\u65b9\u6cd5\u7684\u529f\u80fd\uff0c\u5b83\u7684\u610f\u56fe\u662f\u5c06\u65b0\u7684\u72b6\u6001\u5408\u5e76\u5230\u5df2\u6709\u7684\u6301\u4e45\u5316\u5bf9\u8c61\u4e0a\u6216\u521b\u5efa\u65b0\u7684\u6301\u4e45\u5316\u5bf9\u8c61\u3002\u5bf9\u4e8epersist()\u65b9\u6cd5\uff0c\u6309\u7167\u5b98\u65b9\u6587\u6863\u7684\u8bf4\u660e\uff1a\n\npersist()\u65b9\u6cd5\u628a\u4e00\u4e2a\u77ac\u65f6\u6001\u7684\u5b9e\u4f8b\u6301\u4e45\u5316\uff0c\u4f46\u662f\u5e76\u4e0d\u4fdd\u8bc1\u6807\u8bc6\u7b26\u88ab\u7acb\u523b\u586b\u5165\u5230\u6301\u4e45\u5316\u5b9e\u4f8b\u4e2d\uff0c\u6807\u8bc6\u7b26\u7684\u586b\u5165\u53ef\u80fd\u88ab\u63a8\u8fdf\u5230flush\u7684\u65f6\u95f4\uff1b\n\npersist()\u65b9\u6cd5\u4fdd\u8bc1\u5f53\u5b83\u5728\u4e00\u4e2a\u4e8b\u52a1\u5916\u90e8\u88ab\u8c03\u7528\u7684\u65f6\u5019\u5e76\u4e0d\u89e6\u53d1\u4e00\u4e2aINSERT\u8bed\u53e5\uff0c\u5f53\u9700\u8981\u5c01\u88c5\u4e00\u4e2a\u957f\u4f1a\u8bdd\u6d41\u7a0b\u7684\u65f6\u5019\uff0cpersist()\u65b9\u6cd5\u662f\u5f88\u6709\u5fc5\u8981\u7684\uff1b\n\nsave()\u65b9\u6cd5\u4e0d\u4fdd\u8bc1\u7b2c\u2461\u6761\uff0c\u5b83\u8981\u8fd4\u56de\u6807\u8bc6\u7b26\uff0c\u6240\u4ee5\u5b83\u4f1a\u7acb\u5373\u6267\u884cINSERT\u8bed\u53e5\uff0c\u4e0d\u7ba1\u662f\u5728\u4e8b\u52a1\u5185\u90e8\u8fd8\u662f\u5916\u90e8\u3002\u81f3\u4e8elock()\u65b9\u6cd5\u548cupdate()\u65b9\u6cd5\u7684\u533a\u522b\uff0cupdate()\u65b9\u6cd5\u662f\u628a\u4e00\u4e2a\u5df2\u7ecf\u66f4\u6539\u8fc7\u7684\u8131\u7ba1\u72b6\u6001\u7684\u5bf9\u8c61\u53d8\u6210\u6301\u4e45\u72b6\u6001\uff1block()\u65b9\u6cd5\u662f\u628a\u4e00\u4e2a\u6ca1\u6709\u66f4\u6539\u8fc7\u7684\u8131\u7ba1\u72b6\u6001\u7684\u5bf9\u8c61\u53d8\u6210\u6301\u4e45\u72b6\u6001\u3002\n\n\n131\u3001\u9610\u8ff0Session\u52a0\u8f7d\u5b9e\u4f53\u5bf9\u8c61\u7684\u8fc7\u7a0b\u3002\n\u7b54\uff1aSession\u52a0\u8f7d\u5b9e\u4f53\u5bf9\u8c61\u7684\u6b65\u9aa4\u662f\uff1a\n\nSession\u5728\u8c03\u7528\u6570\u636e\u5e93\u67e5\u8be2\u529f\u80fd\u4e4b\u524d\uff0c\u9996\u5148\u4f1a\u5728\u4e00\u7ea7\u7f13\u5b58\u4e2d\u901a\u8fc7\u5b9e\u4f53\u7c7b\u578b\u548c\u4e3b\u952e\u8fdb\u884c\u67e5\u627e\uff0c\u5982\u679c\u4e00\u7ea7\u7f13\u5b58\u67e5\u627e\u547d\u4e2d\u4e14\u6570\u636e\u72b6\u6001\u5408\u6cd5\uff0c\u5219\u76f4\u63a5\u8fd4\u56de\uff1b\n\n\u5982\u679c\u4e00\u7ea7\u7f13\u5b58\u6ca1\u6709\u547d\u4e2d\uff0c\u63a5\u4e0b\u6765Session\u4f1a\u5728\u5f53\u524dNonExists\u8bb0\u5f55\uff08\u76f8\u5f53\u4e8e\u4e00\u4e2a\u67e5\u8be2\u9ed1\u540d\u5355\uff0c\u5982\u679c\u51fa\u73b0\u91cd\u590d\u7684\u65e0\u6548\u67e5\u8be2\u53ef\u4ee5\u8fc5\u901f\u505a\u51fa\u5224\u65ad\uff0c\u4ece\u800c\u63d0\u5347\u6027\u80fd\uff09\u4e2d\u8fdb\u884c\u67e5\u627e\uff0c\u5982\u679cNonExists\u4e2d\u5b58\u5728\u540c\u6837\u7684\u67e5\u8be2\u6761\u4ef6\uff0c\u5219\u8fd4\u56denull\uff1b\n\n\u5982\u679c\u4e00\u7ea7\u7f13\u5b58\u67e5\u8be2\u5931\u8d25\u5219\u67e5\u8be2\u4e8c\u7ea7\u7f13\u5b58\uff0c\u5982\u679c\u4e8c\u7ea7\u7f13\u5b58\u547d\u4e2d\u5219\u76f4\u63a5\u8fd4\u56de\uff1b\n\n\u5982\u679c\u4e4b\u524d\u7684\u67e5\u8be2\u90fd\u672a\u547d\u4e2d\uff0c\u5219\u53d1\u51faSQL\u8bed\u53e5\uff0c\u5982\u679c\u67e5\u8be2\u672a\u53d1\u73b0\u5bf9\u5e94\u8bb0\u5f55\u5219\u5c06\u6b64\u6b21\u67e5\u8be2\u6dfb\u52a0\u5230Session\u7684NonExists\u4e2d\u52a0\u4ee5\u8bb0\u5f55\uff0c\u5e76\u8fd4\u56denull\uff1b\n\n\u6839\u636e\u6620\u5c04\u914d\u7f6e\u548cSQL\u8bed\u53e5\u5f97\u5230ResultSet\uff0c\u5e76\u521b\u5efa\u5bf9\u5e94\u7684\u5b9e\u4f53\u5bf9\u8c61\uff1b\n\n\u5c06\u5bf9\u8c61\u7eb3\u5165Session\uff08\u4e00\u7ea7\u7f13\u5b58\uff09\u7684\u7ba1\u7406\uff1b\n\n\u5982\u679c\u6709\u5bf9\u5e94\u7684\u62e6\u622a\u5668\uff0c\u5219\u6267\u884c\u62e6\u622a\u5668\u7684onLoad\u65b9\u6cd5\uff1b\n\n\u5982\u679c\u5f00\u542f\u5e76\u8bbe\u7f6e\u4e86\u8981\u4f7f\u7528\u4e8c\u7ea7\u7f13\u5b58\uff0c\u5219\u5c06\u6570\u636e\u5bf9\u8c61\u7eb3\u5165\u4e8c\u7ea7\u7f13\u5b58\uff1b\n\n\u8fd4\u56de\u6570\u636e\u5bf9\u8c61\u3002\n\n\n132\u3001Query\u63a5\u53e3\u7684list\u65b9\u6cd5\u548citerate\u65b9\u6cd5\u6709\u4ec0\u4e48\u533a\u522b\uff1f\n\u7b54\uff1a\n\nlist()\u65b9\u6cd5\u65e0\u6cd5\u5229\u7528\u4e00\u7ea7\u7f13\u5b58\u548c\u4e8c\u7ea7\u7f13\u5b58\uff08\u5bf9\u7f13\u5b58\u53ea\u5199\u4e0d\u8bfb\uff09\uff0c\u5b83\u53ea\u80fd\u5728\u5f00\u542f\u67e5\u8be2\u7f13\u5b58\u7684\u524d\u63d0\u4e0b\u4f7f\u7528\u67e5\u8be2\u7f13\u5b58\uff1biterate()\u65b9\u6cd5\u53ef\u4ee5\u5145\u5206\u5229\u7528\u7f13\u5b58\uff0c\u5982\u679c\u76ee\u6807\u6570\u636e\u53ea\u8bfb\u6216\u8005\u8bfb\u53d6\u9891\u7e41\uff0c\u4f7f\u7528iterate()\u65b9\u6cd5\u53ef\u4ee5\u51cf\u5c11\u6027\u80fd\u5f00\u9500\u3002\nlist()\u65b9\u6cd5\u4e0d\u4f1a\u5f15\u8d77N+1\u67e5\u8be2\u95ee\u9898\uff0c\u800citerate()\u65b9\u6cd5\u53ef\u80fd\u5f15\u8d77N+1\u67e5\u8be2\u95ee\u9898\n\n\n\u8bf4\u660e\uff1a\u5173\u4e8eN+1\u67e5\u8be2\u95ee\u9898\uff0c\u53ef\u4ee5\u53c2\u8003CSDN\u4e0a\u7684\u4e00\u7bc7\u6587\u7ae0\u300a\u4ec0\u4e48\u662fN+1\u67e5\u8be2\u300b\n133\u3001Hibernate\u5982\u4f55\u5b9e\u73b0\u5206\u9875\u67e5\u8be2\uff1f\n\u7b54\uff1a\u901a\u8fc7Hibernate\u5b9e\u73b0\u5206\u9875\u67e5\u8be2\uff0c\u5f00\u53d1\u4eba\u5458\u53ea\u9700\u8981\u63d0\u4f9bHQL\u8bed\u53e5\uff08\u8c03\u7528Session\u7684createQuery()\u65b9\u6cd5\uff09\u6216\u67e5\u8be2\u6761\u4ef6\uff08\u8c03\u7528Session\u7684createCriteria()\u65b9\u6cd5\uff09\u3001\u8bbe\u7f6e\u67e5\u8be2\u8d77\u59cb\u884c\u6570\uff08\u8c03\u7528Query\u6216Criteria\u63a5\u53e3\u7684setFirstResult()\u65b9\u6cd5\uff09\u548c\u6700\u5927\u67e5\u8be2\u884c\u6570\uff08\u8c03\u7528Query\u6216Criteria\u63a5\u53e3\u7684setMaxResults()\u65b9\u6cd5\uff09\uff0c\u5e76\u8c03\u7528Query\u6216Criteria\u63a5\u53e3\u7684list()\u65b9\u6cd5\uff0cHibernate\u4f1a\u81ea\u52a8\u751f\u6210\u5206\u9875\u67e5\u8be2\u7684SQL\u8bed\u53e5\u3002\n134\u3001\u9501\u673a\u5236\u6709\u4ec0\u4e48\u7528\uff1f\u7b80\u8ff0Hibernate\u7684\u60b2\u89c2\u9501\u548c\u4e50\u89c2\u9501\u673a\u5236\u3002\n\u7b54\uff1a\u6709\u4e9b\u4e1a\u52a1\u903b\u8f91\u5728\u6267\u884c\u8fc7\u7a0b\u4e2d\u8981\u6c42\u5bf9\u6570\u636e\u8fdb\u884c\u6392\u4ed6\u6027\u7684\u8bbf\u95ee\uff0c\u4e8e\u662f\u9700\u8981\u901a\u8fc7\u4e00\u4e9b\u673a\u5236\u4fdd\u8bc1\u5728\u6b64\u8fc7\u7a0b\u4e2d\u6570\u636e\u88ab\u9501\u4f4f\u4e0d\u4f1a\u88ab\u5916\u754c\u4fee\u6539\uff0c\u8fd9\u5c31\u662f\u6240\u8c13\u7684\u9501\u673a\u5236\u3002\nHibernate\u652f\u6301\u60b2\u89c2\u9501\u548c\u4e50\u89c2\u9501\u4e24\u79cd\u9501\u673a\u5236\u3002\u60b2\u89c2\u9501\uff0c\u987e\u540d\u601d\u4e49\u60b2\u89c2\u7684\u8ba4\u4e3a\u5728\u6570\u636e\u5904\u7406\u8fc7\u7a0b\u4e2d\u6781\u6709\u53ef\u80fd\u5b58\u5728\u4fee\u6539\u6570\u636e\u7684\u5e76\u53d1\u4e8b\u52a1\uff08\u5305\u62ec\u672c\u7cfb\u7edf\u7684\u5176\u4ed6\u4e8b\u52a1\u6216\u6765\u81ea\u5916\u90e8\u7cfb\u7edf\u7684\u4e8b\u52a1\uff09\uff0c\u4e8e\u662f\u5c06\u5904\u7406\u7684\u6570\u636e\u8bbe\u7f6e\u4e3a\u9501\u5b9a\u72b6\u6001\u3002\n\u60b2\u89c2\u9501\u5fc5\u987b\u4f9d\u8d56\u6570\u636e\u5e93\u672c\u8eab\u7684\u9501\u673a\u5236\u624d\u80fd\u771f\u6b63\u4fdd\u8bc1\u6570\u636e\u8bbf\u95ee\u7684\u6392\u4ed6\u6027\uff0c\u5173\u4e8e\u6570\u636e\u5e93\u7684\u9501\u673a\u5236\u548c\u4e8b\u52a1\u9694\u79bb\u7ea7\u522b\u5728\u300aJava\u9762\u8bd5\u9898\u5927\u5168\uff08\u4e0a\uff09\u300b\u4e2d\u5df2\u7ecf\u8ba8\u8bba\u8fc7\u4e86\u3002\n\u4e50\u89c2\u9501\uff0c\u987e\u540d\u601d\u4e49\uff0c\u5bf9\u5e76\u53d1\u4e8b\u52a1\u6301\u4e50\u89c2\u6001\u5ea6\uff08\u8ba4\u4e3a\u5bf9\u6570\u636e\u7684\u5e76\u53d1\u64cd\u4f5c\u4e0d\u4f1a\u7ecf\u5e38\u6027\u7684\u53d1\u751f\uff09\uff0c\u901a\u8fc7\u66f4\u52a0\u5bbd\u677e\u7684\u9501\u673a\u5236\u6765\u89e3\u51b3\u7531\u4e8e\u60b2\u89c2\u9501\u6392\u4ed6\u6027\u7684\u6570\u636e\u8bbf\u95ee\u5bf9\u7cfb\u7edf\u6027\u80fd\u9020\u6210\u7684\u4e25\u91cd\u5f71\u54cd\u3002\u6700\u5e38\u89c1\u7684\u4e50\u89c2\u9501\u662f\u901a\u8fc7\u6570\u636e\u7248\u672c\u6807\u8bc6\u6765\u5b9e\u73b0\u7684\uff0c\u8bfb\u53d6\u6570\u636e\u65f6\u83b7\u5f97\u6570\u636e\u7684\u7248\u672c\u53f7\uff0c\u66f4\u65b0\u6570\u636e\u65f6\u5c06\u6b64\u7248\u672c\u53f7\u52a01\uff0c\u7136\u540e\u548c\u6570\u636e\u5e93\u8868\u5bf9\u5e94\u8bb0\u5f55\u7684\u5f53\u524d\u7248\u672c\u53f7\u8fdb\u884c\u6bd4\u8f83\uff0c\u5982\u679c\u63d0\u4ea4\u7684\u6570\u636e\u7248\u672c\u53f7\u5927\u4e8e\u6570\u636e\u5e93\u4e2d\u6b64\u8bb0\u5f55\u7684\u5f53\u524d\u7248\u672c\u53f7\u5219\u66f4\u65b0\u6570\u636e\uff0c\u5426\u5219\u8ba4\u4e3a\u662f\u8fc7\u671f\u6570\u636e\u65e0\u6cd5\u66f4\u65b0\u3002\nHibernate\u4e2d\u901a\u8fc7Session\u7684get()\u548cload()\u65b9\u6cd5\u4ece\u6570\u636e\u5e93\u4e2d\u52a0\u8f7d\u5bf9\u8c61\u65f6\u53ef\u4ee5\u901a\u8fc7\u53c2\u6570\u6307\u5b9a\u4f7f\u7528\u60b2\u89c2\u9501\uff1b\u800c\u4e50\u89c2\u9501\u53ef\u4ee5\u901a\u8fc7\u7ed9\u5b9e\u4f53\u7c7b\u52a0\u6574\u578b\u7684\u7248\u672c\u5b57\u6bb5\u518d\u901a\u8fc7XML\u6216@Version\u6ce8\u89e3\u8fdb\u884c\u914d\u7f6e\u3002\n\u63d0\u793a\uff1a\u4f7f\u7528\u4e50\u89c2\u9501\u4f1a\u589e\u52a0\u4e86\u4e00\u4e2a\u7248\u672c\u5b57\u6bb5\uff0c\u5f88\u660e\u663e\u8fd9\u9700\u8981\u989d\u5916\u7684\u7a7a\u95f4\u6765\u5b58\u50a8\u8fd9\u4e2a\u7248\u672c\u5b57\u6bb5\uff0c\u6d6a\u8d39\u4e86\u7a7a\u95f4\uff0c\u4f46\u662f\u4e50\u89c2\u9501\u4f1a\u8ba9\u7cfb\u7edf\u5177\u6709\u66f4\u597d\u7684\u5e76\u53d1\u6027\uff0c\u8fd9\u662f\u5bf9\u65f6\u95f4\u7684\u8282\u7701\u3002\u56e0\u6b64\u4e50\u89c2\u9501\u4e5f\u662f\u5178\u578b\u7684\u7a7a\u95f4\u6362\u65f6\u95f4\u7684\u7b56\u7565\u3002\n135\u3001\u9610\u8ff0\u5b9e\u4f53\u5bf9\u8c61\u7684\u4e09\u79cd\u72b6\u6001\u4ee5\u53ca\u8f6c\u6362\u5173\u7cfb\u3002\n\u7b54\uff1a\u6700\u65b0\u7684Hibernate\u6587\u6863\u4e2d\u4e3aHibernate\u5bf9\u8c61\u5b9a\u4e49\u4e86\u56db\u79cd\u72b6\u6001\uff08\u539f\u6765\u662f\u4e09\u79cd\u72b6\u6001\uff0c\u9762\u8bd5\u7684\u65f6\u5019\u57fa\u672c\u4e0a\u95ee\u7684\u4e5f\u662f\u4e09\u79cd\u72b6\u6001\uff09\uff0c\u5206\u522b\u662f\uff1a\u77ac\u65f6\u6001\uff08new, or transient\uff09\u3001\u6301\u4e45\u6001\uff08managed, or persistent\uff09\u3001\u6e38\u72b6\u6001\uff08detached\uff09\u548c\u79fb\u9664\u6001\uff08removed\uff0c\u4ee5\u524dHibernate\u6587\u6863\u4e2d\u5b9a\u4e49\u7684\u4e09\u79cd\u72b6\u6001\u4e2d\u6ca1\u6709\u79fb\u9664\u6001\uff09\uff0c\u5982\u4e0b\u56fe\u6240\u793a\uff0c\u5c31\u4ee5\u524d\u7684Hibernate\u6587\u6863\u4e2d\u79fb\u9664\u6001\u88ab\u89c6\u4e3a\u662f\u77ac\u65f6\u6001\u3002\njava-intelview-3-001\n\n\u77ac\u65f6\u6001\uff1a\u5f53new\u4e00\u4e2a\u5b9e\u4f53\u5bf9\u8c61\u540e\uff0c\u8fd9\u4e2a\u5bf9\u8c61\u5904\u4e8e\u77ac\u65f6\u6001\uff0c\u5373\u8fd9\u4e2a\u5bf9\u8c61\u53ea\u662f\u4e00\u4e2a\u4fdd\u5b58\u4e34\u65f6\u6570\u636e\u7684\u5185\u5b58\u533a\u57df\uff0c\u5982\u679c\u6ca1\u6709\u53d8\u91cf\u5f15\u7528\u8fd9\u4e2a\u5bf9\u8c61\uff0c\u5219\u4f1a\u88abJVM\u7684\u5783\u573e\u56de\u6536\u673a\u5236\u56de\u6536\u3002\u8fd9\u4e2a\u5bf9\u8c61\u6240\u4fdd\u5b58\u7684\u6570\u636e\u4e0e\u6570\u636e\u5e93\u6ca1\u6709\u4efb\u4f55\u5173\u7cfb\uff0c\u9664\u975e\u901a\u8fc7Session\u7684save()\u3001saveOrUpdate()\u3001persist()\u3001merge()\u65b9\u6cd5\u628a\u77ac\u65f6\u6001\u5bf9\u8c61\u4e0e\u6570\u636e\u5e93\u5173\u8054\uff0c\u5e76\u628a\u6570\u636e\u63d2\u5165\u6216\u8005\u66f4\u65b0\u5230\u6570\u636e\u5e93\uff0c\u8fd9\u4e2a\u5bf9\u8c61\u624d\u8f6c\u6362\u4e3a\u6301\u4e45\u6001\u5bf9\u8c61\u3002\n\n\u6301\u4e45\u6001\uff1a\u6301\u4e45\u6001\u5bf9\u8c61\u7684\u5b9e\u4f8b\u5728\u6570\u636e\u5e93\u4e2d\u6709\u5bf9\u5e94\u7684\u8bb0\u5f55\uff0c\u5e76\u62e5\u6709\u4e00\u4e2a\u6301\u4e45\u5316\u6807\u8bc6\uff08ID\uff09\u3002\u5bf9\u6301\u4e45\u6001\u5bf9\u8c61\u8fdb\u884cdelete\u64cd\u4f5c\u540e\uff0c\u6570\u636e\u5e93\u4e2d\u5bf9\u5e94\u7684\u8bb0\u5f55\u5c06\u88ab\u5220\u9664\uff0c\u90a3\u4e48\u6301\u4e45\u6001\u5bf9\u8c61\u4e0e\u6570\u636e\u5e93\u8bb0\u5f55\u4e0d\u518d\u5b58\u5728\u5bf9\u5e94\u5173\u7cfb\uff0c\u6301\u4e45\u6001\u5bf9\u8c61\u53d8\u6210\u79fb\u9664\u6001\uff08\u53ef\u4ee5\u89c6\u4e3a\u77ac\u65f6\u6001\uff09\u3002\u6301\u4e45\u6001\u5bf9\u8c61\u88ab\u4fee\u6539\u53d8\u66f4\u540e\uff0c\u4e0d\u4f1a\u9a6c\u4e0a\u540c\u6b65\u5230\u6570\u636e\u5e93\uff0c\u76f4\u5230\u6570\u636e\u5e93\u4e8b\u52a1\u63d0\u4ea4\u3002\n\n\u6e38\u79bb\u6001\uff1a\u5f53Session\u8fdb\u884c\u4e86close()\u3001clear()\u3001evict()\u6216flush()\u540e\uff0c\u5b9e\u4f53\u5bf9\u8c61\u4ece\u6301\u4e45\u6001\u53d8\u6210\u6e38\u79bb\u6001\uff0c\u5bf9\u8c61\u867d\u7136\u62e5\u6709\u6301\u4e45\u548c\u4e0e\u6570\u636e\u5e93\u5bf9\u5e94\u8bb0\u5f55\u4e00\u81f4\u7684\u6807\u8bc6\u503c\uff0c\u4f46\u662f\u56e0\u4e3a\u5bf9\u8c61\u5df2\u7ecf\u4ece\u4f1a\u8bdd\u4e2d\u6e05\u9664\u6389\uff0c\u5bf9\u8c61\u4e0d\u5728\u6301\u4e45\u5316\u7ba1\u7406\u4e4b\u5185\uff0c\u6240\u4ee5\u5904\u4e8e\u6e38\u79bb\u6001\uff08\u4e5f\u53eb\u8131\u7ba1\u6001\uff09\u3002\u6e38\u79bb\u6001\u7684\u5bf9\u8c61\u4e0e\u4e34\u65f6\u72b6\u6001\u5bf9\u8c61\u662f\u5341\u5206\u76f8\u4f3c\u7684\uff0c\u53ea\u662f\u5b83\u8fd8\u542b\u6709\u6301\u4e45\u5316\u6807\u8bc6\u3002\n\n\n\u63d0\u793a\uff1a\u5173\u4e8e\u8fd9\u4e2a\u95ee\u9898\uff0c\u5728Hibernate\u7684\u5b98\u65b9\u6587\u6863\u4e2d\u6709\u66f4\u4e3a\u8be6\u7ec6\u7684\u89e3\u8bfb\u3002\n136\u3001\u5982\u4f55\u7406\u89e3Hibernate\u7684\u5ef6\u8fdf\u52a0\u8f7d\u673a\u5236\uff1f\u5728\u5b9e\u9645\u5e94\u7528\u4e2d\uff0c\u5ef6\u8fdf\u52a0\u8f7d\u4e0eSession\u5173\u95ed\u7684\u77db\u76fe\u662f\u5982\u4f55\u5904\u7406\u7684\uff1f\n\u7b54\uff1a\u5ef6\u8fdf\u52a0\u8f7d\u5c31\u662f\u5e76\u4e0d\u662f\u5728\u8bfb\u53d6\u7684\u65f6\u5019\u5c31\u628a\u6570\u636e\u52a0\u8f7d\u8fdb\u6765\uff0c\u800c\u662f\u7b49\u5230\u4f7f\u7528\u65f6\u518d\u52a0\u8f7d\u3002Hibernate\u4f7f\u7528\u4e86\u865a\u62df\u4ee3\u7406\u673a\u5236\u5b9e\u73b0\u5ef6\u8fdf\u52a0\u8f7d\uff0c\u6211\u4eec\u4f7f\u7528Session\u7684load()\u65b9\u6cd5\u52a0\u8f7d\u6570\u636e\u6216\u8005\u4e00\u5bf9\u591a\u5173\u8054\u6620\u5c04\u5728\u4f7f\u7528\u5ef6\u8fdf\u52a0\u8f7d\u7684\u60c5\u51b5\u4e0b\u4ece\u4e00\u7684\u4e00\u65b9\u52a0\u8f7d\u591a\u7684\u4e00\u65b9\uff0c\u5f97\u5230\u7684\u90fd\u662f\u865a\u62df\u4ee3\u7406\uff0c\u7b80\u5355\u7684\u8bf4\u8fd4\u56de\u7ed9\u7528\u6237\u7684\u5e76\u4e0d\u662f\u5b9e\u4f53\u672c\u8eab\uff0c\u800c\u662f\u5b9e\u4f53\u5bf9\u8c61\u7684\u4ee3\u7406\u3002\u4ee3\u7406\u5bf9\u8c61\u5728\u7528\u6237\u8c03\u7528getter\u65b9\u6cd5\u65f6\u624d\u4f1a\u53bb\u6570\u636e\u5e93\u52a0\u8f7d\u6570\u636e\u3002\u4f46\u52a0\u8f7d\u6570\u636e\u5c31\u9700\u8981\u6570\u636e\u5e93\u8fde\u63a5\u3002\u800c\u5f53\u6211\u4eec\u628a\u4f1a\u8bdd\u5173\u95ed\u65f6\uff0c\u6570\u636e\u5e93\u8fde\u63a5\u5c31\u540c\u65f6\u5173\u95ed\u4e86\u3002\n\u5ef6\u8fdf\u52a0\u8f7d\u4e0esession\u5173\u95ed\u7684\u77db\u76fe\u4e00\u822c\u53ef\u4ee5\u8fd9\u6837\u5904\u7406\uff1a\n\n\u5173\u95ed\u5ef6\u8fdf\u52a0\u8f7d\u7279\u6027\u3002\u8fd9\u79cd\u65b9\u5f0f\u64cd\u4f5c\u8d77\u6765\u6bd4\u8f83\u7b80\u5355\uff0c\u56e0\u4e3aHibernate\u7684\u5ef6\u8fdf\u52a0\u8f7d\u7279\u6027\u662f\u53ef\u4ee5\u901a\u8fc7\u6620\u5c04\u6587\u4ef6\u6216\u8005\u6ce8\u89e3\u8fdb\u884c\u914d\u7f6e\u7684\uff0c\u4f46\u8fd9\u79cd\u89e3\u51b3\u65b9\u6848\u5b58\u5728\u660e\u663e\u7684\u7f3a\u9677\u3002\u9996\u5148\uff0c\u51fa\u73b0\"no session or session was closed\"\u901a\u5e38\u8bf4\u660e\u7cfb\u7edf\u4e2d\u5df2\u7ecf\u5b58\u5728\u4e3b\u5916\u952e\u5173\u8054\uff0c\u5982\u679c\u53bb\u6389\u5ef6\u8fdf\u52a0\u8f7d\u7684\u8bdd\uff0c\u6bcf\u6b21\u67e5\u8be2\u7684\u5f00\u9500\u90fd\u4f1a\u53d8\u5f97\u5f88\u5927\u3002\n\n\u5728session\u5173\u95ed\u4e4b\u524d\u5148\u83b7\u53d6\u9700\u8981\u67e5\u8be2\u7684\u6570\u636e\uff0c\u53ef\u4ee5\u4f7f\u7528\u5de5\u5177\u65b9\u6cd5Hibernate.isInitialized()\u5224\u65ad\u5bf9\u8c61\u662f\u5426\u88ab\u52a0\u8f7d\uff0c\u5982\u679c\u6ca1\u6709\u88ab\u52a0\u8f7d\u5219\u53ef\u4ee5\u4f7f\u7528Hibernate.initialize()\u65b9\u6cd5\u52a0\u8f7d\u5bf9\u8c61\u3002\n\n\u4f7f\u7528\u62e6\u622a\u5668\u6216\u8fc7\u6ee4\u5668\u5ef6\u957fSession\u7684\u751f\u547d\u5468\u671f\u76f4\u5230\u89c6\u56fe\u83b7\u5f97\u6570\u636e\u3002Spring\u6574\u5408Hibernate\u63d0\u4f9b\u7684OpenSessionInViewFilter\u548cOpenSessionInViewInterceptor\u5c31\u662f\u8fd9\u79cd\u505a\u6cd5\u3002\n\n\n137\u3001\u4e3e\u4e00\u4e2a\u591a\u5bf9\u591a\u5173\u8054\u7684\u4f8b\u5b50\uff0c\u5e76\u8bf4\u660e\u5982\u4f55\u5b9e\u73b0\u591a\u5bf9\u591a\u5173\u8054\u6620\u5c04\u3002\n\u7b54\uff1a\u4f8b\u5982\uff1a\u5546\u54c1\u548c\u8ba2\u5355\u3001\u5b66\u751f\u548c\u8bfe\u7a0b\u90fd\u662f\u5178\u578b\u7684\u591a\u5bf9\u591a\u5173\u7cfb\u3002\u53ef\u4ee5\u5728\u5b9e\u4f53\u7c7b\u4e0a\u901a\u8fc7@ManyToMany\u6ce8\u89e3\u914d\u7f6e\u591a\u5bf9\u591a\u5173\u8054\u6216\u8005\u901a\u8fc7\u6620\u5c04\u6587\u4ef6\u4e2d\u7684\u548c\u6807\u7b7e\u914d\u7f6e\u591a\u5bf9\u591a\u5173\u8054\uff0c\u4f46\u662f\u5b9e\u9645\u9879\u76ee\u5f00\u53d1\u4e2d\uff0c\u5f88\u591a\u65f6\u5019\u90fd\u662f\u5c06\u591a\u5bf9\u591a\u5173\u8054\u6620\u5c04\u8f6c\u6362\u6210\u4e24\u4e2a\u591a\u5bf9\u4e00\u5173\u8054\u6620\u5c04\u6765\u5b9e\u73b0\u7684\u3002\n138\u3001\u8c08\u4e00\u4e0b\u4f60\u5bf9\u7ee7\u627f\u6620\u5c04\u7684\u7406\u89e3\u3002\n\u7b54\uff1a\u7ee7\u627f\u5173\u7cfb\u7684\u6620\u5c04\u7b56\u7565\u6709\u4e09\u79cd\uff1a\n\n\u6bcf\u4e2a\u7ee7\u627f\u7ed3\u6784\u4e00\u5f20\u8868\uff08table per class hierarchy\uff09\uff0c\u4e0d\u7ba1\u591a\u5c11\u4e2a\u5b50\u7c7b\u90fd\u7528\u4e00\u5f20\u8868\u3002\n\n\u6bcf\u4e2a\u5b50\u7c7b\u4e00\u5f20\u8868\uff08table per subclass\uff09\uff0c\u516c\u5171\u4fe1\u606f\u653e\u4e00\u5f20\u8868\uff0c\u7279\u6709\u4fe1\u606f\u653e\u5355\u72ec\u7684\u8868\u3002\n\n\u6bcf\u4e2a\u5177\u4f53\u7c7b\u4e00\u5f20\u8868\uff08table per concrete class\uff09\uff0c\u6709\u591a\u5c11\u4e2a\u5b50\u7c7b\u5c31\u6709\u591a\u5c11\u5f20\u8868\u3002\u7b2c\u4e00\u79cd\u65b9\u5f0f\u5c5e\u4e8e\u5355\u8868\u7b56\u7565\uff0c\u5176\u4f18\u70b9\u5728\u4e8e\u67e5\u8be2\u5b50\u7c7b\u5bf9\u8c61\u7684\u65f6\u5019\u65e0\u9700\u8868\u8fde\u63a5\uff0c\u67e5\u8be2\u901f\u5ea6\u5feb\uff0c\u9002\u5408\u591a\u6001\u67e5\u8be2\uff1b\u7f3a\u70b9\u662f\u53ef\u80fd\u5bfc\u81f4\u8868\u5f88\u5927\u3002\u540e\u4e24\u79cd\u65b9\u5f0f\u5c5e\u4e8e\u591a\u8868\u7b56\u7565\uff0c\u5176\u4f18\u70b9\u5728\u4e8e\u6570\u636e\u5b58\u50a8\u7d27\u51d1\uff0c\u5176\u7f3a\u70b9\u662f\u9700\u8981\u8fdb\u884c\u8fde\u63a5\u67e5\u8be2\uff0c\u4e0d\u9002\u5408\u591a\u6001\u67e5\u8be2\u3002\n\n\n139\u3001\u7b80\u8ff0Hibernate\u5e38\u89c1\u4f18\u5316\u7b56\u7565\u3002\n\u7b54\uff1a\u8fd9\u4e2a\u95ee\u9898\u5e94\u5f53\u6311\u81ea\u5df1\u4f7f\u7528\u8fc7\u7684\u4f18\u5316\u7b56\u7565\u56de\u7b54\uff0c\u5e38\u7528\u7684\u6709\uff1a\n\n\u5236\u5b9a\u5408\u7406\u7684\u7f13\u5b58\u7b56\u7565\uff08\u4e8c\u7ea7\u7f13\u5b58\u3001\u67e5\u8be2\u7f13\u5b58\uff09\u3002\n\n\u91c7\u7528\u5408\u7406\u7684Session\u7ba1\u7406\u673a\u5236\u3002\n\n\u5c3d\u91cf\u4f7f\u7528\u5ef6\u8fdf\u52a0\u8f7d\u7279\u6027\u3002\n\n\u8bbe\u5b9a\u5408\u7406\u7684\u6279\u5904\u7406\u53c2\u6570\u3002\n\n\u5982\u679c\u53ef\u4ee5\uff0c\u9009\u7528UUID\u4f5c\u4e3a\u4e3b\u952e\u751f\u6210\u5668\u3002\n\n\u5982\u679c\u53ef\u4ee5\uff0c\u9009\u7528\u57fa\u4e8e\u7248\u672c\u53f7\u7684\u4e50\u89c2\u9501\u66ff\u4ee3\u60b2\u89c2\u9501\u3002\n\n\u5728\u5f00\u53d1\u8fc7\u7a0b\u4e2d, \u5f00\u542fhibernate.show_sql\u9009\u9879\u67e5\u770b\u751f\u6210\u7684SQL\uff0c\u4ece\u800c\u4e86\u89e3\u5e95\u5c42\u7684\u72b6\u51b5\uff1b\u5f00\u53d1\u5b8c\u6210\u540e\u5173\u95ed\u6b64\u9009\u9879\u3002\n\n\u8003\u8651\u6570\u636e\u5e93\u672c\u8eab\u7684\u4f18\u5316\uff0c\u5408\u7406\u7684\u7d22\u5f15\u3001\u6070\u5f53\u7684\u6570\u636e\u5206\u533a\u7b56\u7565\u7b49\u90fd\u4f1a\u5bf9\u6301\u4e45\u5c42\u7684\u6027\u80fd\u5e26\u6765\u53ef\u89c2\u7684\u63d0\u5347\uff0c\u4f46\u8fd9\u4e9b\u9700\u8981\u4e13\u4e1a\u7684DBA\uff08\u6570\u636e\u5e93\u7ba1\u7406\u5458\uff09\u63d0\u4f9b\u652f\u6301\u3002\n\n\n140\u3001\u8c08\u4e00\u8c08Hibernate\u7684\u4e00\u7ea7\u7f13\u5b58\u3001\u4e8c\u7ea7\u7f13\u5b58\u548c\u67e5\u8be2\u7f13\u5b58\u3002\n\u7b54\uff1aHibernate\u7684Session\u63d0\u4f9b\u4e86\u4e00\u7ea7\u7f13\u5b58\u7684\u529f\u80fd\uff0c\u9ed8\u8ba4\u603b\u662f\u6709\u6548\u7684\uff0c\u5f53\u5e94\u7528\u7a0b\u5e8f\u4fdd\u5b58\u6301\u4e45\u5316\u5b9e\u4f53\u3001\u4fee\u6539\u6301\u4e45\u5316\u5b9e\u4f53\u65f6\uff0cSession\u5e76\u4e0d\u4f1a\u7acb\u5373\u628a\u8fd9\u79cd\u6539\u53d8\u63d0\u4ea4\u5230\u6570\u636e\u5e93\uff0c\u800c\u662f\u7f13\u5b58\u5728\u5f53\u524d\u7684Session\u4e2d\uff0c\u9664\u975e\u663e\u793a\u8c03\u7528\u4e86Session\u7684flush()\u65b9\u6cd5\u6216\u901a\u8fc7close()\u65b9\u6cd5\u5173\u95edSession\u3002\u901a\u8fc7\u4e00\u7ea7\u7f13\u5b58\uff0c\u53ef\u4ee5\u51cf\u5c11\u7a0b\u5e8f\u4e0e\u6570\u636e\u5e93\u7684\u4ea4\u4e92\uff0c\u4ece\u800c\u63d0\u9ad8\u6570\u636e\u5e93\u8bbf\u95ee\u6027\u80fd\u3002SessionFactory\u7ea7\u522b\u7684\u4e8c\u7ea7\u7f13\u5b58\u662f\u5168\u5c40\u6027\u7684\uff0c\u6240\u6709\u7684Session\u53ef\u4ee5\u5171\u4eab\u8fd9\u4e2a\u4e8c\u7ea7\u7f13\u5b58\u3002\u4e0d\u8fc7\u4e8c\u7ea7\u7f13\u5b58\u9ed8\u8ba4\u662f\u5173\u95ed\u7684\uff0c\u9700\u8981\u663e\u793a\u5f00\u542f\u5e76\u6307\u5b9a\u9700\u8981\u4f7f\u7528\u54ea\u79cd\u4e8c\u7ea7\u7f13\u5b58\u5b9e\u73b0\u7c7b\uff08\u53ef\u4ee5\u4f7f\u7528\u7b2c\u4e09\u65b9\u63d0\u4f9b\u7684\u5b9e\u73b0\uff09\u3002\u4e00\u65e6\u5f00\u542f\u4e86\u4e8c\u7ea7\u7f13\u5b58\u5e76\u8bbe\u7f6e\u4e86\u9700\u8981\u4f7f\u7528\u4e8c\u7ea7\u7f13\u5b58\u7684\u5b9e\u4f53\u7c7b\uff0cSessionFactory\u5c31\u4f1a\u7f13\u5b58\u8bbf\u95ee\u8fc7\u7684\u8be5\u5b9e\u4f53\u7c7b\u7684\u6bcf\u4e2a\u5bf9\u8c61\uff0c\u9664\u975e\u7f13\u5b58\u7684\u6570\u636e\u8d85\u51fa\u4e86\u6307\u5b9a\u7684\u7f13\u5b58\u7a7a\u95f4\u3002\u4e00\u7ea7\u7f13\u5b58\u548c\u4e8c\u7ea7\u7f13\u5b58\u90fd\u662f\u5bf9\u6574\u4e2a\u5b9e\u4f53\u8fdb\u884c\u7f13\u5b58\uff0c\u4e0d\u4f1a\u7f13\u5b58\u666e\u901a\u5c5e\u6027\uff0c\u5982\u679c\u5e0c\u671b\u5bf9\u666e\u901a\u5c5e\u6027\u8fdb\u884c\u7f13\u5b58\uff0c\u53ef\u4ee5\u4f7f\u7528\u67e5\u8be2\u7f13\u5b58\u3002\u67e5\u8be2\u7f13\u5b58\u662f\u5c06HQL\u6216SQL\u8bed\u53e5\u4ee5\u53ca\u5b83\u4eec\u7684\u67e5\u8be2\u7ed3\u679c\u4f5c\u4e3a\u952e\u503c\u5bf9\u8fdb\u884c\u7f13\u5b58\uff0c\u5bf9\u4e8e\u540c\u6837\u7684\u67e5\u8be2\u53ef\u4ee5\u76f4\u63a5\u4ece\u7f13\u5b58\u4e2d\u83b7\u53d6\u6570\u636e\u3002\u67e5\u8be2\u7f13\u5b58\u9ed8\u8ba4\u4e5f\u662f\u5173\u95ed\u7684\uff0c\u9700\u8981\u663e\u793a\u5f00\u542f\u3002\n141\u3001Hibernate\u4e2dDetachedCriteria\u7c7b\u662f\u505a\u4ec0\u4e48\u7684\uff1f\n\u7b54\uff1aDetachedCriteria\u548cCriteria\u7684\u7528\u6cd5\u57fa\u672c\u4e0a\u662f\u4e00\u81f4\u7684\uff0c\u4f46Criteria\u662f\u7531Session\u7684createCriteria()\u65b9\u6cd5\u521b\u5efa\u7684\uff0c\u4e5f\u5c31\u610f\u5473\u7740\u79bb\u5f00\u521b\u5efa\u5b83\u7684Session\uff0cCriteria\u5c31\u65e0\u6cd5\u4f7f\u7528\u4e86\u3002DetachedCriteria\u4e0d\u9700\u8981Session\u5c31\u53ef\u4ee5\u521b\u5efa\uff08\u4f7f\u7528DetachedCriteria.forClass()\u65b9\u6cd5\u521b\u5efa\uff09\uff0c\u6240\u4ee5\u901a\u5e38\u4e5f\u79f0\u5176\u4e3a\u79bb\u7ebf\u7684Criteria\uff0c\u5728\u9700\u8981\u8fdb\u884c\u67e5\u8be2\u64cd\u4f5c\u7684\u65f6\u5019\u518d\u548cSession\u7ed1\u5b9a\uff08\u8c03\u7528\u5176getExecutableCriteria(Session)\u65b9\u6cd5\uff09\uff0c\u8fd9\u4e5f\u5c31\u610f\u5473\u7740\u4e00\u4e2aDetachedCriteria\u53ef\u4ee5\u5728\u9700\u8981\u7684\u65f6\u5019\u548c\u4e0d\u540c\u7684Session\u8fdb\u884c\u7ed1\u5b9a\u3002\n142\u3001@OneToMany\u6ce8\u89e3\u7684mappedBy\u5c5e\u6027\u6709\u4ec0\u4e48\u4f5c\u7528\uff1f\n\u7b54\uff1a@OneToMany\u7528\u6765\u914d\u7f6e\u4e00\u5bf9\u591a\u5173\u8054\u6620\u5c04\uff0c\u4f46\u901a\u5e38\u60c5\u51b5\u4e0b\uff0c\u4e00\u5bf9\u591a\u5173\u8054\u6620\u5c04\u90fd\u7531\u591a\u7684\u4e00\u65b9\u6765\u7ef4\u62a4\u5173\u8054\u5173\u7cfb\uff0c\u4f8b\u5982\u5b66\u751f\u548c\u73ed\u7ea7\uff0c\u5e94\u8be5\u5728\u5b66\u751f\u7c7b\u4e2d\u6dfb\u52a0\u73ed\u7ea7\u5c5e\u6027\u6765\u7ef4\u6301\u5b66\u751f\u548c\u73ed\u7ea7\u7684\u5173\u8054\u5173\u7cfb\uff08\u5728\u6570\u636e\u5e93\u4e2d\u662f\u7531\u5b66\u751f\u8868\u4e2d\u7684\u5916\u952e\u73ed\u7ea7\u7f16\u53f7\u6765\u7ef4\u62a4\u5b66\u751f\u8868\u548c\u73ed\u7ea7\u8868\u7684\u591a\u5bf9\u4e00\u5173\u7cfb\uff09\uff0c\u5982\u679c\u8981\u4f7f\u7528\u53cc\u5411\u5173\u8054\uff0c\u5728\u73ed\u7ea7\u7c7b\u4e2d\u6dfb\u52a0\u4e00\u4e2a\u5bb9\u5668\u5c5e\u6027\u6765\u5b58\u653e\u5b66\u751f\uff0c\u5e76\u4f7f\u7528@OneToMany\u6ce8\u89e3\u8fdb\u884c\u6620\u5c04\uff0c\u6b64\u65f6mappedBy\u5c5e\u6027\u5c31\u975e\u5e38\u91cd\u8981\u3002\u5982\u679c\u4f7f\u7528XML\u8fdb\u884c\u914d\u7f6e\uff0c\u53ef\u4ee5\u7528\u6807\u7b7e\u7684inverse=\"true\"\u8bbe\u7f6e\u6765\u8fbe\u5230\u540c\u6837\u7684\u6548\u679c\u3002\n143\u3001MyBatis\u4e2d\u4f7f\u7528#\u548c$\u4e66\u5199\u5360\u4f4d\u7b26\u6709\u4ec0\u4e48\u533a\u522b\uff1f\n\u7b54\uff1a\n\u5360\u4f4d\u7b26-\u5c06\u4f20\u5165\u7684\u6570\u636e\u90fd\u5f53\u6210\u4e00\u4e2a\u5b57\u7b26\u4e32\uff0c\u4f1a\u5bf9\u4f20\u5165\u7684\u6570\u636e\u81ea\u52a8\u52a0\u4e0a\u5f15\u53f7\uff1b\n$\u5360\u4f4d\u7b26-\u5c06\u4f20\u5165\u7684\u6570\u636e\u76f4\u63a5\u663e\u793a\u751f\u6210\u5728SQL\u4e2d\u3002\n\u6ce8\u610f\uff1a\u4f7f\u7528$\u5360\u4f4d\u7b26\u53ef\u80fd\u4f1a\u5bfc\u81f4SQL\u6ce8\u5c04\u653b\u51fb\uff0c\u80fd\u7528#\u7684\u5730\u65b9\u5c31\u4e0d\u8981\u4f7f\u7528$\uff0c\u5199order by\u5b50\u53e5\u7684\u65f6\u5019\u5e94\u8be5\u7528$\uff0c\u800c\u4e0d\u662f#\u3002\n144\u3001\u89e3\u91ca\u4e00\u4e0bMyBatis\u4e2d\u547d\u540d\u7a7a\u95f4\uff08namespace\uff09\u7684\u4f5c\u7528\u3002\n\u7b54\uff1a\u5728\u5927\u578b\u9879\u76ee\u4e2d\uff0c\u53ef\u80fd\u5b58\u5728\u5927\u91cf\u7684SQL\u8bed\u53e5\uff0c\u8fd9\u65f6\u5019\u4e3a\u6bcf\u4e2aSQL\u8bed\u53e5\u8d77\u4e00\u4e2a\u552f\u4e00\u7684\u6807\u8bc6\uff08ID\uff09\u5c31\u53d8\u5f97\u5e76\u4e0d\u5bb9\u6613\u4e86\u3002\u4e3a\u4e86\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\uff0c\u5728MyBatis\u4e2d\uff0c\u53ef\u4ee5\u4e3a\u6bcf\u4e2a\u6620\u5c04\u6587\u4ef6\u8d77\u4e00\u4e2a\u552f\u4e00\u7684\u547d\u540d\u7a7a\u95f4\uff0c\u8fd9\u6837\u5b9a\u4e49\u5728\u8fd9\u4e2a\u6620\u5c04\u6587\u4ef6\u4e2d\u7684\u6bcf\u4e2aSQL\u8bed\u53e5\u5c31\u6210\u4e86\u5b9a\u4e49\u5728\u8fd9\u4e2a\u547d\u540d\u7a7a\u95f4\u4e2d\u7684\u4e00\u4e2aID\u3002\u53ea\u8981\u6211\u4eec\u80fd\u591f\u4fdd\u8bc1\u6bcf\u4e2a\u547d\u540d\u7a7a\u95f4\u4e2d\u8fd9\u4e2aID\u662f\u552f\u4e00\u7684\uff0c\u5373\u4f7f\u5728\u4e0d\u540c\u6620\u5c04\u6587\u4ef6\u4e2d\u7684\u8bed\u53e5ID\u76f8\u540c\uff0c\u4e5f\u4e0d\u4f1a\u518d\u4ea7\u751f\u51b2\u7a81\u4e86\u3002\n145\u3001MyBatis\u4e2d\u7684\u52a8\u6001SQL\u662f\u4ec0\u4e48\u610f\u601d\uff1f\n\u7b54\uff1a\u5bf9\u4e8e\u4e00\u4e9b\u590d\u6742\u7684\u67e5\u8be2\uff0c\u6211\u4eec\u53ef\u80fd\u4f1a\u6307\u5b9a\u591a\u4e2a\u67e5\u8be2\u6761\u4ef6\uff0c\u4f46\u662f\u8fd9\u4e9b\u6761\u4ef6\u53ef\u80fd\u5b58\u5728\u4e5f\u53ef\u80fd\u4e0d\u5b58\u5728\uff0c\u4f8b\u5982\u572858\u540c\u57ce\u4e0a\u9762\u627e\u623f\u5b50\uff0c\u6211\u4eec\u53ef\u80fd\u4f1a\u6307\u5b9a\u9762\u79ef\u3001\u697c\u5c42\u548c\u6240\u5728\u4f4d\u7f6e\u6765\u67e5\u627e\u623f\u6e90\uff0c\u4e5f\u53ef\u80fd\u4f1a\u6307\u5b9a\u9762\u79ef\u3001\u4ef7\u683c\u3001\u6237\u578b\u548c\u6240\u5728\u4f4d\u7f6e\u6765\u67e5\u627e\u623f\u6e90\uff0c\u6b64\u65f6\u5c31\u9700\u8981\u6839\u636e\u7528\u6237\u6307\u5b9a\u7684\u6761\u4ef6\u52a8\u6001\u751f\u6210SQL\u8bed\u53e5\u3002\n\u5982\u679c\u4e0d\u4f7f\u7528\u6301\u4e45\u5c42\u6846\u67b6\u6211\u4eec\u53ef\u80fd\u9700\u8981\u81ea\u5df1\u62fc\u88c5SQL\u8bed\u53e5\uff0c\u8fd8\u597dMyBatis\u63d0\u4f9b\u4e86\u52a8\u6001SQL\u7684\u529f\u80fd\u6765\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\u3002\nMyBatis\u4e2d\u7528\u4e8e\u5b9e\u73b0\u52a8\u6001SQL\u7684\u5143\u7d20\u4e3b\u8981\u6709\uff1a\n\nif\n\nchoose / when / otherwise\n\ntrim\n\nwhere\n\nset\n\nforeach\n\n\n\u4e0b\u9762\u662f\u6620\u5c04\u6587\u4ef6\u7684\u7247\u6bb5\u3002\n\n        &lt;select id=\"foo\" parameterType=\"Blog\" resultType=\"Blog\"&gt;\n            select * from t_blog where 1 = 1\n            &lt;if test=\"title != null\"&gt;\n                and title = #{title}\n            &lt;/if&gt;\n            &lt;if test=\"content != null\"&gt;\n                and content = #{content}\n            &lt;/if&gt;\n            &lt;if test=\"owner != null\"&gt;\n                and owner = #{owner}\n            &lt;/if&gt;\n       &lt;/select&gt;\n\u5f53\u7136\u4e5f\u53ef\u4ee5\u50cf\u4e0b\u9762\u8fd9\u4e9b\u4e66\u5199\u3002\n\n        &lt;select id=\"foo\" parameterType=\"Blog\" resultType=\"Blog\"&gt;\n            select * from t_blog where 1 = 1 \n            &lt;choose&gt;\n                &lt;when test=\"title != null\"&gt;\n                    and title = #{title}\n                &lt;/when&gt;\n                &lt;when test=\"content != null\"&gt;\n                    and content = #{content}\n                &lt;/when&gt;\n                &lt;otherwise&gt;\n                    and owner = \"owner1\"\n                &lt;/otherwise&gt;\n            &lt;/choose&gt;\n        &lt;/select&gt;\n\u518d\u770b\u770b\u4e0b\u9762\u8fd9\u4e2a\u4f8b\u5b50\u3002\n\n        &lt;select id=\"bar\" resultType=\"Blog\"&gt;\n            select * from t_blog where id in\n            &lt;foreach collection=\"array\" index=\"index\" \n                item=\"item\" open=\"(\" separator=\",\" close=\")\"&gt;\n                #{item}\n            &lt;/foreach&gt;\n        &lt;/select&gt;\n146\u3001\u4ec0\u4e48\u662fIoC\u548cDI\uff1fDI\u662f\u5982\u4f55\u5b9e\u73b0\u7684\uff1f\n\u7b54\uff1aIoC\u53eb\u63a7\u5236\u53cd\u8f6c\uff0c\u662fInversion of Control\u7684\u7f29\u5199\uff0cDI\uff08Dependency Injection\uff09\u53eb\u4f9d\u8d56\u6ce8\u5165\uff0c\u662f\u5bf9IoC\u66f4\u7b80\u5355\u7684\u8be0\u91ca\u3002\u63a7\u5236\u53cd\u8f6c\u662f\u628a\u4f20\u7edf\u4e0a\u7531\u7a0b\u5e8f\u4ee3\u7801\u76f4\u63a5\u64cd\u63a7\u7684\u5bf9\u8c61\u7684\u8c03\u7528\u6743\u4ea4\u7ed9\u5bb9\u5668\uff0c\u901a\u8fc7\u5bb9\u5668\u6765\u5b9e\u73b0\u5bf9\u8c61\u7ec4\u4ef6\u7684\u88c5\u914d\u548c\u7ba1\u7406\u3002\u6240\u8c13\u7684\"\u63a7\u5236\u53cd\u8f6c\"\u5c31\u662f\u5bf9\u7ec4\u4ef6\u5bf9\u8c61\u63a7\u5236\u6743\u7684\u8f6c\u79fb\uff0c\u4ece\u7a0b\u5e8f\u4ee3\u7801\u672c\u8eab\u8f6c\u79fb\u5230\u4e86\u5916\u90e8\u5bb9\u5668\uff0c\u7531\u5bb9\u5668\u6765\u521b\u5efa\u5bf9\u8c61\u5e76\u7ba1\u7406\u5bf9\u8c61\u4e4b\u95f4\u7684\u4f9d\u8d56\u5173\u7cfb\u3002IoC\u4f53\u73b0\u4e86\u597d\u83b1\u575e\u539f\u5219 - \"Don\u2019t call me, we will call you\"\u3002\u4f9d\u8d56\u6ce8\u5165\u7684\u57fa\u672c\u539f\u5219\u662f\u5e94\u7528\u7ec4\u4ef6\u4e0d\u5e94\u8be5\u8d1f\u8d23\u67e5\u627e\u8d44\u6e90\u6216\u8005\u5176\u4ed6\u4f9d\u8d56\u7684\u534f\u4f5c\u5bf9\u8c61\u3002\u914d\u7f6e\u5bf9\u8c61\u7684\u5de5\u4f5c\u5e94\u8be5\u7531\u5bb9\u5668\u8d1f\u8d23\uff0c\u67e5\u627e\u8d44\u6e90\u7684\u903b\u8f91\u5e94\u8be5\u4ece\u5e94\u7528\u7ec4\u4ef6\u7684\u4ee3\u7801\u4e2d\u62bd\u53d6\u51fa\u6765\uff0c\u4ea4\u7ed9\u5bb9\u5668\u6765\u5b8c\u6210\u3002DI\u662f\u5bf9IoC\u66f4\u51c6\u786e\u7684\u63cf\u8ff0\uff0c\u5373\u7ec4\u4ef6\u4e4b\u95f4\u7684\u4f9d\u8d56\u5173\u7cfb\u7531\u5bb9\u5668\u5728\u8fd0\u884c\u671f\u51b3\u5b9a\uff0c\u5f62\u8c61\u7684\u6765\u8bf4\uff0c\u5373\u7531\u5bb9\u5668\u52a8\u6001\u7684\u5c06\u67d0\u79cd\u4f9d\u8d56\u5173\u7cfb\u6ce8\u5165\u5230\u7ec4\u4ef6\u4e4b\u4e2d\u3002\n\u4e3e\u4e2a\u4f8b\u5b50\uff1a\u4e00\u4e2a\u7c7bA\u9700\u8981\u7528\u5230\u63a5\u53e3B\u4e2d\u7684\u65b9\u6cd5\uff0c\u90a3\u4e48\u5c31\u9700\u8981\u4e3a\u7c7bA\u548c\u63a5\u53e3B\u5efa\u7acb\u5173\u8054\u6216\u4f9d\u8d56\u5173\u7cfb\uff0c\u6700\u539f\u59cb\u7684\u65b9\u6cd5\u662f\u5728\u7c7bA\u4e2d\u521b\u5efa\u4e00\u4e2a\u63a5\u53e3B\u7684\u5b9e\u73b0\u7c7bC\u7684\u5b9e\u4f8b\uff0c\u4f46\u8fd9\u79cd\u65b9\u6cd5\u9700\u8981\u5f00\u53d1\u4eba\u5458\u81ea\u884c\u7ef4\u62a4\u4e8c\u8005\u7684\u4f9d\u8d56\u5173\u7cfb\uff0c\u4e5f\u5c31\u662f\u8bf4\u5f53\u4f9d\u8d56\u5173\u7cfb\u53d1\u751f\u53d8\u52a8\u7684\u65f6\u5019\u9700\u8981\u4fee\u6539\u4ee3\u7801\u5e76\u91cd\u65b0\u6784\u5efa\u6574\u4e2a\u7cfb\u7edf\u3002\u5982\u679c\u901a\u8fc7\u4e00\u4e2a\u5bb9\u5668\u6765\u7ba1\u7406\u8fd9\u4e9b\u5bf9\u8c61\u4ee5\u53ca\u5bf9\u8c61\u7684\u4f9d\u8d56\u5173\u7cfb\uff0c\u5219\u53ea\u9700\u8981\u5728\u7c7bA\u4e2d\u5b9a\u4e49\u597d\u7528\u4e8e\u5173\u8054\u63a5\u53e3B\u7684\u65b9\u6cd5\uff08\u6784\u9020\u5668\u6216setter\u65b9\u6cd5\uff09\uff0c\u5c06\u7c7bA\u548c\u63a5\u53e3B\u7684\u5b9e\u73b0\u7c7bC\u653e\u5165\u5bb9\u5668\u4e2d\uff0c\u901a\u8fc7\u5bf9\u5bb9\u5668\u7684\u914d\u7f6e\u6765\u5b9e\u73b0\u4e8c\u8005\u7684\u5173\u8054\u3002\n\u4f9d\u8d56\u6ce8\u5165\u53ef\u4ee5\u901a\u8fc7setter\u65b9\u6cd5\u6ce8\u5165\uff08\u8bbe\u503c\u6ce8\u5165\uff09\u3001\u6784\u9020\u5668\u6ce8\u5165\u548c\u63a5\u53e3\u6ce8\u5165\u4e09\u79cd\u65b9\u5f0f\u6765\u5b9e\u73b0\uff0cSpring\u652f\u6301setter\u6ce8\u5165\u548c\u6784\u9020\u5668\u6ce8\u5165\uff0c\u901a\u5e38\u4f7f\u7528\u6784\u9020\u5668\u6ce8\u5165\u6765\u6ce8\u5165\u5fc5\u987b\u7684\u4f9d\u8d56\u5173\u7cfb\uff0c\u5bf9\u4e8e\u53ef\u9009\u7684\u4f9d\u8d56\u5173\u7cfb\uff0c\u5219setter\u6ce8\u5165\u662f\u66f4\u597d\u7684\u9009\u62e9\uff0csetter\u6ce8\u5165\u9700\u8981\u7c7b\u63d0\u4f9b\u65e0\u53c2\u6784\u9020\u5668\u6216\u8005\u65e0\u53c2\u7684\u9759\u6001\u5de5\u5382\u65b9\u6cd5\u6765\u521b\u5efa\u5bf9\u8c61\u3002\n147\u3001Spring\u4e2dBean\u7684\u4f5c\u7528\u57df\u6709\u54ea\u4e9b\uff1f\n\u7b54\uff1a\u5728Spring\u7684\u65e9\u671f\u7248\u672c\u4e2d\uff0c\u4ec5\u6709\u4e24\u4e2a\u4f5c\u7528\u57df\uff1asingleton\u548cprototype\uff0c\u524d\u8005\u8868\u793aBean\u4ee5\u5355\u4f8b\u7684\u65b9\u5f0f\u5b58\u5728\uff1b\u540e\u8005\u8868\u793a\u6bcf\u6b21\u4ece\u5bb9\u5668\u4e2d\u8c03\u7528Bean\u65f6\uff0c\u90fd\u4f1a\u8fd4\u56de\u4e00\u4e2a\u65b0\u7684\u5b9e\u4f8b\uff0cprototype\u901a\u5e38\u7ffb\u8bd1\u4e3a\u539f\u578b\u3002\n\u8865\u5145\uff1a\u8bbe\u8ba1\u6a21\u5f0f\u4e2d\u7684\u521b\u5efa\u578b\u6a21\u5f0f\u4e2d\u4e5f\u6709\u4e00\u4e2a\u539f\u578b\u6a21\u5f0f\uff0c\u539f\u578b\u6a21\u5f0f\u4e5f\u662f\u4e00\u4e2a\u5e38\u7528\u7684\u6a21\u5f0f\uff0c\u4f8b\u5982\u505a\u4e00\u4e2a\u5ba4\u5185\u8bbe\u8ba1\u8f6f\u4ef6\uff0c\u6240\u6709\u7684\u7d20\u6750\u90fd\u5728\u5de5\u5177\u7bb1\u4e2d\uff0c\u800c\u6bcf\u6b21\u4ece\u5de5\u5177\u7bb1\u4e2d\u53d6\u51fa\u7684\u90fd\u662f\u7d20\u6750\u5bf9\u8c61\u7684\u4e00\u4e2a\u539f\u578b\uff0c\u53ef\u4ee5\u901a\u8fc7\u5bf9\u8c61\u514b\u9686\u6765\u5b9e\u73b0\u539f\u578b\u6a21\u5f0f\u3002\nSpring 2.x\u4e2d\u9488\u5bf9WebApplicationContext\u65b0\u589e\u4e863\u4e2a\u4f5c\u7528\u57df\uff0c\u5206\u522b\u662f\uff1arequest\uff08\u6bcf\u6b21HTTP\u8bf7\u6c42\u90fd\u4f1a\u521b\u5efa\u4e00\u4e2a\u65b0\u7684Bean\uff09\u3001session\uff08\u540c\u4e00\u4e2aHttpSession\u5171\u4eab\u540c\u4e00\u4e2aBean\uff0c\u4e0d\u540c\u7684HttpSession\u4f7f\u7528\u4e0d\u540c\u7684Bean\uff09\u548cglobalSession\uff08\u540c\u4e00\u4e2a\u5168\u5c40Session\u5171\u4eab\u4e00\u4e2aBean\uff09\u3002\n\u8bf4\u660e\uff1a\u5355\u4f8b\u6a21\u5f0f\u548c\u539f\u578b\u6a21\u5f0f\u90fd\u662f\u91cd\u8981\u7684\u8bbe\u8ba1\u6a21\u5f0f\u3002\u4e00\u822c\u60c5\u51b5\u4e0b\uff0c\u65e0\u72b6\u6001\u6216\u72b6\u6001\u4e0d\u53ef\u53d8\u7684\u7c7b\u9002\u5408\u4f7f\u7528\u5355\u4f8b\u6a21\u5f0f\u3002\u5728\u4f20\u7edf\u5f00\u53d1\u4e2d\uff0c\u7531\u4e8eDAO\u6301\u6709Connection\u8fd9\u4e2a\u975e\u7ebf\u7a0b\u5b89\u5168\u5bf9\u8c61\u56e0\u800c\u6ca1\u6709\u4f7f\u7528\u5355\u4f8b\u6a21\u5f0f\uff1b\u4f46\u5728Spring\u73af\u5883\u4e0b\uff0c\u6240\u6709DAO\u7c7b\u5bf9\u53ef\u4ee5\u91c7\u7528\u5355\u4f8b\u6a21\u5f0f\uff0c\u56e0\u4e3aSpring\u5229\u7528AOP\u548cjava API\u4e2d\u7684ThreadLocal\u5bf9\u975e\u7ebf\u7a0b\u5b89\u5168\u7684\u5bf9\u8c61\u8fdb\u884c\u4e86\u7279\u6b8a\u5904\u7406\u3002\nThreadLocal\u4e3a\u89e3\u51b3\u591a\u7ebf\u7a0b\u7a0b\u5e8f\u7684\u5e76\u53d1\u95ee\u9898\u63d0\u4f9b\u4e86\u4e00\u79cd\u65b0\u7684\u601d\u8def\u3002ThreadLocal\uff0c\u987e\u540d\u601d\u4e49\u662f\u7ebf\u7a0b\u7684\u4e00\u4e2a\u672c\u5730\u5316\u5bf9\u8c61\uff0c\u5f53\u5de5\u4f5c\u4e8e\u591a\u7ebf\u7a0b\u4e2d\u7684\u5bf9\u8c61\u4f7f\u7528ThreadLocal\u7ef4\u62a4\u53d8\u91cf\u65f6\uff0cThreadLocal\u4e3a\u6bcf\u4e2a\u4f7f\u7528\u8be5\u53d8\u91cf\u7684\u7ebf\u7a0b\u5206\u914d\u4e00\u4e2a\u72ec\u7acb\u7684\u53d8\u91cf\u526f\u672c\uff0c\u6240\u4ee5\u6bcf\u4e00\u4e2a\u7ebf\u7a0b\u90fd\u53ef\u4ee5\u72ec\u7acb\u7684\u6539\u53d8\u81ea\u5df1\u7684\u526f\u672c\uff0c\u800c\u4e0d\u5f71\u54cd\u5176\u4ed6\u7ebf\u7a0b\u6240\u5bf9\u5e94\u7684\u526f\u672c\u3002\u4ece\u7ebf\u7a0b\u7684\u89d2\u5ea6\u770b\uff0c\u8fd9\u4e2a\u53d8\u91cf\u5c31\u50cf\u662f\u7ebf\u7a0b\u7684\u672c\u5730\u53d8\u91cf\u3002\nThreadLocal\u7c7b\u975e\u5e38\u7b80\u5355\u597d\u7528\uff0c\u53ea\u6709\u56db\u4e2a\u65b9\u6cd5\uff0c\u80fd\u7528\u4e0a\u7684\u4e5f\u5c31\u662f\u4e0b\u9762\u4e09\u4e2a\u65b9\u6cd5\uff1a\n\nvoid set(T value)\uff1a\u8bbe\u7f6e\u5f53\u524d\u7ebf\u7a0b\u7684\u7ebf\u7a0b\u5c40\u90e8\u53d8\u91cf\u7684\u503c\u3002\n\nT get()\uff1a\u83b7\u5f97\u5f53\u524d\u7ebf\u7a0b\u6240\u5bf9\u5e94\u7684\u7ebf\u7a0b\u5c40\u90e8\u53d8\u91cf\u7684\u503c\u3002\n\nvoid remove()\uff1a\u5220\u9664\u5f53\u524d\u7ebf\u7a0b\u4e2d\u7ebf\u7a0b\u5c40\u90e8\u53d8\u91cf\u7684\u503c\u3002\n\n\nThreadLocal\u662f\u5982\u4f55\u505a\u5230\u4e3a\u6bcf\u4e00\u4e2a\u7ebf\u7a0b\u7ef4\u62a4\u4e00\u4efd\u72ec\u7acb\u7684\u53d8\u91cf\u526f\u672c\u7684\u5462\uff1f\n\n1.\u6bcf\u4e2aThread\u7c7b\u5bf9\u8c61\u90fd\u6709\u4e00\u4e2a\u5b57\u6bb5\uff1aThreadLocalMap \u5bf9\u8c61\n\n2.ThreadLocal\u7684set()\u65b9\u6cd5\uff0c\u662f\u628a\u5f53\u524d\u7ebf\u7a0b\u7684\u6570\u636e\u526f\u672c\u4fdd\u5b58\u5728\u5f53\u524d\u7ebf\u7a0b\u7684ThreadLocalMap\u5b57\u6bb5\u91cc\u9762\uff0cThreadLocalMap\u8fd9\u4e2a\u5b57\u6bb5\u7c7b\u4f3cHashMap\uff0c\u5b58\u8fdb\u53bb\u7684\u65f6\u5019\uff0ckey\u662fThreadLocal\u5bf9\u8c61\uff0c\n\n\n\u5728ThreadLocal\u7c7b\u4e2d\u6709\u4e00\u4e2aMap\uff0c\u952e\u4e3a\u7ebf\u7a0b\u5bf9\u8c61\uff0c\u503c\u662f\u5176\u7ebf\u7a0b\u5bf9\u5e94\u7684\u53d8\u91cf\u7684\u526f\u672c\uff0c\u81ea\u5df1\u8981\u6a21\u62df\u5b9e\u73b0\u4e00\u4e2aThreadLocal\u7c7b\u5176\u5b9e\u5e76\u4e0d\u56f0\u96be\uff0c\u4ee3\u7801\u5982\u4e0b\u6240\u793a\uff1a\n\n    import java.util.Collections;\n    import java.util.HashMap;\n    import java.util.Map;\n\n    public class MyThreadLocal&lt;T&gt; {\n        private Map&lt;Thread, T&gt; map = Collections.synchronizedMap(new HashMap&lt;Thread, T&gt;());\n\n        public void set(T newValue) {\n            map.put(Thread.currentThread(), newValue);\n        }\n\n        public T get() {\n            return map.get(Thread.currentThread());\n        }\n\n        public void remove() {\n            map.remove(Thread.currentThread());\n        }\n    }\n148\u3001\u89e3\u91ca\u4e00\u4e0b\u4ec0\u4e48\u53ebAOP\uff08\u9762\u5411\u5207\u9762\u7f16\u7a0b\uff09\uff1f\n\u7b54\uff1aAOP\uff08Aspect-Oriented Programming\uff09\u6307\u4e00\u79cd\u7a0b\u5e8f\u8bbe\u8ba1\u8303\u578b\uff0c\u8be5\u8303\u578b\u4ee5\u4e00\u79cd\u79f0\u4e3a\u5207\u9762\uff08aspect\uff09\u7684\u8bed\u8a00\u6784\u9020\u4e3a\u57fa\u7840\uff0c\u5207\u9762\u662f\u4e00\u79cd\u65b0\u7684\u6a21\u5757\u5316\u673a\u5236\uff0c\u7528\u6765\u63cf\u8ff0\u5206\u6563\u5728\u5bf9\u8c61\u3001\u7c7b\u6216\u65b9\u6cd5\u4e2d\u7684\u6a2a\u5207\u5173\u6ce8\u70b9\uff08crosscutting concern\uff09\u3002\n149\u3001\u4f60\u662f\u5982\u4f55\u7406\u89e3\"\u6a2a\u5207\u5173\u6ce8\"\u8fd9\u4e2a\u6982\u5ff5\u7684\uff1f\n\u7b54\uff1a\"\u6a2a\u5207\u5173\u6ce8\"\u662f\u4f1a\u5f71\u54cd\u5230\u6574\u4e2a\u5e94\u7528\u7a0b\u5e8f\u7684\u5173\u6ce8\u529f\u80fd\uff0c\u5b83\u8ddf\u6b63\u5e38\u7684\u4e1a\u52a1\u903b\u8f91\u662f\u6b63\u4ea4\u7684\uff0c\u6ca1\u6709\u5fc5\u7136\u7684\u8054\u7cfb\uff0c\u4f46\u662f\u51e0\u4e4e\u6240\u6709\u7684\u4e1a\u52a1\u903b\u8f91\u90fd\u4f1a\u6d89\u53ca\u5230\u8fd9\u4e9b\u5173\u6ce8\u529f\u80fd\u3002\u901a\u5e38\uff0c\u4e8b\u52a1\u3001\u65e5\u5fd7\u3001\u5b89\u5168\u6027\u7b49\u5173\u6ce8\u5c31\u662f\u5e94\u7528\u4e2d\u7684\u6a2a\u5207\u5173\u6ce8\u529f\u80fd\u3002\n150\u3001\u4f60\u5982\u4f55\u7406\u89e3AOP\u4e2d\u7684\u8fde\u63a5\u70b9\uff08Joinpoint\uff09\u3001\u5207\u70b9\uff08Pointcut\uff09\u3001\u589e\u5f3a\uff08Advice\uff09\u3001\u5f15\u4ecb\uff08Introduction\uff09\u3001\u7ec7\u5165\uff08Weaving\uff09\u3001\u5207\u9762\uff08Aspect\uff09\u8fd9\u4e9b\u6982\u5ff5\uff1f\n\u7b54\uff1a\n\n\u8fde\u63a5\u70b9\uff08Joinpoint\uff09\uff1a\u7a0b\u5e8f\u6267\u884c\u7684\u67d0\u4e2a\u7279\u5b9a\u4f4d\u7f6e\uff08\u5982\uff1a\u67d0\u4e2a\u65b9\u6cd5\u8c03\u7528\u524d\u3001\u8c03\u7528\u540e\uff0c\u65b9\u6cd5\u629b\u51fa\u5f02\u5e38\u540e\uff09\u3002\u4e00\u4e2a\u7c7b\u6216\u4e00\u6bb5\u7a0b\u5e8f\u4ee3\u7801\u62e5\u6709\u4e00\u4e9b\u5177\u6709\u8fb9\u754c\u6027\u8d28\u7684\u7279\u5b9a\u70b9\uff0c\u8fd9\u4e9b\u4ee3\u7801\u4e2d\u7684\u7279\u5b9a\u70b9\u5c31\u662f\u8fde\u63a5\u70b9\u3002Spring\u4ec5\u652f\u6301\u65b9\u6cd5\u7684\u8fde\u63a5\u70b9\u3002\n\n\u5207\u70b9\uff08Pointcut\uff09\uff1a\u5982\u679c\u8fde\u63a5\u70b9\u76f8\u5f53\u4e8e\u6570\u636e\u4e2d\u7684\u8bb0\u5f55\uff0c\u90a3\u4e48\u5207\u70b9\u76f8\u5f53\u4e8e\u67e5\u8be2\u6761\u4ef6\uff0c\u4e00\u4e2a\u5207\u70b9\u53ef\u4ee5\u5339\u914d\u591a\u4e2a\u8fde\u63a5\u70b9\u3002Spring AOP\u7684\u89c4\u5219\u89e3\u6790\u5f15\u64ce\u8d1f\u8d23\u89e3\u6790\u5207\u70b9\u6240\u8bbe\u5b9a\u7684\u67e5\u8be2\u6761\u4ef6\uff0c\u627e\u5230\u5bf9\u5e94\u7684\u8fde\u63a5\u70b9\u3002\n\n\u589e\u5f3a\uff08Advice\uff09\uff1a\u589e\u5f3a\u662f\u7ec7\u5165\u5230\u76ee\u6807\u7c7b\u8fde\u63a5\u70b9\u4e0a\u7684\u4e00\u6bb5\u7a0b\u5e8f\u4ee3\u7801\u3002\n\nSpring\u63d0\u4f9b\u7684\u589e\u5f3a\u63a5\u53e3\u90fd\u662f\u5e26\u65b9\u4f4d\u540d\u7684\uff0c\u5982\uff1aBeforeAdvice\u3001AfterReturningAdvice\u3001ThrowsAdvice\u7b49\u3002\u5f88\u591a\u8d44\u6599\u4e0a\u5c06\u589e\u5f3a\u8bd1\u4e3a\u201c\u901a\u77e5\u201d\uff0c\u8fd9\u660e\u663e\u662f\u4e2a\u8bcd\u4e0d\u8fbe\u610f\u7684\u7ffb\u8bd1\uff0c\u8ba9\u5f88\u591a\u7a0b\u5e8f\u5458\u56f0\u60d1\u4e86\u8bb8\u4e45\u3002\n\n\u8bf4\u660e\uff1a Advice\u5728\u56fd\u5185\u7684\u5f88\u591a\u4e66\u9762\u8d44\u6599\u4e2d\u90fd\u88ab\u7ffb\u8bd1\u6210\"\u901a\u77e5\"\uff0c\u4f46\u662f\u5f88\u663e\u7136\u8fd9\u4e2a\u7ffb\u8bd1\u65e0\u6cd5\u8868\u8fbe\u5176\u672c\u8d28\uff0c\u6709\u5c11\u91cf\u7684\u8bfb\u7269\u4e0a\u5c06\u8fd9\u4e2a\u8bcd\u7ffb\u8bd1\u4e3a\"\u589e\u5f3a\"\uff0c\u8fd9\u4e2a\u7ffb\u8bd1\u662f\u5bf9Advice\u8f83\u4e3a\u51c6\u786e\u7684\u8be0\u91ca\uff0c\u6211\u4eec\u901a\u8fc7AOP\u5c06\u6a2a\u5207\u5173\u6ce8\u529f\u80fd\u52a0\u5230\u539f\u6709\u7684\u4e1a\u52a1\u903b\u8f91\u4e0a\uff0c\u8fd9\u5c31\u662f\u5bf9\u539f\u6709\u4e1a\u52a1\u903b\u8f91\u7684\u4e00\u79cd\u589e\u5f3a\uff0c\u8fd9\u79cd\u589e\u5f3a\u53ef\u4ee5\u662f\u524d\u7f6e\u589e\u5f3a\u3001\u540e\u7f6e\u589e\u5f3a\u3001\u8fd4\u56de\u540e\u589e\u5f3a\u3001\u629b\u5f02\u5e38\u65f6\u589e\u5f3a\u548c\u5305\u56f4\u578b\u589e\u5f3a\u3002\n\n\u5f15\u4ecb\uff08Introduction\uff09\uff1a\u5f15\u4ecb\u662f\u4e00\u79cd\u7279\u6b8a\u7684\u589e\u5f3a\uff0c\u5b83\u4e3a\u7c7b\u6dfb\u52a0\u4e00\u4e9b\u5c5e\u6027\u548c\u65b9\u6cd5\u3002\u8fd9\u6837\uff0c\u5373\u4f7f\u4e00\u4e2a\u4e1a\u52a1\u7c7b\u539f\u672c\u6ca1\u6709\u5b9e\u73b0\u67d0\u4e2a\u63a5\u53e3\uff0c\u901a\u8fc7\u5f15\u4ecb\u529f\u80fd\uff0c\u53ef\u4ee5\u52a8\u6001\u7684\u672a\u8be5\u4e1a\u52a1\u7c7b\u6dfb\u52a0\u63a5\u53e3\u7684\u5b9e\u73b0\u903b\u8f91\uff0c\u8ba9\u4e1a\u52a1\u7c7b\u6210\u4e3a\u8fd9\u4e2a\u63a5\u53e3\u7684\u5b9e\u73b0\u7c7b\u3002\n\n\u7ec7\u5165\uff08Weaving\uff09\uff1a\u7ec7\u5165\u662f\u5c06\u589e\u5f3a\u6dfb\u52a0\u5230\u76ee\u6807\u7c7b\u5177\u4f53\u8fde\u63a5\u70b9\u4e0a\u7684\u8fc7\u7a0b\uff0cAOP\u6709\u4e09\u79cd\u7ec7\u5165\u65b9\u5f0f\uff1a\n\n\u2460\u7f16\u8bd1\u671f\u7ec7\u5165\uff1a\u9700\u8981\u7279\u6b8a\u7684Java\u7f16\u8bd1\u671f\uff08\u4f8b\u5982AspectJ\u7684ajc\uff09\uff1b\n\n\u2461\u88c5\u8f7d\u671f\u7ec7\u5165\uff1a\u8981\u6c42\u4f7f\u7528\u7279\u6b8a\u7684\u7c7b\u52a0\u8f7d\u5668\uff0c\u5728\u88c5\u8f7d\u7c7b\u7684\u65f6\u5019\u5bf9\u7c7b\u8fdb\u884c\u589e\u5f3a\uff1b\n\n\u2462\u8fd0\u884c\u65f6\u7ec7\u5165\uff1a\u5728\u8fd0\u884c\u65f6\u4e3a\u76ee\u6807\u7c7b\u751f\u6210\u4ee3\u7406\u5b9e\u73b0\u589e\u5f3a\u3002Spring\u91c7\u7528\u4e86\u52a8\u6001\u4ee3\u7406\u7684\u65b9\u5f0f\u5b9e\u73b0\u4e86\u8fd0\u884c\u65f6\u7ec7\u5165\uff0c\u800cAspectJ\u91c7\u7528\u4e86\u7f16\u8bd1\u671f\u7ec7\u5165\u548c\u88c5\u8f7d\u671f\u7ec7\u5165\u7684\u65b9\u5f0f\u3002\n\u5207\u9762\uff08Aspect\uff09\uff1a\u5207\u9762\u662f\u7531\u5207\u70b9\u548c\u589e\u5f3a\uff08\u5f15\u4ecb\uff09\u7ec4\u6210\u7684\uff0c\u5b83\u5305\u62ec\u4e86\u5bf9\u6a2a\u5207\u5173\u6ce8\u529f\u80fd\u7684\u5b9a\u4e49\uff0c\u4e5f\u5305\u62ec\u4e86\u5bf9\u8fde\u63a5\u70b9\u7684\u5b9a\u4e49\u3002\n\n\n\u8865\u5145\uff1a\u4ee3\u7406\u6a21\u5f0f\u662fGoF\u63d0\u51fa\u768423\u79cd\u8bbe\u8ba1\u6a21\u5f0f\u4e2d\u6700\u4e3a\u7ecf\u5178\u7684\u6a21\u5f0f\u4e4b\u4e00\uff0c\u4ee3\u7406\u6a21\u5f0f\u662f\u5bf9\u8c61\u7684\u7ed3\u6784\u6a21\u5f0f\uff0c\u5b83\u7ed9\u67d0\u4e00\u4e2a\u5bf9\u8c61\u63d0\u4f9b\u4e00\u4e2a\u4ee3\u7406\u5bf9\u8c61\uff0c\u5e76\u7531\u4ee3\u7406\u5bf9\u8c61\u63a7\u5236\u5bf9\u539f\u5bf9\u8c61\u7684\u5f15\u7528\u3002\u7b80\u5355\u7684\u8bf4\uff0c\u4ee3\u7406\u5bf9\u8c61\u53ef\u4ee5\u5b8c\u6210\u6bd4\u539f\u5bf9\u8c61\u66f4\u591a\u7684\u804c\u8d23\uff0c\u5f53\u9700\u8981\u4e3a\u539f\u5bf9\u8c61\u6dfb\u52a0\u6a2a\u5207\u5173\u6ce8\u529f\u80fd\u65f6\uff0c\u5c31\u53ef\u4ee5\u4f7f\u7528\u539f\u5bf9\u8c61\u7684\u4ee3\u7406\u5bf9\u8c61\u3002\u6211\u4eec\u5728\u6253\u5f00Office\u7cfb\u5217\u7684Word\u6587\u6863\u65f6\uff0c\u5982\u679c\u6587\u6863\u4e2d\u6709\u63d2\u56fe\uff0c\u5f53\u6587\u6863\u521a\u52a0\u8f7d\u65f6\uff0c\u6587\u6863\u4e2d\u7684\u63d2\u56fe\u90fd\u53ea\u662f\u4e00\u4e2a\u865a\u6846\u5360\u4f4d\u7b26\uff0c\u7b49\u7528\u6237\u771f\u6b63\u7ffb\u5230\u67d0\u9875\u8981\u67e5\u770b\u8be5\u56fe\u7247\u65f6\uff0c\u624d\u4f1a\u771f\u6b63\u52a0\u8f7d\u8fd9\u5f20\u56fe\uff0c\u8fd9\u5176\u5b9e\u5c31\u662f\u5bf9\u4ee3\u7406\u6a21\u5f0f\u7684\u4f7f\u7528\uff0c\u4ee3\u66ff\u771f\u6b63\u56fe\u7247\u7684\u865a\u6846\u5c31\u662f\u4e00\u4e2a\u865a\u62df\u4ee3\u7406\uff1bHibernate\u7684load\u65b9\u6cd5\u4e5f\u662f\u8fd4\u56de\u4e00\u4e2a\u865a\u62df\u4ee3\u7406\u5bf9\u8c61\uff0c\u7b49\u7528\u6237\u771f\u6b63\u9700\u8981\u8bbf\u95ee\u5bf9\u8c61\u7684\u5c5e\u6027\u65f6\uff0c\u624d\u5411\u6570\u636e\u5e93\u53d1\u51faSQL\u8bed\u53e5\u83b7\u5f97\u771f\u5b9e\u5bf9\u8c61\u3002\n\u4e0b\u9762\u7528\u4e00\u4e2a\u627e\u67aa\u624b\u4ee3\u8003\u7684\u4f8b\u5b50\u6f14\u793a\u4ee3\u7406\u6a21\u5f0f\u7684\u4f7f\u7528\uff1a\n\n    /**\n     * \u53c2\u8003\u4eba\u5458\u63a5\u53e3\n     * @author \u9a86\u660a\n     *\n     */\n    public interface Candidate {\n\n        /**\n         * \u7b54\u9898\n         */\n        public void answerTheQuestions();\n    }\n\n    /**\n     * \u61d2\u5b66\u751f\n     * @author \u9a86\u660a\n     *\n     */\n    public class LazyStudent implements Candidate {\n        private String name;        // \u59d3\u540d\n\n        public LazyStudent(String name) {\n            this.name = name;\n        }\n\n        @Override\n        public void answerTheQuestions() {\n            // \u61d2\u5b66\u751f\u53ea\u80fd\u5199\u51fa\u81ea\u5df1\u7684\u540d\u5b57\u4e0d\u4f1a\u7b54\u9898\n            System.out.println(\"\u59d3\u540d: \" + name);\n        }\n\n    }\n\n    /**\n     * \u67aa\u624b\n     * @author \u9a86\u660a\n     *\n     */\n    public class Gunman implements Candidate {\n        private Candidate target;   // \u88ab\u4ee3\u7406\u5bf9\u8c61\n\n        public Gunman(Candidate target) {\n            this.target = target;\n        }\n\n        @Override\n        public void answerTheQuestions() {\n            // \u67aa\u624b\u8981\u5199\u4e0a\u4ee3\u8003\u7684\u5b66\u751f\u7684\u59d3\u540d\n            target.answerTheQuestions();\n            // \u67aa\u624b\u8981\u5e2e\u52a9\u61d2\u5b66\u751f\u7b54\u9898\u5e76\u4ea4\u5377\n            System.out.println(\"\u594b\u7b14\u75be\u4e66\u6b63\u786e\u7b54\u6848\");\n            System.out.println(\"\u4ea4\u5377\");\n        }\n\n    }\n\n    public class ProxyTest1 {\n\n        public static void main(String[] args) {\n            Candidate c = new Gunman(new LazyStudent(\"\u738b\u5c0f\u4e8c\"));\n            c.answerTheQuestions();\n        }\n    }\n\u8bf4\u660e\uff1a\u4eceJDK 1.3\u5f00\u59cb\uff0cJava\u63d0\u4f9b\u4e86\u52a8\u6001\u4ee3\u7406\u6280\u672f\uff0c\u5141\u8bb8\u5f00\u53d1\u8005\u5728\u8fd0\u884c\u65f6\u521b\u5efa\u63a5\u53e3\u7684\u4ee3\u7406\u5b9e\u4f8b\uff0c\u4e3b\u8981\u5305\u62ecProxy\u7c7b\u548cInvocationHandler\u63a5\u53e3\u3002\u4e0b\u9762\u7684\u4f8b\u5b50\u4f7f\u7528\u52a8\u6001\u4ee3\u7406\u4e3aArrayList\u7f16\u5199\u4e00\u4e2a\u4ee3\u7406\uff0c\u5728\u6dfb\u52a0\u548c\u5220\u9664\u5143\u7d20\u65f6\uff0c\u5728\u63a7\u5236\u53f0\u6253\u5370\u6dfb\u52a0\u6216\u5220\u9664\u7684\u5143\u7d20\u4ee5\u53caArrayList\u7684\u5927\u5c0f\uff1a\n\n    import java.lang.reflect.InvocationHandler;\n    import java.lang.reflect.Method;\n    import java.util.List;\n\n    public class ListProxy&lt;T&gt; implements InvocationHandler {\n        private List&lt;T&gt; target;\n\n        public ListProxy(List&lt;T&gt; target) {\n            this.target = target;\n        }\n\n        @Override\n        public Object invoke(Object proxy, Method method, Object[] args)\n                throws Throwable {\n            Object retVal = null;\n            System.out.println(\"[\" + method.getName() + \": \" + args[0] + \"]\");\n            retVal = method.invoke(target, args);\n            System.out.println(\"[size=\" + target.size() + \"]\");\n            return retVal;\n        }\n\n    }\n\n    import java.lang.reflect.Proxy;\n    import java.util.ArrayList;\n    import java.util.List;\n\n    public class ProxyTest2 {\n\n        @SuppressWarnings(\"unchecked\")\n        public static void main(String[] args) {\n            List&lt;String&gt; list = new ArrayList&lt;String&gt;();\n            Class&lt;?&gt; clazz = list.getClass();\n            ListProxy&lt;String&gt; myProxy = new ListProxy&lt;String&gt;(list);\n            List&lt;String&gt; newList = (List&lt;String&gt;) \n                    Proxy.newProxyInstance(clazz.getClassLoader(), \n                    clazz.getInterfaces(), myProxy);\n            newList.add(\"apple\");\n            newList.add(\"banana\");\n            newList.add(\"orange\");\n            newList.remove(\"banana\");\n        }\n    }\n\u8bf4\u660e\uff1a\u4f7f\u7528Java\u7684\u52a8\u6001\u4ee3\u7406\u6709\u4e00\u4e2a\u5c40\u9650\u6027\u5c31\u662f\u4ee3\u7406\u7684\u7c7b\u5fc5\u987b\u8981\u5b9e\u73b0\u63a5\u53e3\uff0c\u867d\u7136\u9762\u5411\u63a5\u53e3\u7f16\u7a0b\u662f\u6bcf\u4e2a\u4f18\u79c0\u7684Java\u7a0b\u5e8f\u90fd\u77e5\u9053\u7684\u89c4\u5219\uff0c\u4f46\u73b0\u5b9e\u5f80\u5f80\u4e0d\u5c3d\u5982\u4eba\u610f\uff0c\u5bf9\u4e8e\u6ca1\u6709\u5b9e\u73b0\u63a5\u53e3\u7684\u7c7b\u5982\u4f55\u4e3a\u5176\u751f\u6210\u4ee3\u7406\u5462\uff1f\u7ee7\u627f\uff01\u7ee7\u627f\u662f\u6700\u7ecf\u5178\u7684\u6269\u5c55\u5df2\u6709\u4ee3\u7801\u80fd\u529b\u7684\u624b\u6bb5\uff0c\u867d\u7136\u7ee7\u627f\u5e38\u5e38\u88ab\u521d\u5b66\u8005\u6ee5\u7528\uff0c\u4f46\u7ee7\u627f\u4e5f\u5e38\u5e38\u88ab\u8fdb\u9636\u7684\u7a0b\u5e8f\u5458\u5ffd\u89c6\u3002CGLib\u91c7\u7528\u975e\u5e38\u5e95\u5c42\u7684\u5b57\u8282\u7801\u751f\u6210\u6280\u672f\uff0c\u901a\u8fc7\u4e3a\u4e00\u4e2a\u7c7b\u521b\u5efa\u5b50\u7c7b\u6765\u751f\u6210\u4ee3\u7406\uff0c\u5b83\u5f25\u8865\u4e86Java\u52a8\u6001\u4ee3\u7406\u7684\u4e0d\u8db3\uff0c\u56e0\u6b64Spring\u4e2d\u52a8\u6001\u4ee3\u7406\u548cCGLib\u90fd\u662f\u521b\u5efa\u4ee3\u7406\u7684\u91cd\u8981\u624b\u6bb5\uff0c\u5bf9\u4e8e\u5b9e\u73b0\u4e86\u63a5\u53e3\u7684\u7c7b\u5c31\u7528\u52a8\u6001\u4ee3\u7406\u4e3a\u5176\u751f\u6210\u4ee3\u7406\u7c7b\uff0c\u800c\u6ca1\u6709\u5b9e\u73b0\u63a5\u53e3\u7684\u7c7b\u5c31\u7528CGLib\u901a\u8fc7\u7ee7\u627f\u7684\u65b9\u5f0f\u4e3a\u5176\u521b\u5efa\u4ee3\u7406\u3002\n151\u3001Spring\u4e2d\u81ea\u52a8\u88c5\u914d\u7684\u65b9\u5f0f\u6709\u54ea\u4e9b\uff1f\n\u7b54\uff1a\n\nno\uff1a\u4e0d\u8fdb\u884c\u81ea\u52a8\u88c5\u914d\uff0c\u624b\u52a8\u8bbe\u7f6eBean\u7684\u4f9d\u8d56\u5173\u7cfb\u3002\n\nbyName\uff1a\u6839\u636eBean\u7684\u540d\u5b57\u8fdb\u884c\u81ea\u52a8\u88c5\u914d\u3002\n\nbyType\uff1a\u6839\u636eBean\u7684\u7c7b\u578b\u8fdb\u884c\u81ea\u52a8\u88c5\u914d\u3002\n\nconstructor\uff1a\u7c7b\u4f3c\u4e8ebyType\uff0c\u4e0d\u8fc7\u662f\u5e94\u7528\u4e8e\u6784\u9020\u5668\u7684\u53c2\u6570\uff0c\u5982\u679c\u6b63\u597d\u6709\u4e00\u4e2aBean\u4e0e\u6784\u9020\u5668\u7684\u53c2\u6570\u7c7b\u578b\u76f8\u540c\u5219\u53ef\u4ee5\u81ea\u52a8\u88c5\u914d\uff0c\u5426\u5219\u4f1a\u5bfc\u81f4\u9519\u8bef\u3002\n\nautodetect\uff1a\u5982\u679c\u6709\u9ed8\u8ba4\u7684\u6784\u9020\u5668\uff0c\u5219\u901a\u8fc7constructor\u7684\u65b9\u5f0f\u8fdb\u884c\u81ea\u52a8\u88c5\u914d\uff0c\u5426\u5219\u4f7f\u7528byType\u7684\u65b9\u5f0f\u8fdb\u884c\u81ea\u52a8\u88c5\u914d\u3002\n\n\n\u8bf4\u660e\uff1a\u81ea\u52a8\u88c5\u914d\u6ca1\u6709\u81ea\u5b9a\u4e49\u88c5\u914d\u65b9\u5f0f\u90a3\u4e48\u7cbe\u786e\uff0c\u800c\u4e14\u4e0d\u80fd\u81ea\u52a8\u88c5\u914d\u7b80\u5355\u5c5e\u6027\uff08\u57fa\u672c\u7c7b\u578b\u3001\u5b57\u7b26\u4e32\u7b49\uff09\uff0c\u5728\u4f7f\u7528\u65f6\u5e94\u6ce8\u610f\u3002\n152\u3001Spring\u4e2d\u5982\u4f55\u4f7f\u7528\u6ce8\u89e3\u6765\u914d\u7f6eBean\uff1f\u6709\u54ea\u4e9b\u76f8\u5173\u7684\u6ce8\u89e3\uff1f\n\u7b54\uff1a\u9996\u5148\u9700\u8981\u5728Spring\u914d\u7f6e\u6587\u4ef6\u4e2d\u589e\u52a0\u5982\u4e0b\u914d\u7f6e\uff1a\n\n&lt;context:component-scan base-package=\"org.example\"/&gt;\n\n\n\u7136\u540e\u53ef\u4ee5\u7528@Component\u3001@Controller\u3001@Service\u3001@Repository\u6ce8\u89e3\u6765\u6807\u6ce8\u9700\u8981\u7531Spring IoC\u5bb9\u5668\u8fdb\u884c\u5bf9\u8c61\u6258\u7ba1\u7684\u7c7b\u3002\u8fd9\u51e0\u4e2a\u6ce8\u89e3\u6ca1\u6709\u672c\u8d28\u533a\u522b\uff0c\u53ea\u4e0d\u8fc7@Controller\u901a\u5e38\u7528\u4e8e\u63a7\u5236\u5668\uff0c@Service\u901a\u5e38\u7528\u4e8e\u4e1a\u52a1\u903b\u8f91\u7c7b\uff0c@Repository\u901a\u5e38\u7528\u4e8e\u4ed3\u50a8\u7c7b\uff08\u4f8b\u5982\u6211\u4eec\u7684DAO\u5b9e\u73b0\u7c7b\uff09\uff0c\u666e\u901a\u7684\u7c7b\u7528@Component\u6765\u6807\u6ce8\u3002\n153\u3001Spring\u652f\u6301\u7684\u4e8b\u52a1\u7ba1\u7406\u7c7b\u578b\u6709\u54ea\u4e9b\uff1f\u4f60\u5728\u9879\u76ee\u4e2d\u4f7f\u7528\u54ea\u79cd\u65b9\u5f0f\uff1f\n\u7b54\uff1aSpring\u652f\u6301\u7f16\u7a0b\u5f0f\u4e8b\u52a1\u7ba1\u7406\u548c\u58f0\u660e\u5f0f\u4e8b\u52a1\u7ba1\u7406\u3002\u8bb8\u591aSpring\u6846\u67b6\u7684\u7528\u6237\u9009\u62e9\u58f0\u660e\u5f0f\u4e8b\u52a1\u7ba1\u7406\uff0c\u56e0\u4e3a\u8fd9\u79cd\u65b9\u5f0f\u548c\u5e94\u7528\u7a0b\u5e8f\u7684\u5173\u8054\u8f83\u5c11\uff0c\u56e0\u6b64\u66f4\u52a0\u7b26\u5408\u8f7b\u91cf\u7ea7\u5bb9\u5668\u7684\u6982\u5ff5\u3002\u58f0\u660e\u5f0f\u4e8b\u52a1\u7ba1\u7406\u8981\u4f18\u4e8e\u7f16\u7a0b\u5f0f\u4e8b\u52a1\u7ba1\u7406\uff0c\u5c3d\u7ba1\u5728\u7075\u6d3b\u6027\u65b9\u9762\u5b83\u5f31\u4e8e\u7f16\u7a0b\u5f0f\u4e8b\u52a1\u7ba1\u7406\uff0c\u56e0\u4e3a\u7f16\u7a0b\u5f0f\u4e8b\u52a1\u5141\u8bb8\u4f60\u901a\u8fc7\u4ee3\u7801\u63a7\u5236\u4e1a\u52a1\u3002\n\u4e8b\u52a1\u5206\u4e3a\u5168\u5c40\u4e8b\u52a1\u548c\u5c40\u90e8\u4e8b\u52a1\u3002\u5168\u5c40\u4e8b\u52a1\u7531\u5e94\u7528\u670d\u52a1\u5668\u7ba1\u7406\uff0c\u9700\u8981\u5e95\u5c42\u670d\u52a1\u5668JTA\u652f\u6301\uff08\u5982WebLogic\u3001WildFly\u7b49\uff09\u3002\u5c40\u90e8\u4e8b\u52a1\u548c\u5e95\u5c42\u91c7\u7528\u7684\u6301\u4e45\u5316\u65b9\u6848\u6709\u5173\uff0c\u4f8b\u5982\u4f7f\u7528JDBC\u8fdb\u884c\u6301\u4e45\u5316\u65f6\uff0c\u9700\u8981\u4f7f\u7528Connetion\u5bf9\u8c61\u6765\u64cd\u4f5c\u4e8b\u52a1\uff1b\u800c\u91c7\u7528Hibernate\u8fdb\u884c\u6301\u4e45\u5316\u65f6\uff0c\u9700\u8981\u4f7f\u7528Session\u5bf9\u8c61\u6765\u64cd\u4f5c\u4e8b\u52a1\u3002\nSpring\u63d0\u4f9b\u4e86\u5982\u4e0b\u6240\u793a\u7684\u4e8b\u52a1\u7ba1\u7406\u5668:\nJtaTransactionManager   \u4f7f\u7528JTA\u7ba1\u7406\u4e8b\u52a1\nPersistenceBrokerTransactionManager     \u7ba1\u7406Apache\u7684OJB\u4e8b\u52a1\n\n\n\u4e8b\u52a1\u7ba1\u7406\u5668\u5b9e\u73b0\u7c7b\n\u76ee\u6807\u5bf9\u8c61\n\n\n\n\nDataSourceTransactionManager\n\u6ce8\u5165DataSource\n\n\nHibernateTransactionManager\n\u6ce8\u5165SessionFactory\n\n\nJdoTransactionManager\n\u7ba1\u7406JDO\u4e8b\u52a1\n\n\nHibernateTransactionManager\n\u6ce8\u5165SessionFactory\n\n\nHibernateTransactionManager\n\u6ce8\u5165SessionFactory\n\n\n\n\u8fd9\u4e9b\u4e8b\u52a1\u7684\u7236\u63a5\u53e3\u90fd\u662fPlatformTransactionManager\u3002Spring\u7684\u4e8b\u52a1\u7ba1\u7406\u673a\u5236\u662f\u4e00\u79cd\u5178\u578b\u7684\u7b56\u7565\u6a21\u5f0f\uff0cPlatformTransactionManager\u4ee3\u8868\u4e8b\u52a1\u7ba1\u7406\u63a5\u53e3\uff0c\u8be5\u63a5\u53e3\u5b9a\u4e49\u4e86\u4e09\u4e2a\u65b9\u6cd5\uff0c\u8be5\u63a5\u53e3\u5e76\u4e0d\u77e5\u9053\u5e95\u5c42\u5982\u4f55\u7ba1\u7406\u4e8b\u52a1\uff0c\u4f46\u662f\u5b83\u7684\u5b9e\u73b0\u7c7b\u5fc5\u987b\u63d0\u4f9bgetTransaction()\u65b9\u6cd5\uff08\u5f00\u542f\u4e8b\u52a1\uff09\u3001commit()\u65b9\u6cd5\uff08\u63d0\u4ea4\u4e8b\u52a1\uff09\u3001rollback()\u65b9\u6cd5\uff08\u56de\u6eda\u4e8b\u52a1\uff09\u7684\u591a\u6001\u5b9e\u73b0\uff0c\u8fd9\u6837\u5c31\u53ef\u4ee5\u7528\u4e0d\u540c\u7684\u5b9e\u73b0\u7c7b\u4ee3\u8868\u4e0d\u540c\u7684\u4e8b\u52a1\u7ba1\u7406\u7b56\u7565\u3002\u4f7f\u7528JTA\u5168\u5c40\u4e8b\u52a1\u7b56\u7565\u65f6\uff0c\u9700\u8981\u5e95\u5c42\u5e94\u7528\u670d\u52a1\u5668\u652f\u6301\uff0c\u800c\u4e0d\u540c\u7684\u5e94\u7528\u670d\u52a1\u5668\u6240\u63d0\u4f9b\u7684JTA\u5168\u5c40\u4e8b\u52a1\u53ef\u80fd\u5b58\u5728\u7ec6\u8282\u4e0a\u7684\u5dee\u5f02\uff0c\u56e0\u6b64\u5b9e\u9645\u914d\u7f6e\u5168\u5c40\u4e8b\u52a1\u7ba1\u7406\u5668\u662f\u53ef\u80fd\u9700\u8981\u4f7f\u7528JtaTransactionManager\u7684\u5b50\u7c7b\uff0c\u5982\uff1aWebLogicJtaTransactionManager\uff08Oracle\u7684WebLogic\u670d\u52a1\u5668\u63d0\u4f9b\uff09\u3001UowJtaTransactionManager\uff08IBM\u7684WebSphere\u670d\u52a1\u5668\u63d0\u4f9b\uff09\u7b49\u3002\n\u7f16\u7a0b\u5f0f\u4e8b\u52a1\u7ba1\u7406\u5982\u4e0b\u6240\u793a\u3002\n\n&lt;?xml version=\"1.0\" encoding=\"UTF-8\"?&gt;\n &lt;beans xmlns=\"http://www.springframework.org/schema/beans\"\n     xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"  xmlns:p=\"http://www.springframework.org/schema/p\"\n    xmlns:p=\"http://www.springframework.org/schema/context\"\n     xsi:schemaLocation=\"http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd\n     http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd\"&gt;\n\n     &lt;context:component-scan base-package=\"com.jackfrued\"/&gt;\n\n     &lt;bean id=\"propertyConfig\"\n         class=\"org.springframework.beans.factory.config.\n  PropertyPlaceholderConfigurer\"&gt;\n         &lt;property name=\"location\"&gt;\n             &lt;value&gt;jdbc.properties&lt;/value&gt;\n         &lt;/property&gt;\n     &lt;/bean&gt;\n\n     &lt;bean id=\"dataSource\" class=\"org.apache.commons.dbcp.BasicDataSource\"&gt;\n         &lt;property name=\"driverClassName\"&gt;\n             &lt;value&gt;${db.driver}&lt;/value&gt;\n         &lt;/property&gt;\n         &lt;property name=\"url\"&gt;\n             &lt;value&gt;${db.url}&lt;/value&gt;\n         &lt;/property&gt;\n         &lt;property name=\"username\"&gt;\n             &lt;value&gt;${db.username}&lt;/value&gt;\n         &lt;/property&gt;\n         &lt;property name=\"password\"&gt;\n             &lt;value&gt;${db.password}&lt;/value&gt;\n         &lt;/property&gt;\n     &lt;/bean&gt;\n\n     &lt;bean id=\"jdbcTemplate\" class=\"org.springframework.jdbc.core.JdbcTemplate\"&gt;\n         &lt;property name=\"dataSource\"&gt;\n             &lt;ref bean=\"dataSource\" /&gt;\n         &lt;/property&gt;\n     &lt;/bean&gt;\n\n     &lt;!-- JDBC\u4e8b\u52a1\u7ba1\u7406\u5668 --&gt;\n     &lt;bean id=\"transactionManager\"\n         class=\"org.springframework.jdbc.datasource.\n       DataSourceTransactionManager\"\u3000scope=\"singleton\"&gt;\n         &lt;property name=\"dataSource\"&gt;\n             &lt;ref bean=\"dataSource\" /&gt;\n         &lt;/property&gt;\n     &lt;/bean&gt;\n\n     &lt;!-- \u58f0\u660e\u4e8b\u52a1\u6a21\u677f --&gt;\n     &lt;bean id=\"transactionTemplate\"\n         class=\"org.springframework.transaction.support.\n   TransactionTemplate\"&gt;\n         &lt;property name=\"transactionManager\"&gt;\n             &lt;ref bean=\"transactionManager\" /&gt;\n         &lt;/property&gt;\n     &lt;/bean&gt;\n\n&lt;/beans&gt;\n\npackage com.jackfrued.dao.impl;\n\nimport org.springframework.beans.factory.annotation.Autowired;\nimport org.springframework.jdbc.core.JdbcTemplate;\n\nimport com.jackfrued.dao.EmpDao;\nimport com.jackfrued.entity.Emp;\n\n@Repository\npublic class EmpDaoImpl implements EmpDao {\n    @Autowired\n    private JdbcTemplate jdbcTemplate;\n\n    @Override\n    public boolean save(Emp emp) {\n        String sql = \"insert into emp values (?,?,?)\";\n        return jdbcTemplate.update(sql, emp.getId(), emp.getName(), emp.getBirthday()) == 1;\n    }\n\n}\n\npackage com.jackfrued.biz.impl;\n\nimport org.springframework.beans.factory.annotation.Autowired;\nimport org.springframework.stereotype.Service;\nimport org.springframework.transaction.TransactionStatus;\nimport org.springframework.transaction.support.TransactionCallbackWithoutResult;\nimport org.springframework.transaction.support.TransactionTemplate;\n\nimport com.jackfrued.biz.EmpService;\nimport com.jackfrued.dao.EmpDao;\nimport com.jackfrued.entity.Emp;\n\n@Service\npublic class EmpServiceImpl implements EmpService {\n    @Autowired\n    private TransactionTemplate txTemplate;\n    @Autowired\n    private EmpDao empDao;\n\n    @Override\n    public void addEmp(final Emp emp) {\n        txTemplate.execute(new TransactionCallbackWithoutResult() {\n\n            @Override\n            protected void doInTransactionWithoutResult(TransactionStatus txStatus) {\n                empDao.save(emp);\n            }\n        });\n    }\n\n}\n\n\n\u58f0\u660e\u5f0f\u4e8b\u52a1\u5982\u4e0b\u56fe\u6240\u793a\uff0c\u4ee5Spring\u6574\u5408Hibernate 3\u4e3a\u4f8b\uff0c\u5305\u62ec\u5b8c\u6574\u7684DAO\u548c\u4e1a\u52a1\u903b\u8f91\u4ee3\u7801\u3002\n\n&lt;?xml version=\"1.0\" encoding=\"UTF-8\"?&gt;\n&lt;beans xmlns=\"http://www.springframework.org/schema/beans\"\n    xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" \n    xmlns:p=\"http://www.springframework.org/schema/p\"\n    xmlns:context=\"http://www.springframework.org/schema/context\"\n    xmlns:aop=\"http://www.springframework.org/schema/aop\" \n    xmlns:tx=\"http://www.springframework.org/schema/tx\"\n    xsi:schemaLocation=\"http://www.springframework.org/schema/beans\n           http://www.springframework.org/schema/beans/spring-beans-3.2.xsd\n           http://www.springframework.org/schema/context\n           http://www.springframework.org/schema/context/spring-context-3.2.xsd\n           http://www.springframework.org/schema/aop\n           http://www.springframework.org/schema/aop/spring-aop-3.2.xsd\n           http://www.springframework.org/schema/tx\n           http://www.springframework.org/schema/tx/spring-tx-3.2.xsd\"&gt;\n\n    &lt;!-- \u914d\u7f6e\u7531Spring IoC\u5bb9\u5668\u6258\u7ba1\u7684\u5bf9\u8c61\u5bf9\u5e94\u7684\u88ab\u6ce8\u89e3\u7684\u7c7b\u6240\u5728\u7684\u5305 --&gt;\n    &lt;context:component-scan base-package=\"com.jackfrued\" /&gt;\n\n    &lt;!-- \u914d\u7f6e\u901a\u8fc7\u81ea\u52a8\u751f\u6210\u4ee3\u7406\u5b9e\u73b0AOP\u529f\u80fd --&gt;\n    &lt;aop:aspectj-autoproxy /&gt;\n\n    &lt;!-- \u914d\u7f6e\u6570\u636e\u5e93\u8fde\u63a5\u6c60 (DBCP) --&gt;\n    &lt;bean id=\"dataSource\" class=\"org.apache.commons.dbcp.BasicDataSource\"\n        destroy-method=\"close\"&gt;\n        &lt;!-- \u914d\u7f6e\u9a71\u52a8\u7a0b\u5e8f\u7c7b --&gt;\n        &lt;property name=\"driverClassName\" value=\"com.mysql.jdbc.Driver\" /&gt;\n        &lt;!-- \u914d\u7f6e\u8fde\u63a5\u6570\u636e\u5e93\u7684URL --&gt;\n        &lt;property name=\"url\" value=\"jdbc:mysql://localhost:3306/myweb\" /&gt;\n        &lt;!-- \u914d\u7f6e\u8bbf\u95ee\u6570\u636e\u5e93\u7684\u7528\u6237\u540d --&gt;\n        &lt;property name=\"username\" value=\"root\" /&gt;\n        &lt;!-- \u914d\u7f6e\u8bbf\u95ee\u6570\u636e\u5e93\u7684\u53e3\u4ee4 --&gt;\n        &lt;property name=\"password\" value=\"123456\" /&gt;\n        &lt;!-- \u914d\u7f6e\u6700\u5927\u8fde\u63a5\u6570 --&gt;\n        &lt;property name=\"maxActive\" value=\"150\" /&gt;\n        &lt;!-- \u914d\u7f6e\u6700\u5c0f\u7a7a\u95f2\u8fde\u63a5\u6570 --&gt;\n        &lt;property name=\"minIdle\" value=\"5\" /&gt;\n        &lt;!-- \u914d\u7f6e\u6700\u5927\u7a7a\u95f2\u8fde\u63a5\u6570 --&gt;\n        &lt;property name=\"maxIdle\" value=\"20\" /&gt;\n        &lt;!-- \u914d\u7f6e\u521d\u59cb\u8fde\u63a5\u6570 --&gt;\n        &lt;property name=\"initialSize\" value=\"10\" /&gt;\n        &lt;!-- \u914d\u7f6e\u8fde\u63a5\u88ab\u6cc4\u9732\u65f6\u662f\u5426\u751f\u6210\u65e5\u5fd7 --&gt;\n        &lt;property name=\"logAbandoned\" value=\"true\" /&gt;\n        &lt;!-- \u914d\u7f6e\u662f\u5426\u5220\u9664\u8d85\u65f6\u8fde\u63a5 --&gt;\n        &lt;property name=\"removeAbandoned\" value=\"true\" /&gt;\n        &lt;!-- \u914d\u7f6e\u5220\u9664\u8d85\u65f6\u8fde\u63a5\u7684\u8d85\u65f6\u95e8\u9650\u503c(\u4ee5\u79d2\u4e3a\u5355\u4f4d) --&gt;\n        &lt;property name=\"removeAbandonedTimeout\" value=\"120\" /&gt;\n        &lt;!-- \u914d\u7f6e\u8d85\u65f6\u7b49\u5f85\u65f6\u95f4(\u4ee5\u6beb\u79d2\u4e3a\u5355\u4f4d) --&gt;\n        &lt;property name=\"maxWait\" value=\"5000\" /&gt;\n        &lt;!-- \u914d\u7f6e\u7a7a\u95f2\u8fde\u63a5\u56de\u6536\u5668\u7ebf\u7a0b\u8fd0\u884c\u7684\u65f6\u95f4\u95f4\u9694(\u4ee5\u6beb\u79d2\u4e3a\u5355\u4f4d) --&gt;\n        &lt;property name=\"timeBetweenEvictionRunsMillis\" value=\"300000\" /&gt;\n        &lt;!-- \u914d\u7f6e\u8fde\u63a5\u7a7a\u95f2\u591a\u957f\u65f6\u95f4\u540e(\u4ee5\u6beb\u79d2\u4e3a\u5355\u4f4d)\u88ab\u65ad\u5f00\u8fde\u63a5 --&gt;\n        &lt;property name=\"minEvictableIdleTimeMillis\" value=\"60000\" /&gt;\n    &lt;/bean&gt;\n\n    &lt;!-- \u914d\u7f6eSpring\u63d0\u4f9b\u7684\u652f\u6301\u6ce8\u89e3ORM\u6620\u5c04\u7684Hibernate\u4f1a\u8bdd\u5de5\u5382 --&gt;\n    &lt;bean id=\"sessionFactory\"\n        class=\"org.springframework.orm.hibernate3.annotation.AnnotationSessionFactoryBean\"&gt;\n        &lt;!-- \u901a\u8fc7setter\u6ce8\u5165\u6570\u636e\u6e90\u5c5e\u6027 --&gt;\n        &lt;property name=\"dataSource\" ref=\"dataSource\" /&gt;\n        &lt;!-- \u914d\u7f6e\u5b9e\u4f53\u7c7b\u6240\u5728\u7684\u5305 --&gt;\n        &lt;property name=\"packagesToScan\" value=\"com.jackfrued.entity\" /&gt;\n        &lt;!-- \u914d\u7f6eHibernate\u7684\u76f8\u5173\u5c5e\u6027 --&gt;\n        &lt;property name=\"hibernateProperties\"&gt;\n            &lt;!-- \u5728\u9879\u76ee\u8c03\u8bd5\u5b8c\u6210\u540e\u8981\u5220\u9664show_sql\u548cformat_sql\u5c5e\u6027\u5426\u5219\u5bf9\u6027\u80fd\u6709\u663e\u8457\u5f71\u54cd --&gt;\n            &lt;value&gt;\n                hibernate.dialect=org.hibernate.dialect.MySQL5Dialect\n            &lt;/value&gt;\n        &lt;/property&gt;\n    &lt;/bean&gt;\n\n    &lt;!-- \u914d\u7f6eSpring\u63d0\u4f9b\u7684Hibernate\u4e8b\u52a1\u7ba1\u7406\u5668 --&gt;\n    &lt;bean id=\"transactionManager\"\n        class=\"org.springframework.orm.hibernate3.HibernateTransactionManager\"&gt;\n        &lt;!-- \u901a\u8fc7setter\u6ce8\u5165Hibernate\u4f1a\u8bdd\u5de5\u5382 --&gt;\n        &lt;property name=\"sessionFactory\" ref=\"sessionFactory\" /&gt;\n    &lt;/bean&gt;\n\n    &lt;!-- \u914d\u7f6e\u57fa\u4e8e\u6ce8\u89e3\u914d\u7f6e\u58f0\u660e\u5f0f\u4e8b\u52a1 --&gt;\n    &lt;tx:annotation-driven /&gt;\n\n&lt;/beans&gt;\n\npackage com.jackfrued.dao;\n\nimport java.io.Serializable;\nimport java.util.List;\n\nimport com.jackfrued.comm.QueryBean;\nimport com.jackfrued.comm.QueryResult;\n\n/**\n * \u6570\u636e\u8bbf\u95ee\u5bf9\u8c61\u63a5\u53e3(\u4ee5\u5bf9\u8c61\u4e3a\u5355\u4f4d\u5c01\u88c5CRUD\u64cd\u4f5c)\n * @author \u9a86\u660a\n *\n * @param &lt;E&gt; \u5b9e\u4f53\u7c7b\u578b\n * @param &lt;K&gt; \u5b9e\u4f53\u6807\u8bc6\u5b57\u6bb5\u7684\u7c7b\u578b\n */\npublic interface BaseDao &lt;E, K extends Serializable&gt; {\n\n    /**\n     * \u65b0\u589e\n     * @param entity \u4e1a\u52a1\u5b9e\u4f53\u5bf9\u8c61\n     * @return \u589e\u52a0\u6210\u529f\u8fd4\u56de\u5b9e\u4f53\u5bf9\u8c61\u7684\u6807\u8bc6\n     */\n    public K save(E entity);\n\n    /**\n     * \u5220\u9664\n     * @param entity \u4e1a\u52a1\u5b9e\u4f53\u5bf9\u8c61\n     */\n    public void delete(E entity);\n\n    /**\n     * \u6839\u636eID\u5220\u9664\n     * @param id \u4e1a\u52a1\u5b9e\u4f53\u5bf9\u8c61\u7684\u6807\u8bc6\n     * @return \u5220\u9664\u6210\u529f\u8fd4\u56detrue\u5426\u5219\u8fd4\u56defalse\n     */\n    public boolean deleteById(K id);\n\n    /**\n     * \u4fee\u6539\n     * @param entity \u4e1a\u52a1\u5b9e\u4f53\u5bf9\u8c61\n     * @return \u4fee\u6539\u6210\u529f\u8fd4\u56detrue\u5426\u5219\u8fd4\u56defalse\n     */\n    public void update(E entity);\n\n    /**\n     * \u6839\u636eID\u67e5\u627e\u4e1a\u52a1\u5b9e\u4f53\u5bf9\u8c61\n     * @param id \u4e1a\u52a1\u5b9e\u4f53\u5bf9\u8c61\u7684\u6807\u8bc6\n     * @return \u4e1a\u52a1\u5b9e\u4f53\u5bf9\u8c61\u5bf9\u8c61\u6216null\n     */\n    public E findById(K id);\n\n    /**\n     * \u6839\u636eID\u67e5\u627e\u4e1a\u52a1\u5b9e\u4f53\u5bf9\u8c61\n     * @param id \u4e1a\u52a1\u5b9e\u4f53\u5bf9\u8c61\u7684\u6807\u8bc6\n     * @param lazy \u662f\u5426\u4f7f\u7528\u5ef6\u8fdf\u52a0\u8f7d\n     * @return \u4e1a\u52a1\u5b9e\u4f53\u5bf9\u8c61\u5bf9\u8c61\n     */\n    public E findById(K id, boolean lazy);\n\n    /**\n     * \u67e5\u627e\u6240\u6709\u4e1a\u52a1\u5b9e\u4f53\u5bf9\u8c61\n     * @return \u88c5\u6240\u6709\u4e1a\u52a1\u5b9e\u4f53\u5bf9\u8c61\u7684\u5217\u8868\u5bb9\u5668\n     */\n    public List&lt;E&gt; findAll();\n\n    /**\n     * \u5206\u9875\u67e5\u627e\u4e1a\u52a1\u5b9e\u4f53\u5bf9\u8c61\n     * @param page \u9875\u7801\n     * @param size \u9875\u9762\u5927\u5c0f\n     * @return \u67e5\u8be2\u7ed3\u679c\u5bf9\u8c61\n     */\n    public QueryResult&lt;E&gt; findByPage(int page, int size);\n\n    /**\n     * \u5206\u9875\u67e5\u627e\u4e1a\u52a1\u5b9e\u4f53\u5bf9\u8c61\n     * @param queryBean \u67e5\u8be2\u6761\u4ef6\u5bf9\u8c61\n     * @param page \u9875\u7801\n     * @param size \u9875\u9762\u5927\u5c0f\n     * @return \u67e5\u8be2\u7ed3\u679c\u5bf9\u8c61\n     */\n    public QueryResult&lt;E&gt; findByPage(QueryBean queryBean, int page, int size);\n\n}\n\npackage com.jackfrued.dao;\n\nimport java.io.Serializable;\nimport java.util.List;\n\nimport com.jackfrued.comm.QueryBean;\nimport com.jackfrued.comm.QueryResult;\n\n/**\n * BaseDao\u7684\u7f3a\u7701\u9002\u914d\u5668\n * @author \u9a86\u660a\n *\n * @param &lt;E&gt; \u5b9e\u4f53\u7c7b\u578b\n * @param &lt;K&gt; \u5b9e\u4f53\u6807\u8bc6\u5b57\u6bb5\u7684\u7c7b\u578b\n */\npublic abstract class BaseDaoAdapter&lt;E, K extends Serializable&gt; implements\n        BaseDao&lt;E, K&gt; {\n\n    @Override\n    public K save(E entity) {\n        return null;\n    }\n\n    @Override\n    public void delete(E entity) {\n    }\n\n    @Override\n    public boolean deleteById(K id) {\n        E entity = findById(id);\n        if(entity != null) {\n            delete(entity);\n            return true;\n        }\n        return false;\n    }\n\n    @Override\n    public void update(E entity) {\n    }\n\n    @Override\n    public E findById(K id) {\n        return null;\n    }\n\n    @Override\n    public E findById(K id, boolean lazy) {\n        return null;\n    }\n\n    @Override\n    public List&lt;E&gt; findAll() {\n        return null;\n    }\n\n    @Override\n    public QueryResult&lt;E&gt; findByPage(int page, int size) {\n        return null;\n    }\n\n    @Override\n    public QueryResult&lt;E&gt; findByPage(QueryBean queryBean, int page, int size) {\n        return null;\n    }\n\n}\n\npackage com.jackfrued.dao;\n\nimport java.io.Serializable;\nimport java.lang.reflect.ParameterizedType;\nimport java.util.ArrayList;\nimport java.util.Collections;\nimport java.util.List;\n\nimport org.hibernate.Query;\nimport org.hibernate.Session;\nimport org.hibernate.SessionFactory;\nimport org.springframework.beans.factory.annotation.Autowired;\n\nimport com.jackfrued.comm.HQLQueryBean;\nimport com.jackfrued.comm.QueryBean;\nimport com.jackfrued.comm.QueryResult;\n\n/**\n * \u57fa\u4e8eHibernate\u7684BaseDao\u5b9e\u73b0\u7c7b\n * @author \u9a86\u660a\n *\n * @param &lt;E&gt; \u5b9e\u4f53\u7c7b\u578b\n * @param &lt;K&gt; \u4e3b\u952e\u7c7b\u578b\n */\n@SuppressWarnings(value = {\"unchecked\"})\npublic abstract class BaseDaoHibernateImpl&lt;E, K extends Serializable&gt; extends BaseDaoAdapter&lt;E, K&gt; {\n    @Autowired\n    protected SessionFactory sessionFactory;\n\n    private Class&lt;?&gt; entityClass;       // \u4e1a\u52a1\u5b9e\u4f53\u7684\u7c7b\u5bf9\u8c61\n    private String entityName;          // \u4e1a\u52a1\u5b9e\u4f53\u7684\u540d\u5b57\n\n    public BaseDaoHibernateImpl() {\n        ParameterizedType pt = (ParameterizedType) this.getClass().getGenericSuperclass();\n        entityClass = (Class&lt;?&gt;) pt.getActualTypeArguments()[0];\n        entityName = entityClass.getSimpleName();\n    }\n\n    @Override\n    public K save(E entity) {\n        return (K) sessionFactory.getCurrentSession().save(entity);\n    }\n\n    @Override\n    public void delete(E entity) {\n        sessionFactory.getCurrentSession().delete(entity);\n    }\n\n    @Override\n    public void update(E entity) {\n        sessionFactory.getCurrentSession().update(entity);\n    }\n\n    @Override\n    public E findById(K id) {\n        return findById(id, false);\n    }\n\n    @Override\n    public E findById(K id, boolean lazy) {\n        Session session = sessionFactory.getCurrentSession();\n        return (E) (lazy? session.load(entityClass, id) : session.get(entityClass, id));\n    }\n\n    @Override\n    public List&lt;E&gt; findAll() {\n        return sessionFactory.getCurrentSession().createCriteria(entityClass).list();\n    }\n\n    @Override\n    public QueryResult&lt;E&gt; findByPage(int page, int size) {\n        return new QueryResult&lt;E&gt;(\n            findByHQLAndPage(\"from \" + entityName , page, size),\n            getCountByHQL(\"select count(*) from \" + entityName)\n        );\n    }\n\n    @Override\n    public QueryResult&lt;E&gt; findByPage(QueryBean queryBean, int page, int size) {\n        if(queryBean instanceof HQLQueryBean) {\n            HQLQueryBean hqlQueryBean = (HQLQueryBean) queryBean;\n            return new QueryResult&lt;E&gt;(\n                findByHQLAndPage(hqlQueryBean.getQueryString(), page, size, hqlQueryBean.getParameters()),\n                getCountByHQL(hqlQueryBean.getCountString(), hqlQueryBean.getParameters())\n            );\n        }\n        return null;\n    }\n\n    /**\n     * \u6839\u636eHQL\u548c\u53ef\u53d8\u53c2\u6570\u5217\u8868\u8fdb\u884c\u67e5\u8be2\n     * @param hql \u57fa\u4e8eHQL\u7684\u67e5\u8be2\u8bed\u53e5\n     * @param params \u53ef\u53d8\u53c2\u6570\u5217\u8868\n     * @return \u6301\u6709\u67e5\u8be2\u7ed3\u679c\u7684\u5217\u8868\u5bb9\u5668\u6216\u7a7a\u5217\u8868\u5bb9\u5668\n     */\n    protected List&lt;E&gt; findByHQL(String hql, Object... params) {\n        return this.findByHQL(hql, getParamList(params));\n    }\n\n    /**\n     * \u6839\u636eHQL\u548c\u53c2\u6570\u5217\u8868\u8fdb\u884c\u67e5\u8be2\n     * @param hql \u57fa\u4e8eHQL\u7684\u67e5\u8be2\u8bed\u53e5\n     * @param params \u67e5\u8be2\u53c2\u6570\u5217\u8868\n     * @return \u6301\u6709\u67e5\u8be2\u7ed3\u679c\u7684\u5217\u8868\u5bb9\u5668\u6216\u7a7a\u5217\u8868\u5bb9\u5668\n     */\n    protected List&lt;E&gt; findByHQL(String hql, List&lt;Object&gt; params) {\n        List&lt;E&gt; list = createQuery(hql, params).list();\n        return list != null &amp;&amp; list.size() &gt; 0 ? list : Collections.EMPTY_LIST;\n    }\n\n    /**\n     * \u6839\u636eHQL\u548c\u53c2\u6570\u5217\u8868\u8fdb\u884c\u5206\u9875\u67e5\u8be2\n     * @param hql \u57fa\u4e8eHQL\u7684\u67e5\u8be2\u8bed\u53e5\n     * @page \u9875\u7801\n     * @size \u9875\u9762\u5927\u5c0f\n     * @param params \u53ef\u53d8\u53c2\u6570\u5217\u8868\n     * @return \u6301\u6709\u67e5\u8be2\u7ed3\u679c\u7684\u5217\u8868\u5bb9\u5668\u6216\u7a7a\u5217\u8868\u5bb9\u5668\n     */\n    protected List&lt;E&gt; findByHQLAndPage(String hql, int page, int size, Object... params) {\n        return this.findByHQLAndPage(hql, page, size, getParamList(params));\n    }\n\n    /**\n     * \u6839\u636eHQL\u548c\u53c2\u6570\u5217\u8868\u8fdb\u884c\u5206\u9875\u67e5\u8be2\n     * @param hql \u57fa\u4e8eHQL\u7684\u67e5\u8be2\u8bed\u53e5\n     * @page \u9875\u7801\n     * @size \u9875\u9762\u5927\u5c0f\n     * @param params \u67e5\u8be2\u53c2\u6570\u5217\u8868\n     * @return \u6301\u6709\u67e5\u8be2\u7ed3\u679c\u7684\u5217\u8868\u5bb9\u5668\u6216\u7a7a\u5217\u8868\u5bb9\u5668\n     */\n    protected List&lt;E&gt; findByHQLAndPage(String hql, int page, int size, List&lt;Object&gt; params) {\n        List&lt;E&gt; list = createQuery(hql, params)\n                .setFirstResult((page - 1) * size)\n                .setMaxResults(size)\n                .list();\n        return list != null &amp;&amp; list.size() &gt; 0 ? list : Collections.EMPTY_LIST;\n    }\n\n    /**\n     * \u67e5\u8be2\u6ee1\u8db3\u6761\u4ef6\u7684\u8bb0\u5f55\u6570\n     * @param hql \u57fa\u4e8eHQL\u7684\u67e5\u8be2\u8bed\u53e5\n     * @param params \u53ef\u53d8\u53c2\u6570\u5217\u8868\n     * @return \u6ee1\u8db3\u67e5\u8be2\u6761\u4ef6\u7684\u603b\u8bb0\u5f55\u6570\n     */\n    protected long getCountByHQL(String hql, Object... params) {\n        return this.getCountByHQL(hql, getParamList(params));\n    }\n\n    /**\n     * \u67e5\u8be2\u6ee1\u8db3\u6761\u4ef6\u7684\u8bb0\u5f55\u6570\n     * @param hql \u57fa\u4e8eHQL\u7684\u67e5\u8be2\u8bed\u53e5\n     * @param params \u53c2\u6570\u5217\u8868\u5bb9\u5668\n     * @return \u6ee1\u8db3\u67e5\u8be2\u6761\u4ef6\u7684\u603b\u8bb0\u5f55\u6570\n     */\n    protected long getCountByHQL(String hql, List&lt;Object&gt; params) {\n        return (Long) createQuery(hql, params).uniqueResult();\n    }\n\n    // \u521b\u5efaHibernate\u67e5\u8be2\u5bf9\u8c61(Query)\n    private Query createQuery(String hql, List&lt;Object&gt; params) {\n        Query query = sessionFactory.getCurrentSession().createQuery(hql);\n        for(int i = 0; i &lt; params.size(); i++) {\n            query.setParameter(i, params.get(i));\n        }\n        return query;\n    }\n\n    // \u5c06\u53ef\u53d8\u53c2\u6570\u5217\u8868\u7ec4\u88c5\u6210\u5217\u8868\u5bb9\u5668\n    private List&lt;Object&gt; getParamList(Object... params) {\n        List&lt;Object&gt; paramList = new ArrayList&lt;&gt;();\n        if(params != null) {\n            for(int i = 0; i &lt; params.length; i++) {\n                paramList.add(params[i]);\n            }\n        }\n        return paramList.size() == 0? Collections.EMPTY_LIST : paramList;\n    }\n\n}\n\npackage com.jackfrued.comm;\n\nimport java.util.List;\n\n/**\n * \u67e5\u8be2\u6761\u4ef6\u7684\u63a5\u53e3\n * @author \u9a86\u660a\n *\n */\npublic interface QueryBean {\n\n    /**\n     * \u6dfb\u52a0\u6392\u5e8f\u5b57\u6bb5\n     * @param fieldName \u7528\u4e8e\u6392\u5e8f\u7684\u5b57\u6bb5\n     * @param asc \u5347\u5e8f\u8fd8\u662f\u964d\u5e8f\n     * @return \u67e5\u8be2\u6761\u4ef6\u5bf9\u8c61\u81ea\u8eab(\u65b9\u4fbf\u7ea7\u8054\u7f16\u7a0b)\n     */\n    public QueryBean addOrder(String fieldName, boolean asc);\n\n    /**\n     * \u6dfb\u52a0\u6392\u5e8f\u5b57\u6bb5\n     * @param available \u662f\u5426\u6dfb\u52a0\u6b64\u6392\u5e8f\u5b57\u6bb5\n     * @param fieldName \u7528\u4e8e\u6392\u5e8f\u7684\u5b57\u6bb5\n     * @param asc \u5347\u5e8f\u8fd8\u662f\u964d\u5e8f\n     * @return \u67e5\u8be2\u6761\u4ef6\u5bf9\u8c61\u81ea\u8eab(\u65b9\u4fbf\u7ea7\u8054\u7f16\u7a0b)\n     */\n    public QueryBean addOrder(boolean available, String fieldName, boolean asc);\n\n    /**\n     * \u6dfb\u52a0\u67e5\u8be2\u6761\u4ef6\n     * @param condition \u6761\u4ef6\n     * @param params \u66ff\u6362\u6389\u6761\u4ef6\u4e2d\u53c2\u6570\u5360\u4f4d\u7b26\u7684\u53c2\u6570\n     * @return \u67e5\u8be2\u6761\u4ef6\u5bf9\u8c61\u81ea\u8eab(\u65b9\u4fbf\u7ea7\u8054\u7f16\u7a0b)\n     */\n    public QueryBean addCondition(String condition, Object... params);\n\n    /**\n     * \u6dfb\u52a0\u67e5\u8be2\u6761\u4ef6\n     * @param available \u662f\u5426\u9700\u8981\u6dfb\u52a0\u6b64\u6761\u4ef6\n     * @param condition \u6761\u4ef6\n     * @param params \u66ff\u6362\u6389\u6761\u4ef6\u4e2d\u53c2\u6570\u5360\u4f4d\u7b26\u7684\u53c2\u6570\n     * @return \u67e5\u8be2\u6761\u4ef6\u5bf9\u8c61\u81ea\u8eab(\u65b9\u4fbf\u7ea7\u8054\u7f16\u7a0b)\n     */\n    public QueryBean addCondition(boolean available, String condition, Object... params);\n\n    /**\n     * \u83b7\u5f97\u67e5\u8be2\u8bed\u53e5\n     * @return \u67e5\u8be2\u8bed\u53e5\n     */\n    public String getQueryString();\n\n    /**\n     * \u83b7\u53d6\u67e5\u8be2\u8bb0\u5f55\u6570\u7684\u67e5\u8be2\u8bed\u53e5\n     * @return \u67e5\u8be2\u8bb0\u5f55\u6570\u7684\u67e5\u8be2\u8bed\u53e5\n     */\n    public String getCountString();\n\n    /**\n     * \u83b7\u5f97\u67e5\u8be2\u53c2\u6570\n     * @return \u67e5\u8be2\u53c2\u6570\u7684\u5217\u8868\u5bb9\u5668\n     */\n    public List&lt;Object&gt; getParameters();\n}\n\npackage com.jackfrued.comm;\n\nimport java.util.List;\n\n/**\n * \u67e5\u8be2\u7ed3\u679c\n * @author \u9a86\u660a\n *\n * @param &lt;T&gt; \u6cdb\u578b\u53c2\u6570\n */\npublic class QueryResult&lt;T&gt; {\n    private List&lt;T&gt; result;     // \u6301\u6709\u67e5\u8be2\u7ed3\u679c\u7684\u5217\u8868\u5bb9\u5668\n    private long totalRecords;  // \u67e5\u8be2\u5230\u7684\u603b\u8bb0\u5f55\u6570\n\n    /**\n     * \u6784\u9020\u5668\n     */\n    public QueryResult() {\n    }\n\n    /**\n     * \u6784\u9020\u5668\n     * @param result \u6301\u6709\u67e5\u8be2\u7ed3\u679c\u7684\u5217\u8868\u5bb9\u5668\n     * @param totalRecords \u67e5\u8be2\u5230\u7684\u603b\u8bb0\u5f55\u6570\n     */\n    public QueryResult(List&lt;T&gt; result, long totalRecords) {\n        this.result = result;\n        this.totalRecords = totalRecords;\n    }\n\n    public List&lt;T&gt; getResult() {\n        return result;\n    }\n\n    public void setResult(List&lt;T&gt; result) {\n        this.result = result;\n    }\n\n    public long getTotalRecords() {\n        return totalRecords;\n    }\n\n    public void setTotalRecords(long totalRecords) {\n        this.totalRecords = totalRecords;\n    }\n}\n\npackage com.jackfrued.dao;\n\nimport com.jackfrued.comm.QueryResult;\nimport com.jackfrued.entity.Dept;\n\n/**\n * \u90e8\u95e8\u6570\u636e\u8bbf\u95ee\u5bf9\u8c61\u63a5\u53e3\n * @author \u9a86\u660a\n *\n */\npublic interface DeptDao extends BaseDao&lt;Dept, Integer&gt; {\n\n    /**\n     * \u5206\u9875\u67e5\u8be2\u9876\u7ea7\u90e8\u95e8\n     * @param page \u9875\u7801\n     * @param size \u9875\u7801\u5927\u5c0f\n     * @return \u67e5\u8be2\u7ed3\u679c\u5bf9\u8c61\n     */\n    public QueryResult&lt;Dept&gt; findTopDeptByPage(int page, int size);\n\n}\n\npackage com.jackfrued.dao.impl;\n\nimport java.util.List;\n\nimport org.springframework.stereotype.Repository;\n\nimport com.jackfrued.comm.QueryResult;\nimport com.jackfrued.dao.BaseDaoHibernateImpl;\nimport com.jackfrued.dao.DeptDao;\nimport com.jackfrued.entity.Dept;\n\n@Repository\npublic class DeptDaoImpl extends BaseDaoHibernateImpl&lt;Dept, Integer&gt; implements DeptDao {\n    private static final String HQL_FIND_TOP_DEPT = \" from Dept as d where d.superiorDept is null \";\n\n    @Override\n    public QueryResult&lt;Dept&gt; findTopDeptByPage(int page, int size) {\n        List&lt;Dept&gt; list = findByHQLAndPage(HQL_FIND_TOP_DEPT, page, size);\n        long totalRecords = getCountByHQL(\" select count(*) \" + HQL_FIND_TOP_DEPT);\n        return new QueryResult&lt;&gt;(list, totalRecords);\n    }\n\n}\n\npackage com.jackfrued.comm;\n\nimport java.util.List;\n\n/**\n * \u5206\u9875\u5668\n * @author \u9a86\u660a\n *\n * @param &lt;T&gt; \u5206\u9875\u6570\u636e\u5bf9\u8c61\u7684\u7c7b\u578b\n */\npublic class PageBean&lt;T&gt; {\n    private static final int DEFAUL_INIT_PAGE = 1;\n    private static final int DEFAULT_PAGE_SIZE = 10;\n    private static final int DEFAULT_PAGE_COUNT = 5;\n\n    private List&lt;T&gt; data;           // \u5206\u9875\u6570\u636e\n    private PageRange pageRange;    // \u9875\u7801\u8303\u56f4\n    private int totalPage;          // \u603b\u9875\u6570\n    private int size;               // \u9875\u9762\u5927\u5c0f\n    private int currentPage;        // \u5f53\u524d\u9875\u7801\n    private int pageCount;          // \u9875\u7801\u6570\u91cf\n\n    /**\n     * \u6784\u9020\u5668\n     * @param currentPage \u5f53\u524d\u9875\u7801\n     * @param size \u9875\u7801\u5927\u5c0f\n     * @param pageCount \u9875\u7801\u6570\u91cf\n     */\n    public PageBean(int currentPage, int size, int pageCount) {\n        this.currentPage = currentPage &gt; 0 ? currentPage : 1;\n        this.size = size &gt; 0 ? size : DEFAULT_PAGE_SIZE;\n        this.pageCount = pageCount &gt; 0 ? size : DEFAULT_PAGE_COUNT;\n    }\n\n    /**\n     * \u6784\u9020\u5668\n     * @param currentPage \u5f53\u524d\u9875\u7801\n     * @param size \u9875\u7801\u5927\u5c0f\n     */\n    public PageBean(int currentPage, int size) {\n        this(currentPage, size, DEFAULT_PAGE_COUNT);\n    }\n\n    /**\n     * \u6784\u9020\u5668\n     * @param currentPage \u5f53\u524d\u9875\u7801\n     */\n    public PageBean(int currentPage) {\n        this(currentPage, DEFAULT_PAGE_SIZE, DEFAULT_PAGE_COUNT);\n    }\n\n    /**\n     * \u6784\u9020\u5668\n     */\n    public PageBean() {\n        this(DEFAUL_INIT_PAGE, DEFAULT_PAGE_SIZE, DEFAULT_PAGE_COUNT);\n    }\n\n    public List&lt;T&gt; getData() {\n        return data;\n    }\n\n    public int getStartPage() {\n        return pageRange != null ? pageRange.getStartPage() : 1;\n    }\n\n    public int getEndPage() {\n        return pageRange != null ? pageRange.getEndPage() : 1;\n    }\n\n    public long getTotalPage() {\n        return totalPage;\n    }\n\n    public int getSize() {\n        return size;\n    }\n\n    public int getCurrentPage() {\n        return currentPage;\n    }\n\n    /**\n     * \u5c06\u67e5\u8be2\u7ed3\u679c\u8f6c\u6362\u4e3a\u5206\u9875\u6570\u636e\n     * @param queryResult \u67e5\u8be2\u7ed3\u679c\u5bf9\u8c61\n     */\n    public void transferQueryResult(QueryResult&lt;T&gt; queryResult) {\n        long totalRecords = queryResult.getTotalRecords();\n\n        data = queryResult.getResult();\n        totalPage = (int) ((totalRecords + size - 1) / size); \n        totalPage = totalPage &gt;= 0 ? totalPage : Integer.MAX_VALUE;\n        this.pageRange = new PageRange(pageCount, currentPage, totalPage);\n    }\n\n}\n\npackage com.jackfrued.comm;\n\n/**\n * \u9875\u7801\u8303\u56f4\n * @author \u9a86\u660a\n *\n */\npublic class PageRange {\n    private int startPage;  // \u8d77\u59cb\u9875\u7801\n    private int endPage;    // \u7ec8\u6b62\u9875\u7801\n\n    /**\n     * \u6784\u9020\u5668\n     * @param pageCount \u603b\u5171\u663e\u793a\u51e0\u4e2a\u9875\u7801\n     * @param currentPage \u5f53\u524d\u9875\u7801\n     * @param totalPage \u603b\u9875\u6570\n     */\n    public PageRange(int pageCount, int currentPage, int totalPage) {\n        startPage = currentPage - (pageCount - 1) / 2;\n        endPage = currentPage + pageCount / 2;\n        if(startPage &lt; 1) {\n            startPage = 1;\n            endPage = totalPage &gt; pageCount ? pageCount : totalPage;\n        }\n        if (endPage &gt; totalPage) {\n            endPage = totalPage;\n            startPage = (endPage - pageCount &gt; 0) ? endPage - pageCount + 1 : 1;\n        }\n    }\n\n    /**\n     * \u83b7\u5f97\u8d77\u59cb\u9875\u9875\u7801\n     * @return \u8d77\u59cb\u9875\u9875\u7801\n     */\n    public int getStartPage() {\n        return startPage;\n    }\n\n    /**\n     * \u83b7\u5f97\u7ec8\u6b62\u9875\u9875\u7801\n     * @return \u7ec8\u6b62\u9875\u9875\u7801\n     */\n    public int getEndPage() {\n        return endPage;\n    }\n\n}\n\npackage com.jackfrued.biz;\n\nimport com.jackfrued.comm.PageBean;\nimport com.jackfrued.entity.Dept;\n\n/**\n * \u90e8\u95e8\u4e1a\u52a1\u903b\u8f91\u63a5\u53e3\n * @author \u9a86\u660a\n *\n */\npublic interface DeptService {\n\n    /**\n     * \u521b\u5efa\u65b0\u7684\u90e8\u95e8\n     * @param department \u90e8\u95e8\u5bf9\u8c61\n     * @return \u521b\u5efa\u6210\u529f\u8fd4\u56detrue\u5426\u5219\u8fd4\u56defalse\n     */\n    public boolean createNewDepartment(Dept department);\n\n    /**\n     * \u5220\u9664\u6307\u5b9a\u90e8\u95e8\n     * @param id \u8981\u5220\u9664\u7684\u90e8\u95e8\u7684\u7f16\u53f7\n     * @return \u5220\u9664\u6210\u529f\u8fd4\u56detrue\u5426\u5219\u8fd4\u56defalse\n     */\n    public boolean deleteDepartment(Integer id);\n\n    /**\n     * \u5206\u9875\u83b7\u53d6\u9876\u7ea7\u90e8\u95e8\n     * @param page \u9875\u7801\n     * @param size \u9875\u7801\u5927\u5c0f\n     * @return \u90e8\u95e8\u5bf9\u8c61\u7684\u5206\u9875\u5668\u5bf9\u8c61\n     */\n    public PageBean&lt;Dept&gt; getTopDeptByPage(int page, int size);\n\n}\n\npackage com.jackfrued.biz.impl;\n\nimport org.springframework.beans.factory.annotation.Autowired;\nimport org.springframework.stereotype.Service;\nimport org.springframework.transaction.annotation.Transactional;\n\nimport com.jackfrued.biz.DeptService;\nimport com.jackfrued.comm.PageBean;\nimport com.jackfrued.comm.QueryResult;\nimport com.jackfrued.dao.DeptDao;\nimport com.jackfrued.entity.Dept;\n\n@Service\n@Transactional  // \u58f0\u660e\u5f0f\u4e8b\u52a1\u7684\u6ce8\u89e3\npublic class DeptServiceImpl implements DeptService {\n    @Autowired\n    private DeptDao deptDao;\n\n    @Override\n    public boolean createNewDepartment(Dept department) {\n        return deptDao.save(department) != null;\n    }\n\n    @Override\n    public boolean deleteDepartment(Integer id) {\n        return deptDao.deleteById(id);\n    }\n\n    @Override\n    public PageBean&lt;Dept&gt; getTopDeptByPage(int page, int size) {\n        QueryResult&lt;Dept&gt; queryResult = deptDao.findTopDeptByPage(page, size);\n        PageBean&lt;Dept&gt; pageBean = new PageBean&lt;&gt;(page, size);\n        pageBean.transferQueryResult(queryResult);\n        return pageBean;\n    }\n\n}\n\n\n154\u3001\u5982\u4f55\u5728Web\u9879\u76ee\u4e2d\u914d\u7f6eSpring\u7684IoC\u5bb9\u5668\uff1f\n\u7b54\uff1a\u5982\u679c\u9700\u8981\u5728Web\u9879\u76ee\u4e2d\u4f7f\u7528Spring\u7684IoC\u5bb9\u5668\uff0c\u53ef\u4ee5\u5728Web\u9879\u76ee\u914d\u7f6e\u6587\u4ef6web.xml\u4e2d\u505a\u51fa\u5982\u4e0b\u914d\u7f6e\uff1a\n\n&lt;context-param&gt;\n    &lt;param-name&gt;contextConfigLocation&lt;/param-name&gt;\n    &lt;param-value&gt;classpath:applicationContext.xml&lt;/param-value&gt;\n&lt;/context-param&gt;\n\n&lt;listener&gt;\n    &lt;listener-class&gt;\n        org.springframework.web.context.ContextLoaderListener\n    &lt;/listener-class&gt;\n&lt;/listener&gt;\n\n\n155\u3001\u5982\u4f55\u5728Web\u9879\u76ee\u4e2d\u914d\u7f6eSpring MVC\uff1f\n\u7b54\uff1a\u8981\u4f7f\u7528Spring MVC\u9700\u8981\u5728Web\u9879\u76ee\u914d\u7f6e\u6587\u4ef6\u4e2d\u914d\u7f6e\u5176\u524d\u7aef\u63a7\u5236\u5668DispatcherServlet\uff0c\u5982\u4e0b\u6240\u793a\uff1a\n\n&lt;web-app&gt;\n\n    &lt;servlet&gt;\n        &lt;servlet-name&gt;example&lt;/servlet-name&gt;\n        &lt;servlet-class&gt;\n            org.springframework.web.servlet.DispatcherServlet\n        &lt;/servlet-class&gt;\n        &lt;load-on-startup&gt;1&lt;/load-on-startup&gt;\n    &lt;/servlet&gt;\n\n    &lt;servlet-mapping&gt;\n        &lt;servlet-name&gt;example&lt;/servlet-name&gt;\n        &lt;url-pattern&gt;*.html&lt;/url-pattern&gt;\n    &lt;/servlet-mapping&gt;\n\n&lt;/web-app&gt;\n\n\n\u8bf4\u660e\uff1a\u4e0a\u9762\u7684\u914d\u7f6e\u4e2d\u4f7f\u7528\u4e86*.html\u7684\u540e\u7f00\u6620\u5c04\uff0c\u8fd9\u6837\u505a\u4e00\u65b9\u9762\u4e0d\u80fd\u591f\u901a\u8fc7URL\u63a8\u65ad\u91c7\u7528\u4e86\u4f55\u79cd\u670d\u52a1\u5668\u7aef\u7684\u6280\u672f\uff0c\u53e6\u4e00\u65b9\u9762\u53ef\u4ee5\u6b3a\u9a97\u641c\u7d22\u5f15\u64ce\uff0c\u56e0\u4e3a\u641c\u7d22\u5f15\u64ce\u4e0d\u4f1a\u641c\u7d22\u52a8\u6001\u9875\u9762\uff0c\u8fd9\u79cd\u505a\u6cd5\u79f0\u4e3a\u4f2a\u9759\u6001\u5316\u3002\n156\u3001Spring MVC\u7684\u5de5\u4f5c\u539f\u7406\u662f\u600e\u6837\u7684\uff1f\n\u7b54\uff1aSpring MVC\u7684\u5de5\u4f5c\u539f\u7406\u5982\u4e0b\u56fe\u6240\u793a\uff1a\n201911071003_2.png\n\n\u5ba2\u6237\u7aef\u7684\u6240\u6709\u8bf7\u6c42\u90fd\u4ea4\u7ed9\u524d\u7aef\u63a7\u5236\u5668DispatcherServlet\u6765\u5904\u7406\uff0c\u5b83\u4f1a\u8d1f\u8d23\u8c03\u7528\u7cfb\u7edf\u7684\u5176\u4ed6\u6a21\u5757\u6765\u771f\u6b63\u5904\u7406\u7528\u6237\u7684\u8bf7\u6c42\u3002\nDispatcherServlet\u6536\u5230\u8bf7\u6c42\u540e\uff0c\u5c06\u6839\u636e\u8bf7\u6c42\u7684\u4fe1\u606f\uff08\u5305\u62ecURL\u3001HTTP\u534f\u8bae\u65b9\u6cd5\u3001\u8bf7\u6c42\u5934\u3001\u8bf7\u6c42\u53c2\u6570\u3001Cookie\u7b49\uff09\u4ee5\u53caHandlerMapping\u7684\u914d\u7f6e\u627e\u5230\u5904\u7406\u8be5\u8bf7\u6c42\u7684Handler\uff08\u4efb\u4f55\u4e00\u4e2a\u5bf9\u8c61\u90fd\u53ef\u4ee5\u4f5c\u4e3a\u8bf7\u6c42\u7684Handler\uff09\u3002\n\u5728\u8fd9\u4e2a\u5730\u65b9Spring\u4f1a\u901a\u8fc7HandlerAdapter\u5bf9\u8be5\u5904\u7406\u5668\u8fdb\u884c\u5c01\u88c5\u3002\nHandlerAdapter\u662f\u4e00\u4e2a\u9002\u914d\u5668\uff0c\u5b83\u7528\u7edf\u4e00\u7684\u63a5\u53e3\u5bf9\u5404\u79cdHandler\u4e2d\u7684\u65b9\u6cd5\u8fdb\u884c\u8c03\u7528\u3002\nHandler\u5b8c\u6210\u5bf9\u7528\u6237\u8bf7\u6c42\u7684\u5904\u7406\u540e\uff0c\u4f1a\u8fd4\u56de\u4e00\u4e2aModelAndView\u5bf9\u8c61\u7ed9DispatcherServlet\uff0cModelAndView\u987e\u540d\u601d\u4e49\uff0c\u5305\u542b\u4e86\u6570\u636e\u6a21\u578b\u4ee5\u53ca\u76f8\u5e94\u7684\u89c6\u56fe\u7684\u4fe1\u606f\u3002\nModelAndView\u7684\u89c6\u56fe\u662f\u903b\u8f91\u89c6\u56fe\uff0cDispatcherServlet\u8fd8\u8981\u501f\u52a9ViewResolver\u5b8c\u6210\u4ece\u903b\u8f91\u89c6\u56fe\u5230\u771f\u5b9e\u89c6\u56fe\u5bf9\u8c61\u7684\u89e3\u6790\u5de5\u4f5c\u3002\n\u5f53\u5f97\u5230\u771f\u6b63\u7684\u89c6\u56fe\u5bf9\u8c61\u540e\uff0cDispatcherServlet\u4f1a\u5229\u7528\u89c6\u56fe\u5bf9\u8c61\u5bf9\u6a21\u578b\u6570\u636e\u8fdb\u884c\u6e32\u67d3\u3002\u2467 \u5ba2\u6237\u7aef\u5f97\u5230\u54cd\u5e94\uff0c\u53ef\u80fd\u662f\u4e00\u4e2a\u666e\u901a\u7684HTML\u9875\u9762\uff0c\u4e5f\u53ef\u4ee5\u662fXML\u6216JSON\u5b57\u7b26\u4e32\uff0c\u8fd8\u53ef\u4ee5\u662f\u4e00\u5f20\u56fe\u7247\u6216\u8005\u4e00\u4e2aPDF\u6587\u4ef6\u3002\n\n\n157\u3001\u5982\u4f55\u5728Spring IoC\u5bb9\u5668\u4e2d\u914d\u7f6e\u6570\u636e\u6e90\uff1f\n\u7b54\uff1aDBCP\u914d\u7f6e\uff1a\n\n&lt;bean id=\"dataSource\"\n        class=\"org.apache.commons.dbcp.BasicDataSource\" destroy-method=\"close\"&gt;\n    &lt;property name=\"driverClassName\" value=\"${jdbc.driverClassName}\"/&gt;\n    &lt;property name=\"url\" value=\"${jdbc.url}\"/&gt;\n    &lt;property name=\"username\" value=\"${jdbc.username}\"/&gt;\n    &lt;property name=\"password\" value=\"${jdbc.password}\"/&gt;\n&lt;/bean&gt;\n\n&lt;context:property-placeholder location=\"jdbc.properties\"/&gt;\n\n\nC3P0\u914d\u7f6e\uff1a\n\n&lt;bean id=\"dataSource\"\n        class=\"com.mchange.v2.c3p0.ComboPooledDataSource\" destroy-method=\"close\"&gt;\n    &lt;property name=\"driverClass\" value=\"${jdbc.driverClassName}\"/&gt;\n    &lt;property name=\"jdbcUrl\" value=\"${jdbc.url}\"/&gt;\n    &lt;property name=\"user\" value=\"${jdbc.username}\"/&gt;\n    &lt;property name=\"password\" value=\"${jdbc.password}\"/&gt;\n&lt;/bean&gt;\n\n&lt;context:property-placeholder location=\"jdbc.properties\"/&gt;\n\n\n\u63d0\u793a\uff1a DBCP\u7684\u8be6\u7ec6\u914d\u7f6e\u5728\u7b2c153\u9898\u4e2d\u5df2\u7ecf\u5b8c\u6574\u7684\u5c55\u793a\u8fc7\u4e86\u3002\n158\u3001\u5982\u4f55\u914d\u7f6e\u914d\u7f6e\u4e8b\u52a1\u589e\u5f3a\uff1f\n\u7b54\uff1a\n\n&lt;?xml version=\"1.0\" encoding=\"UTF-8\"?&gt;\n&lt;beans xmlns=\"http://www.springframework.org/schema/beans\"\n     xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n     xmlns:aop=\"http://www.springframework.org/schema/aop\"\n     xmlns:tx=\"http://www.springframework.org/schema/tx\"\n     xsi:schemaLocation=\"\n     http://www.springframework.org/schema/beans\n     http://www.springframework.org/schema/beans/spring-beans.xsd\n     http://www.springframework.org/schema/tx\n     http://www.springframework.org/schema/tx/spring-tx.xsd\n     http://www.springframework.org/schema/aop\n     http://www.springframework.org/schema/aop/spring-aop.xsd\"&gt;\n\n  &lt;!-- this is the service object that we want to make transactional --&gt;\n  &lt;bean id=\"fooService\" class=\"x.y.service.DefaultFooService\"/&gt;\n\n  &lt;!-- the transactional advice --&gt;\n  &lt;tx:advice id=\"txAdvice\" transaction-manager=\"txManager\"&gt;\n  &lt;!-- the transactional semantics... --&gt;\n  &lt;tx:attributes&gt;\n    &lt;!-- all methods starting with 'get' are read-only --&gt;\n    &lt;tx:method name=\"get*\" read-only=\"true\"/&gt;\n    &lt;!-- other methods use the default transaction settings (see below) --&gt;\n    &lt;tx:method name=\"*\"/&gt;\n  &lt;/tx:attributes&gt;\n  &lt;/tx:advice&gt;\n\n  &lt;!-- ensure that the above transactional advice runs for any execution\n    of an operation defined by the FooService interface --&gt;\n  &lt;aop:config&gt;\n  &lt;aop:pointcut id=\"fooServiceOperation\" \n    expression=\"execution(* x.y.service.FooService.*(..))\"/&gt;\n  &lt;aop:advisor advice-ref=\"txAdvice\" pointcut-ref=\"fooServiceOperation\"/&gt;\n  &lt;/aop:config&gt;\n\n  &lt;!-- don't forget the DataSource --&gt;\n  &lt;bean id=\"dataSource\" class=\"org.apache.commons.dbcp.BasicDataSource\" \n    destroy-method=\"close\"&gt;\n  &lt;property name=\"driverClassName\" value=\"oracle.jdbc.driver.OracleDriver\"/&gt;\n  &lt;property name=\"url\" value=\"jdbc:oracle:thin:@localhost:1521:orcl\"/&gt;\n  &lt;property name=\"username\" value=\"scott\"/&gt;\n  &lt;property name=\"password\" value=\"tiger\"/&gt;\n  &lt;/bean&gt;\n\n  &lt;!-- similarly, don't forget the PlatformTransactionManager --&gt;\n  &lt;bean id=\"txManager\" class=\"org.springframework.jdbc.datasource.DataSourceTransactionManager\"&gt;\n  &lt;property name=\"dataSource\" ref=\"dataSource\"/&gt;\n  &lt;/bean&gt;\n\n  &lt;!-- other &lt;bean/&gt; definitions here --&gt;\n\n&lt;/beans&gt;\n\n\n159\u3001\u9009\u62e9\u4f7f\u7528Spring\u6846\u67b6\u7684\u539f\u56e0\uff08Spring\u6846\u67b6\u4e3a\u4f01\u4e1a\u7ea7\u5f00\u53d1\u5e26\u6765\u7684\u597d\u5904\u6709\u54ea\u4e9b\uff09\uff1f\n\u7b54\uff1a\u53ef\u4ee5\u4ece\u4ee5\u4e0b\u51e0\u4e2a\u65b9\u9762\u4f5c\u7b54\uff1a\n\n\u975e\u4fb5\u5165\u5f0f\uff1a\u652f\u6301\u57fa\u4e8ePOJO\u7684\u7f16\u7a0b\u6a21\u5f0f\uff0c\u4e0d\u5f3a\u5236\u6027\u7684\u8981\u6c42\u5b9e\u73b0Spring\u6846\u67b6\u4e2d\u7684\u63a5\u53e3\u6216\u7ee7\u627fSpring\u6846\u67b6\u4e2d\u7684\u7c7b\u3002\nIoC\u5bb9\u5668\uff1aIoC\u5bb9\u5668\u5e2e\u52a9\u5e94\u7528\u7a0b\u5e8f\u7ba1\u7406\u5bf9\u8c61\u4ee5\u53ca\u5bf9\u8c61\u4e4b\u95f4\u7684\u4f9d\u8d56\u5173\u7cfb\uff0c\u5bf9\u8c61\u4e4b\u95f4\u7684\u4f9d\u8d56\u5173\u7cfb\u5982\u679c\u53d1\u751f\u4e86\u6539\u53d8\u53ea\u9700\u8981\u4fee\u6539\u914d\u7f6e\u6587\u4ef6\u800c\u4e0d\u662f\u4fee\u6539\u4ee3\u7801\uff0c\u56e0\u4e3a\u4ee3\u7801\u7684\u4fee\u6539\u53ef\u80fd\u610f\u5473\u7740\u9879\u76ee\u7684\u91cd\u65b0\u6784\u5efa\u548c\u5b8c\u6574\u7684\u56de\u5f52\u6d4b\u8bd5\u3002\u6709\u4e86IoC\u5bb9\u5668\uff0c\u7a0b\u5e8f\u5458\u518d\u4e5f\u4e0d\u9700\u8981\u81ea\u5df1\u7f16\u5199\u5de5\u5382\u3001\u5355\u4f8b\uff0c\u8fd9\u4e00\u70b9\u7279\u522b\u7b26\u5408Spring\u7684\u7cbe\u795e\"\u4e0d\u8981\u91cd\u590d\u7684\u53d1\u660e\u8f6e\u5b50\"\u3002\nAOP\uff08\u9762\u5411\u5207\u9762\u7f16\u7a0b\uff09\uff1a\u5c06\u6240\u6709\u7684\u6a2a\u5207\u5173\u6ce8\u529f\u80fd\u5c01\u88c5\u5230\u5207\u9762\uff08aspect\uff09\u4e2d\uff0c\u901a\u8fc7\u914d\u7f6e\u7684\u65b9\u5f0f\u5c06\u6a2a\u5207\u5173\u6ce8\u529f\u80fd\u52a8\u6001\u6dfb\u52a0\u5230\u76ee\u6807\u4ee3\u7801\u4e0a\uff0c\u8fdb\u4e00\u6b65\u5b9e\u73b0\u4e86\u4e1a\u52a1\u903b\u8f91\u548c\u7cfb\u7edf\u670d\u52a1\u4e4b\u95f4\u7684\u5206\u79bb\u3002\u53e6\u4e00\u65b9\u9762\uff0c\u6709\u4e86AOP\u7a0b\u5e8f\u5458\u53ef\u4ee5\u7701\u53bb\u5f88\u591a\u81ea\u5df1\u5199\u4ee3\u7406\u7c7b\u7684\u5de5\u4f5c\u3002\nMVC\uff1aSpring\u7684MVC\u6846\u67b6\u662f\u975e\u5e38\u4f18\u79c0\u7684\uff0c\u4ece\u5404\u4e2a\u65b9\u9762\u90fd\u53ef\u4ee5\u7529Struts 2\u51e0\u6761\u8857\uff0c\u4e3aWeb\u8868\u793a\u5c42\u63d0\u4f9b\u4e86\u66f4\u597d\u7684\u89e3\u51b3\u65b9\u6848\u3002\n\u4e8b\u52a1\u7ba1\u7406\uff1aSpring\u4ee5\u5bbd\u5e7f\u7684\u80f8\u6000\u63a5\u7eb3\u591a\u79cd\u6301\u4e45\u5c42\u6280\u672f\uff0c\u5e76\u4e14\u4e3a\u5176\u63d0\u4f9b\u4e86\u58f0\u660e\u5f0f\u7684\u4e8b\u52a1\u7ba1\u7406\uff0c\u5728\u4e0d\u9700\u8981\u4efb\u4f55\u4e00\u884c\u4ee3\u7801\u7684\u60c5\u51b5\u4e0b\u5c31\u80fd\u591f\u5b8c\u6210\u4e8b\u52a1\u7ba1\u7406\u3002\n\u5176\u4ed6\uff1a\u9009\u62e9Spring\u6846\u67b6\u7684\u539f\u56e0\u8fd8\u8fdc\u4e0d\u6b62\u4e8e\u6b64\uff0cSpring\u4e3aJava\u4f01\u4e1a\u7ea7\u5f00\u53d1\u63d0\u4f9b\u4e86\u4e00\u7ad9\u5f0f\u9009\u62e9\uff0c\u4f60\u53ef\u4ee5\u5728\u9700\u8981\u7684\u65f6\u5019\u4f7f\u7528\u5b83\u7684\u90e8\u5206\u548c\u5168\u90e8\uff0c\u66f4\u91cd\u8981\u7684\u662f\uff0c\u4f60\u751a\u81f3\u53ef\u4ee5\u5728\u611f\u89c9\u4e0d\u5230Spring\u5b58\u5728\u7684\u60c5\u51b5\u4e0b\uff0c\u5728\u4f60\u7684\u9879\u76ee\u4e2d\u4f7f\u7528Spring\u63d0\u4f9b\u7684\u5404\u79cd\u4f18\u79c0\u7684\u529f\u80fd\u3002\n\n\n160\u3001Spring IoC\u5bb9\u5668\u914d\u7f6eBean\u7684\u65b9\u5f0f\uff1f\n\u7b54\uff1a\n\n\u57fa\u4e8eXML\u6587\u4ef6\u8fdb\u884c\u914d\u7f6e\u3002\n\u57fa\u4e8e\u6ce8\u89e3\u8fdb\u884c\u914d\u7f6e\u3002\n\u57fa\u4e8eJava\u7a0b\u5e8f\u8fdb\u884c\u914d\u7f6e\uff08Spring 3+\uff09\n\npackage com.jackfrued.bean;\n\nimport org.springframework.beans.factory.annotation.Autowired;\nimport org.springframework.stereotype.Component;\n\n@Component\npublic class Person {\n    private String name;\n    private int age;\n    @Autowired\n    private Car car;\n\n    public Person(String name, int age) {\n        this.name = name;\n        this.age = age;\n    }\n\n    public void setCar(Car car) {\n        this.car = car;\n    }\n\n    @Override\n    public String toString() {\n        return \"Person [name=\" + name + \", age=\" + age + \", car=\" + car + \"]\";\n    }\n\n}\n\npackage com.jackfrued.bean;\n\nimport org.springframework.stereotype.Component;\n\n@Component\npublic class Car {\n    private String brand;\n    private int maxSpeed;\n\n    public Car(String brand, int maxSpeed) {\n        this.brand = brand;\n        this.maxSpeed = maxSpeed;\n    }\n\n    @Override\n    public String toString() {\n        return \"Car [brand=\" + brand + \", maxSpeed=\" + maxSpeed + \"]\";\n    }\n\n}\n\npackage com.jackfrued.config;\n\nimport org.springframework.context.annotation.Bean;\nimport org.springframework.context.annotation.Configuration;\n\nimport com.jackfrued.bean.Car;\nimport com.jackfrued.bean.Person;\n\n@Configuration\npublic class AppConfig {\n\n    @Bean\n    public Car car() {\n        return new Car(\"Benz\", 320);\n    }\n\n    @Bean\n    public Person person() {\n        return new Person(\"\u9a86\u660a\", 34);\n    }\n}\n\npackage com.jackfrued.test;\n\nimport org.springframework.context.ConfigurableApplicationContext;\nimport org.springframework.context.annotation.AnnotationConfigApplicationContext;\n\nimport com.jackfrued.bean.Person;\nimport com.jackfrued.config.AppConfig;\n\nclass Test {\n\n    public static void main(String[] args) {\n        // TWR (Java 7+)\n        try(ConfigurableApplicationContext factory = new AnnotationConfigApplicationContext(AppConfig.class)) {\n            Person person = factory.getBean(Person.class);\n            System.out.println(person);\n        }\n    }\n}\n\n\n161\u3001\u9610\u8ff0Spring\u6846\u67b6\u4e2dBean\u7684\u751f\u547d\u5468\u671f\uff1f\n\u7b54\uff1a\n\u2460 Spring IoC\u5bb9\u5668\u627e\u5230\u5173\u4e8eBean\u7684\u5b9a\u4e49\u5e76\u5b9e\u4f8b\u5316\u8be5Bean\u3002\n\u2461 Spring IoC\u5bb9\u5668\u5bf9Bean\u8fdb\u884c\u4f9d\u8d56\u6ce8\u5165\u3002\n\u2462 \u5982\u679cBean\u5b9e\u73b0\u4e86BeanNameAware\u63a5\u53e3\uff0c\u5219\u5c06\u8be5Bean\u7684id\u4f20\u7ed9setBeanName\u65b9\u6cd5\u3002\n\u2463 \u5982\u679cBean\u5b9e\u73b0\u4e86BeanFactoryAware\u63a5\u53e3\uff0c\u5219\u5c06BeanFactory\u5bf9\u8c61\u4f20\u7ed9setBeanFactory\u65b9\u6cd5\u3002\n\u2464 \u5982\u679cBean\u5b9e\u73b0\u4e86BeanPostProcessor\u63a5\u53e3\uff0c\u5219\u8c03\u7528\u5176postProcessBeforeInitialization\u65b9\u6cd5\u3002\n\u2465 \u5982\u679cBean\u5b9e\u73b0\u4e86InitializingBean\u63a5\u53e3\uff0c\u5219\u8c03\u7528\u5176afterPropertySet\u65b9\u6cd5\u3002\n\u2466 \u5982\u679c\u6709\u548cBean\u5173\u8054\u7684BeanPostProcessors\u5bf9\u8c61\uff0c\u5219\u8fd9\u4e9b\u5bf9\u8c61\u7684postProcessAfterInitialization\u65b9\u6cd5\u88ab\u8c03\u7528\u3002\n\u2467 \u5f53\u9500\u6bc1Bean\u5b9e\u4f8b\u65f6\uff0c\u5982\u679cBean\u5b9e\u73b0\u4e86DisposableBean\u63a5\u53e3\uff0c\u5219\u8c03\u7528\u5176destroy\u65b9\u6cd5\u3002\n162\u3001\u4f9d\u8d56\u6ce8\u5165\u65f6\u5982\u4f55\u6ce8\u5165\u96c6\u5408\u5c5e\u6027\uff1f\n\u7b54\uff1a\u53ef\u4ee5\u5728\u5b9a\u4e49Bean\u5c5e\u6027\u65f6\uff0c\u901a\u8fc7 / / / \u5206\u522b\u4e3a\u5176\u6ce8\u5165\u5217\u8868\u3001\u96c6\u5408\u3001\u6620\u5c04\u548c\u952e\u503c\u90fd\u662f\u5b57\u7b26\u4e32\u7684\u6620\u5c04\u5c5e\u6027\u3002\n163\u3001Spring\u4e2d\u7684\u81ea\u52a8\u88c5\u914d\u6709\u54ea\u4e9b\u9650\u5236\uff1f\n\u7b54\uff1a\n\n\u5982\u679c\u4f7f\u7528\u4e86\u6784\u9020\u5668\u6ce8\u5165\u6216\u8005setter\u6ce8\u5165\uff0c\u90a3\u4e48\u5c06\u8986\u76d6\u81ea\u52a8\u88c5\u914d\u7684\u4f9d\u8d56\u5173\u7cfb\u3002\n\u57fa\u672c\u6570\u636e\u7c7b\u578b\u7684\u503c\u3001\u5b57\u7b26\u4e32\u5b57\u9762\u91cf\u3001\u7c7b\u5b57\u9762\u91cf\u65e0\u6cd5\u4f7f\u7528\u81ea\u52a8\u88c5\u914d\u6765\u6ce8\u5165\u3002\n\u4f18\u5148\u8003\u8651\u4f7f\u7528\u663e\u5f0f\u7684\u88c5\u914d\u6765\u8fdb\u884c\u66f4\u7cbe\u786e\u7684\u4f9d\u8d56\u6ce8\u5165\u800c\u4e0d\u662f\u4f7f\u7528\u81ea\u52a8\u88c5\u914d\u3002\n\n\n164\u3001\u5728Web\u9879\u76ee\u4e2d\u5982\u4f55\u83b7\u5f97Spring\u7684IoC\u5bb9\u5668\uff1f \u7b54\uff1a\n\nWebApplicationContext ctx = WebApplicationContextUtils.getWebApplicationContext(servletContext);\n\n\n\n\u5927\u578b\u7f51\u7ad9\u5728\u67b6\u6784\u4e0a\u5e94\u5f53\u8003\u8651\u54ea\u4e9b\u95ee\u9898\uff1f\n\u7b54\uff1a\n\u5206\u5c42\uff1a\u5206\u5c42\u662f\u5904\u7406\u4efb\u4f55\u590d\u6742\u7cfb\u7edf\u6700\u5e38\u89c1\u7684\u624b\u6bb5\u4e4b\u4e00\uff0c\u5c06\u7cfb\u7edf\u6a2a\u5411\u5207\u5206\u6210\u82e5\u5e72\u4e2a\u5c42\u9762\uff0c\u6bcf\u4e2a\u5c42\u9762\u53ea\u627f\u62c5\u5355\u4e00\u7684\u804c\u8d23\uff0c\u7136\u540e\u901a\u8fc7\u4e0b\u5c42\u4e3a\u4e0a\u5c42\u63d0\u4f9b\u7684\u57fa\u7840\u8bbe\u65bd\u548c\u670d\u52a1\u4ee5\u53ca\u4e0a\u5c42\u5bf9\u4e0b\u5c42\u7684\u8c03\u7528\u6765\u5f62\u6210\u4e00\u4e2a\u5b8c\u6574\u7684\u590d\u6742\u7684\u7cfb\u7edf\u3002\u8ba1\u7b97\u673a\u7f51\u7edc\u7684\u5f00\u653e\u7cfb\u7edf\u4e92\u8054\u53c2\u8003\u6a21\u578b\uff08OSI/RM\uff09\u548cInternet\u7684TCP/IP\u6a21\u578b\u90fd\u662f\u5206\u5c42\u7ed3\u6784\uff0c\u5927\u578b\u7f51\u7ad9\u7684\u8f6f\u4ef6\u7cfb\u7edf\u4e5f\u53ef\u4ee5\u4f7f\u7528\u5206\u5c42\u7684\u7406\u5ff5\u5c06\u5176\u5206\u4e3a\u6301\u4e45\u5c42\uff08\u63d0\u4f9b\u6570\u636e\u5b58\u50a8\u548c\u8bbf\u95ee\u670d\u52a1\uff09\u3001\u4e1a\u52a1\u5c42\uff08\u5904\u7406\u4e1a\u52a1\u903b\u8f91\uff0c\u7cfb\u7edf\u4e2d\u6700\u6838\u5fc3\u7684\u90e8\u5206\uff09\u548c\u8868\u793a\u5c42\uff08\u7cfb\u7edf\u4ea4\u4e92\u3001\u89c6\u56fe\u5c55\u793a\uff09\u3002\u9700\u8981\u6307\u51fa\u7684\u662f\uff1a\uff081\uff09\u5206\u5c42\u662f\u903b\u8f91\u4e0a\u7684\u5212\u5206\uff0c\u5728\u7269\u7406\u4e0a\u53ef\u4ee5\u4f4d\u4e8e\u540c\u4e00\u8bbe\u5907\u4e0a\u4e5f\u53ef\u4ee5\u5728\u4e0d\u540c\u7684\u8bbe\u5907\u4e0a\u90e8\u7f72\u4e0d\u540c\u7684\u529f\u80fd\u6a21\u5757\uff0c\u8fd9\u6837\u53ef\u4ee5\u4f7f\u7528\u66f4\u591a\u7684\u8ba1\u7b97\u8d44\u6e90\u6765\u5e94\u5bf9\u7528\u6237\u7684\u5e76\u53d1\u8bbf\u95ee\uff1b\uff082\uff09\u5c42\u4e0e\u5c42\u4e4b\u95f4\u5e94\u5f53\u6709\u6e05\u6670\u7684\u8fb9\u754c\uff0c\u8fd9\u6837\u5206\u5c42\u624d\u6709\u610f\u4e49\uff0c\u624d\u66f4\u5229\u4e8e\u8f6f\u4ef6\u7684\u5f00\u53d1\u548c\u7ef4\u62a4\u3002\n\u5206\u5272\uff1a\u5206\u5272\u662f\u5bf9\u8f6f\u4ef6\u7684\u7eb5\u5411\u5207\u5206\u3002\u6211\u4eec\u53ef\u4ee5\u5c06\u5927\u578b\u7f51\u7ad9\u7684\u4e0d\u540c\u529f\u80fd\u548c\u670d\u52a1\u5206\u5272\u5f00\uff0c\u5f62\u6210\u9ad8\u5185\u805a\u4f4e\u8026\u5408\u7684\u529f\u80fd\u6a21\u5757\uff08\u5355\u5143\uff09\u3002\u5728\u8bbe\u8ba1\u521d\u671f\u53ef\u4ee5\u505a\u4e00\u4e2a\u7c97\u7c92\u5ea6\u7684\u5206\u5272\uff0c\u5c06\u7f51\u7ad9\u5206\u5272\u4e3a\u82e5\u5e72\u4e2a\u529f\u80fd\u6a21\u5757\uff0c\u540e\u671f\u8fd8\u53ef\u4ee5\u8fdb\u4e00\u6b65\u5bf9\u6bcf\u4e2a\u6a21\u5757\u8fdb\u884c\u7ec6\u7c92\u5ea6\u7684\u5206\u5272\uff0c\u8fd9\u6837\u4e00\u65b9\u9762\u6709\u52a9\u4e8e\u8f6f\u4ef6\u7684\u5f00\u53d1\u548c\u7ef4\u62a4\uff0c\u53e6\u4e00\u65b9\u9762\u6709\u52a9\u4e8e\u5206\u5e03\u5f0f\u7684\u90e8\u7f72\uff0c\u63d0\u4f9b\u7f51\u7ad9\u7684\u5e76\u53d1\u5904\u7406\u80fd\u529b\u548c\u529f\u80fd\u7684\u6269\u5c55\u3002\n\u5206\u5e03\u5f0f\uff1a\u9664\u4e86\u4e0a\u9762\u63d0\u5230\u7684\u5185\u5bb9\uff0c\u7f51\u7ad9\u7684\u9759\u6001\u8d44\u6e90\uff08JavaScript\u3001CSS\u3001\u56fe\u7247\u7b49\uff09\u4e5f\u53ef\u4ee5\u91c7\u7528\u72ec\u7acb\u5206\u5e03\u5f0f\u90e8\u7f72\u5e76\u91c7\u7528\u72ec\u7acb\u7684\u57df\u540d\uff0c\u8fd9\u6837\u53ef\u4ee5\u51cf\u8f7b\u5e94\u7528\u670d\u52a1\u5668\u7684\u8d1f\u8f7d\u538b\u529b\uff0c\u4e5f\u4f7f\u5f97\u6d4f\u89c8\u5668\u5bf9\u8d44\u6e90\u7684\u52a0\u8f7d\u66f4\u5feb\u3002\u6570\u636e\u7684\u5b58\u53d6\u4e5f\u5e94\u8be5\u662f\u5206\u5e03\u5f0f\u7684\uff0c\u4f20\u7edf\u7684\u5546\u4e1a\u7ea7\u5173\u7cfb\u578b\u6570\u636e\u5e93\u4ea7\u54c1\u57fa\u672c\u4e0a\u90fd\u652f\u6301\u5206\u5e03\u5f0f\u90e8\u7f72\uff0c\u800c\u65b0\u751f\u7684NoSQL\u4ea7\u54c1\u51e0\u4e4e\u90fd\u662f\u5206\u5e03\u5f0f\u7684\u3002\u5f53\u7136\uff0c\u7f51\u7ad9\u540e\u53f0\u7684\u4e1a\u52a1\u5904\u7406\u4e5f\u8981\u4f7f\u7528\u5206\u5e03\u5f0f\u6280\u672f\uff0c\u4f8b\u5982\u67e5\u8be2\u7d22\u5f15\u7684\u6784\u5efa\u3001\u6570\u636e\u5206\u6790\u7b49\uff0c\u8fd9\u4e9b\u4e1a\u52a1\u8ba1\u7b97\u89c4\u6a21\u5e9e\u5927\uff0c\u53ef\u4ee5\u4f7f\u7528Hadoop\u4ee5\u53caMapReduce\u5206\u5e03\u5f0f\u8ba1\u7b97\u6846\u67b6\u6765\u5904\u7406\u3002\n\u96c6\u7fa4\uff1a\u96c6\u7fa4\u4f7f\u5f97\u6709\u66f4\u591a\u7684\u670d\u52a1\u5668\u63d0\u4f9b\u76f8\u540c\u7684\u670d\u52a1\uff0c\u53ef\u4ee5\u66f4\u597d\u7684\u63d0\u4f9b\u5bf9\u5e76\u53d1\u7684\u652f\u6301\u3002\n\u7f13\u5b58\uff1a\u6240\u8c13\u7f13\u5b58\u5c31\u662f\u7528\u7a7a\u95f4\u6362\u53d6\u65f6\u95f4\u7684\u6280\u672f\uff0c\u5c06\u6570\u636e\u5c3d\u53ef\u80fd\u653e\u5728\u8ddd\u79bb\u8ba1\u7b97\u6700\u8fd1\u7684\u4f4d\u7f6e\u3002\u4f7f\u7528\u7f13\u5b58\u662f\u7f51\u7ad9\u4f18\u5316\u7684\u7b2c\u4e00\u5b9a\u5f8b\u3002\u6211\u4eec\u901a\u5e38\u8bf4\u7684CDN\u3001\u53cd\u5411\u4ee3\u7406\u3001\u70ed\u70b9\u6570\u636e\u90fd\u662f\u5bf9\u7f13\u5b58\u6280\u672f\u7684\u4f7f\u7528\u3002\n\u5f02\u6b65\uff1a\u5f02\u6b65\u662f\u5b9e\u73b0\u8f6f\u4ef6\u5b9e\u4f53\u4e4b\u95f4\u89e3\u8026\u5408\u7684\u53c8\u4e00\u91cd\u8981\u624b\u6bb5\u3002\u5f02\u6b65\u67b6\u6784\u662f\u5178\u578b\u7684\u751f\u4ea7\u8005\u6d88\u8d39\u8005\u6a21\u5f0f\uff0c\u4e8c\u8005\u4e4b\u95f4\u6ca1\u6709\u76f4\u63a5\u7684\u8c03\u7528\u5173\u7cfb\uff0c\u53ea\u8981\u4fdd\u6301\u6570\u636e\u7ed3\u6784\u4e0d\u53d8\uff0c\u5f7c\u6b64\u529f\u80fd\u5b9e\u73b0\u53ef\u4ee5\u968f\u610f\u53d8\u5316\u800c\u4e0d\u4e92\u76f8\u5f71\u54cd\uff0c\u8fd9\u5bf9\u7f51\u7ad9\u7684\u6269\u5c55\u975e\u5e38\u6709\u5229\u3002\u4f7f\u7528\u5f02\u6b65\u5904\u7406\u8fd8\u53ef\u4ee5\u63d0\u9ad8\u7cfb\u7edf\u53ef\u7528\u6027\uff0c\u52a0\u5feb\u7f51\u7ad9\u7684\u54cd\u5e94\u901f\u5ea6\uff08\u7528Ajax\u52a0\u8f7d\u6570\u636e\u5c31\u662f\u4e00\u79cd\u5f02\u6b65\u6280\u672f\uff09\uff0c\u540c\u65f6\u8fd8\u53ef\u4ee5\u8d77\u5230\u524a\u5cf0\u4f5c\u7528\uff08\u5e94\u5bf9\u77ac\u65f6\u9ad8\u5e76\u53d1\uff09\u3002&amp;quot\uff1b\u80fd\u63a8\u8fdf\u5904\u7406\u7684\u90fd\u8981\u63a8\u8fdf\u5904\u7406\"\u662f\u7f51\u7ad9\u4f18\u5316\u7684\u7b2c\u4e8c\u5b9a\u5f8b\uff0c\u800c\u5f02\u6b65\u662f\u8df5\u884c\u7f51\u7ad9\u4f18\u5316\u7b2c\u4e8c\u5b9a\u5f8b\u7684\u91cd\u8981\u624b\u6bb5\u3002\n\u5197\u4f59\uff1a\u5404\u79cd\u670d\u52a1\u5668\u90fd\u8981\u63d0\u4f9b\u76f8\u5e94\u7684\u5197\u4f59\u670d\u52a1\u5668\u4ee5\u4fbf\u5728\u67d0\u53f0\u6216\u67d0\u4e9b\u670d\u52a1\u5668\u5b95\u673a\u65f6\u8fd8\u80fd\u4fdd\u8bc1\u7f51\u7ad9\u53ef\u4ee5\u6b63\u5e38\u5de5\u4f5c\uff0c\u540c\u65f6\u4e5f\u63d0\u4f9b\u4e86\u707e\u96be\u6062\u590d\u7684\u53ef\u80fd\u6027\u3002\u5197\u4f59\u662f\u7f51\u7ad9\u9ad8\u53ef\u7528\u6027\u7684\u91cd\u8981\u4fdd\u8bc1\u3002\n\n\n166\u3001\u4f60\u7528\u8fc7\u7684\u7f51\u7ad9\u524d\u7aef\u4f18\u5316\u7684\u6280\u672f\u6709\u54ea\u4e9b\uff1f \u7b54\uff1a\n\u2460 \u6d4f\u89c8\u5668\u8bbf\u95ee\u4f18\u5316\uff1a\n\n\u51cf\u5c11HTTP\u8bf7\u6c42\u6570\u91cf\uff1a\u5408\u5e76CSS\u3001\u5408\u5e76javascript\u3001\u5408\u5e76\u56fe\u7247\uff08CSS Sprite\uff09\n\u4f7f\u7528\u6d4f\u89c8\u5668\u7f13\u5b58\uff1a\u901a\u8fc7\u8bbe\u7f6eHTTP\u54cd\u5e94\u5934\u4e2d\u7684Cache-Control\u548cExpires\u5c5e\u6027\uff0c\u5c06CSS\u3001JavaScript\u3001\u56fe\u7247\u7b49\u5728\u6d4f\u89c8\u5668\u4e2d\u7f13\u5b58\uff0c\u5f53\u8fd9\u4e9b\u9759\u6001\u8d44\u6e90\u9700\u8981\u66f4\u65b0\u65f6\uff0c\u53ef\u4ee5\u66f4\u65b0HTML\u6587\u4ef6\u4e2d\u7684\u5f15\u7528\u6765\u8ba9\u6d4f\u89c8\u5668\u91cd\u65b0\u8bf7\u6c42\u65b0\u7684\u8d44\u6e90- \u542f\u7528\u538b\u7f29\nCSS\u524d\u7f6e\uff0cJavaScript\u540e\u7f6e- \u51cf\u5c11Cookie\u4f20\u8f93\n\n\n\u2461 CDN\u52a0\u901f\uff1aCDN\uff08Content Distribute Network\uff09\u7684\u672c\u8d28\u4ecd\u7136\u662f\u7f13\u5b58\uff0c\u5c06\u6570\u636e\u7f13\u5b58\u5728\u79bb\u7528\u6237\u6700\u8fd1\u7684\u5730\u65b9\uff0cCDN\u901a\u5e38\u90e8\u7f72\u5728\u7f51\u7edc\u8fd0\u8425\u5546\u7684\u673a\u623f\uff0c\u4e0d\u4ec5\u53ef\u4ee5\u63d0\u5347\u54cd\u5e94\u901f\u5ea6\uff0c\u8fd8\u53ef\u4ee5\u51cf\u5c11\u5e94\u7528\u670d\u52a1\u5668\u7684\u538b\u529b\u3002\u5f53\u7136\uff0cCDN\u7f13\u5b58\u7684\u901a\u5e38\u90fd\u662f\u9759\u6001\u8d44\u6e90\u3002\n\u2462 \u53cd\u5411\u4ee3\u7406\uff1a\u53cd\u5411\u4ee3\u7406\u76f8\u5f53\u4e8e\u5e94\u7528\u670d\u52a1\u5668\u7684\u4e00\u4e2a\u95e8\u9762\uff0c\u53ef\u4ee5\u4fdd\u62a4\u7f51\u7ad9\u7684\u5b89\u5168\u6027\uff0c\u4e5f\u53ef\u4ee5\u5b9e\u73b0\u8d1f\u8f7d\u5747\u8861\u7684\u529f\u80fd\uff0c\u5f53\u7136\u6700\u91cd\u8981\u7684\u662f\u5b83\u7f13\u5b58\u4e86\u7528\u6237\u8bbf\u95ee\u7684\u70ed\u70b9\u8d44\u6e90\uff0c\u53ef\u4ee5\u76f4\u63a5\u4ece\u53cd\u5411\u4ee3\u7406\u5c06\u67d0\u4e9b\u5185\u5bb9\u8fd4\u56de\u7ed9\u7528\u6237\u6d4f\u89c8\u5668\u3002\n167\u3001\u4f60\u4f7f\u7528\u8fc7\u7684\u5e94\u7528\u670d\u52a1\u5668\u4f18\u5316\u6280\u672f\u6709\u54ea\u4e9b\uff1f\n\u7b54\uff1a\n\u2460 \u5206\u5e03\u5f0f\u7f13\u5b58\uff1a\u7f13\u5b58\u7684\u672c\u8d28\u5c31\u662f\u5185\u5b58\u4e2d\u7684\u54c8\u5e0c\u8868\uff0c\u5982\u679c\u8bbe\u8ba1\u4e00\u4e2a\u4f18\u8d28\u7684\u54c8\u5e0c\u51fd\u6570\uff0c\u90a3\u4e48\u7406\u8bba\u4e0a\u54c8\u5e0c\u8868\u8bfb\u5199\u7684\u6e10\u8fd1\u65f6\u95f4\u590d\u6742\u5ea6\u4e3aO(1)\u3002\u7f13\u5b58\u4e3b\u8981\u7528\u6765\u5b58\u653e\u90a3\u4e9b\u8bfb\u5199\u6bd4\u5f88\u9ad8\u3001\u53d8\u5316\u5f88\u5c11\u7684\u6570\u636e\uff0c\u8fd9\u6837\u5e94\u7528\u7a0b\u5e8f\u8bfb\u53d6\u6570\u636e\u65f6\u5148\u5230\u7f13\u5b58\u4e2d\u8bfb\u53d6\uff0c\u5982\u679c\u6ca1\u6709\u6216\u8005\u6570\u636e\u5df2\u7ecf\u5931\u6548\u518d\u53bb\u8bbf\u95ee\u6570\u636e\u5e93\u6216\u6587\u4ef6\u7cfb\u7edf\uff0c\u5e76\u6839\u636e\u62df\u5b9a\u7684\u89c4\u5219\u5c06\u6570\u636e\u5199\u5165\u7f13\u5b58\u3002\u5bf9\u7f51\u7ad9\u6570\u636e\u7684\u8bbf\u95ee\u4e5f\u7b26\u5408\u4e8c\u516b\u5b9a\u5f8b\uff08Pareto\u5206\u5e03\uff0c\u5e42\u5f8b\u5206\u5e03\uff09\uff0c\u537380%\u7684\u8bbf\u95ee\u90fd\u96c6\u4e2d\u572820%\u7684\u6570\u636e\u4e0a\uff0c\u5982\u679c\u80fd\u591f\u5c06\u8fd920%\u7684\u6570\u636e\u7f13\u5b58\u8d77\u6765\uff0c\u90a3\u4e48\u7cfb\u7edf\u7684\u6027\u80fd\u5c06\u5f97\u5230\u663e\u8457\u7684\u6539\u5584\u3002\u5f53\u7136\uff0c\u4f7f\u7528\u7f13\u5b58\u9700\u8981\u89e3\u51b3\u4ee5\u4e0b\u51e0\u4e2a\u95ee\u9898\uff1a\n\n\u9891\u7e41\u4fee\u6539\u7684\u6570\u636e\uff1b\n\u6570\u636e\u4e0d\u4e00\u81f4\u4e0e\u810f\u8bfb\uff1b\n\u7f13\u5b58\u96ea\u5d29\uff08\u53ef\u4ee5\u91c7\u7528\u5206\u5e03\u5f0f\u7f13\u5b58\u670d\u52a1\u5668\u96c6\u7fa4\u52a0\u4ee5\u89e3\u51b3\uff0cmemcached\u662f\u5e7f\u6cdb\u91c7\u7528\u7684\u89e3\u51b3\u65b9\u6848\uff09\uff1b\n\u7f13\u5b58\u9884\u70ed\uff1b\n\u7f13\u5b58\u7a7f\u900f\uff08\u6076\u610f\u6301\u7eed\u8bf7\u6c42\u4e0d\u5b58\u5728\u7684\u6570\u636e\uff09\u3002\n\n\n\u2461 \u5f02\u6b65\u64cd\u4f5c\uff1a\u53ef\u4ee5\u4f7f\u7528\u6d88\u606f\u961f\u5217\u5c06\u8c03\u7528\u5f02\u6b65\u5316\uff0c\u901a\u8fc7\u5f02\u6b65\u5904\u7406\u5c06\u77ed\u65f6\u95f4\u9ad8\u5e76\u53d1\u4ea7\u751f\u7684\u4e8b\u4ef6\u6d88\u606f\u5b58\u50a8\u5728\u6d88\u606f\u961f\u5217\u4e2d\uff0c\u4ece\u800c\u8d77\u5230\u524a\u5cf0\u4f5c\u7528\u3002\u7535\u5546\u7f51\u7ad9\u5728\u8fdb\u884c\u4fc3\u9500\u6d3b\u52a8\u65f6\uff0c\u53ef\u4ee5\u5c06\u7528\u6237\u7684\u8ba2\u5355\u8bf7\u6c42\u5b58\u5165\u6d88\u606f\u961f\u5217\uff0c\u8fd9\u6837\u53ef\u4ee5\u62b5\u5fa1\u5927\u91cf\u7684\u5e76\u53d1\u8ba2\u5355\u8bf7\u6c42\u5bf9\u7cfb\u7edf\u548c\u6570\u636e\u5e93\u7684\u51b2\u51fb\u3002\u76ee\u524d\uff0c\u7edd\u5927\u591a\u6570\u7684\u7535\u5546\u7f51\u7ad9\u5373\u4fbf\u4e0d\u8fdb\u884c\u4fc3\u9500\u6d3b\u52a8\uff0c\u8ba2\u5355\u7cfb\u7edf\u90fd\u91c7\u7528\u4e86\u6d88\u606f\u961f\u5217\u6765\u5904\u7406\u3002\n\u2462 \u4f7f\u7528\u96c6\u7fa4\u3002\n\u2463 \u4ee3\u7801\u4f18\u5316\uff1a\n\n\u591a\u7ebf\u7a0b\uff1a\u57fa\u4e8eJava\u7684Web\u5f00\u53d1\u57fa\u672c\u4e0a\u90fd\u901a\u8fc7\u591a\u7ebf\u7a0b\u7684\u65b9\u5f0f\u54cd\u5e94\u7528\u6237\u7684\u5e76\u53d1\u8bf7\u6c42\uff0c\u4f7f\u7528\u591a\u7ebf\u7a0b\u6280\u672f\u5728\u7f16\u7a0b\u4e0a\u8981\u89e3\u51b3\u7ebf\u7a0b\u5b89\u5168\u95ee\u9898\uff0c\u4e3b\u8981\u53ef\u4ee5\u8003\u8651\u4ee5\u4e0b\u51e0\u4e2a\u65b9\u9762\uff1a\n\n\u5c06\u5bf9\u8c61\u8bbe\u8ba1\u4e3a\u65e0\u72b6\u6001\u5bf9\u8c61\uff08\u8fd9\u548c\u9762\u5411\u5bf9\u8c61\u7684\u7f16\u7a0b\u89c2\u70b9\u662f\u77db\u76fe\u7684\uff0c\u5728\u9762\u5411\u5bf9\u8c61\u7684\u4e16\u754c\u4e2d\u88ab\u89c6\u4e3a\u4e0d\u826f\u8bbe\u8ba1\uff09\uff0c\u8fd9\u6837\u5c31\u4e0d\u4f1a\u5b58\u5728\u5e76\u53d1\u8bbf\u95ee\u65f6\u5bf9\u8c61\u72b6\u6001\u4e0d\u4e00\u81f4\u7684\u95ee\u9898\u3002\n\u5728\u65b9\u6cd5\u5185\u90e8\u521b\u5efa\u5bf9\u8c61\uff0c\u8fd9\u6837\u5bf9\u8c61\u7531\u8fdb\u5165\u65b9\u6cd5\u7684\u7ebf\u7a0b\u521b\u5efa\uff0c\u4e0d\u4f1a\u51fa\u73b0\u591a\u4e2a\u7ebf\u7a0b\u8bbf\u95ee\u540c\u4e00\u5bf9\u8c61\u7684\u95ee\u9898\u3002\u4f7f\u7528ThreadLocal\u5c06\u5bf9\u8c61\u4e0e\u7ebf\u7a0b\u7ed1\u5b9a\u4e5f\u662f\u5f88\u597d\u7684\u505a\u6cd5\uff0c\u8fd9\u4e00\u70b9\u5728\u524d\u9762\u5df2\u7ecf\u63a2\u8ba8\u8fc7\u4e86\u3002\n\n\u5bf9\u8d44\u6e90\u8fdb\u884c\u5e76\u53d1\u8bbf\u95ee\u65f6\u5e94\u5f53\u4f7f\u7528\u5408\u7406\u7684\u9501\u673a\u5236\u3002\n    \u975e\u963b\u585eI/O\uff1a \u4f7f\u7528\u5355\u7ebf\u7a0b\u548c\u975e\u963b\u585eI/O\u662f\u76ee\u524d\u516c\u8ba4\u7684\u6bd4\u591a\u7ebf\u7a0b\u7684\u65b9\u5f0f\u66f4\u80fd\u5145\u5206\u53d1\u6325\u670d\u52a1\u5668\u6027\u80fd\u7684\u5e94\u7528\u6a21\u5f0f\uff0c\u57fa\u4e8eNode.js\u6784\u5efa\u7684\u670d\u52a1\u5668\u5c31\u91c7\u7528\u4e86\u8fd9\u6837\u7684\u65b9\u5f0f\u3002Java\u5728JDK 1.4\u4e2d\u5c31\u5f15\u5165\u4e86NIO\uff08Non-blocking I/O\uff09,\u5728Servlet 3\u89c4\u8303\u4e2d\u53c8\u5f15\u5165\u4e86\u5f02\u6b65Servlet\u7684\u6982\u5ff5\uff0c\u8fd9\u4e9b\u90fd\u4e3a\u5728\u670d\u52a1\u5668\u7aef\u91c7\u7528\u975e\u963b\u585eI/O\u63d0\u4f9b\u4e86\u5fc5\u8981\u7684\u57fa\u7840\u3002\n    \u8d44\u6e90\u590d\u7528\uff1a\u8d44\u6e90\u590d\u7528\u4e3b\u8981\u6709\u4e24\u79cd\u65b9\u5f0f\uff0c\u4e00\u662f\u5355\u4f8b\uff0c\u4e8c\u662f\u5bf9\u8c61\u6c60\uff0c\u6211\u4eec\u4f7f\u7528\u7684\u6570\u636e\u5e93\u8fde\u63a5\u6c60\u3001\u7ebf\u7a0b\u6c60\u90fd\u662f\u5bf9\u8c61\u6c60\u5316\u6280\u672f\uff0c\u8fd9\u662f\u5178\u578b\u7684\u7528\u7a7a\u95f4\u6362\u53d6\u65f6\u95f4\u7684\u7b56\u7565\uff0c\u53e6\u4e00\u65b9\u9762\u4e5f\u5b9e\u73b0\u5bf9\u8d44\u6e90\u7684\u590d\u7528\uff0c\u4ece\u800c\u907f\u514d\u4e86\u4e0d\u5fc5\u8981\u7684\u521b\u5efa\u548c\u91ca\u653e\u8d44\u6e90\u6240\u5e26\u6765\u7684\u5f00\u9500\u3002\n\n\n168\u3001\u4ec0\u4e48\u662fXSS\u653b\u51fb\uff1f\u4ec0\u4e48\u662fSQL\u6ce8\u5165\u653b\u51fb\uff1f\u4ec0\u4e48\u662fCSRF\u653b\u51fb\uff1f\n\u7b54\uff1a\n\nXSS\uff08Cross Site Script\uff0c\u8de8\u7ad9\u811a\u672c\u653b\u51fb\uff09\u662f\u5411\u7f51\u9875\u4e2d\u6ce8\u5165\u6076\u610f\u811a\u672c\u5728\u7528\u6237\u6d4f\u89c8\u7f51\u9875\u65f6\u5728\u7528\u6237\u6d4f\u89c8\u5668\u4e2d\u6267\u884c\u6076\u610f\u811a\u672c\u7684\u653b\u51fb\u65b9\u5f0f\u3002\u8de8\u7ad9\u811a\u672c\u653b\u51fb\u5206\u6709\u4e24\u79cd\u5f62\u5f0f\uff1a\u53cd\u5c04\u578b\u653b\u51fb\uff08\u8bf1\u4f7f\u7528\u6237\u70b9\u51fb\u4e00\u4e2a\u5d4c\u5165\u6076\u610f\u811a\u672c\u7684\u94fe\u63a5\u4ee5\u8fbe\u5230\u653b\u51fb\u7684\u76ee\u6807\uff0c\u76ee\u524d\u6709\u5f88\u591a\u653b\u51fb\u8005\u5229\u7528\u8bba\u575b\u3001\u5fae\u535a\u53d1\u5e03\u542b\u6709\u6076\u610f\u811a\u672c\u7684URL\u5c31\u5c5e\u4e8e\u8fd9\u79cd\u65b9\u5f0f\uff09\u548c\u6301\u4e45\u578b\u653b\u51fb\uff08\u5c06\u6076\u610f\u811a\u672c\u63d0\u4ea4\u5230\u88ab\u653b\u51fb\u7f51\u7ad9\u7684\u6570\u636e\u5e93\u4e2d\uff0c\u7528\u6237\u6d4f\u89c8\u7f51\u9875\u65f6\uff0c\u6076\u610f\u811a\u672c\u4ece\u6570\u636e\u5e93\u4e2d\u88ab\u52a0\u8f7d\u5230\u9875\u9762\u6267\u884c\uff0cQQ\u90ae\u7bb1\u7684\u65e9\u671f\u7248\u672c\u5c31\u66fe\u7ecf\u88ab\u5229\u7528\u4f5c\u4e3a\u6301\u4e45\u578b\u8de8\u7ad9\u811a\u672c\u653b\u51fb\u7684\u5e73\u53f0\uff09\u3002\nXSS\u867d\u7136\u4e0d\u662f\u4ec0\u4e48\u65b0\u9c9c\u73a9\u610f\uff0c\u4f46\u662f\u653b\u51fb\u7684\u624b\u6cd5\u5374\u4e0d\u65ad\u7ffb\u65b0\uff0c\u9632\u8303XSS\u4e3b\u8981\u6709\u4e24\u65b9\u9762\uff1a\u6d88\u6bd2\uff08\u5bf9\u5371\u9669\u5b57\u7b26\u8fdb\u884c\u8f6c\u4e49\uff09\u548cHttpOnly\uff08\u9632\u8303XSS\u653b\u51fb\u8005\u7a83\u53d6Cookie\u6570\u636e\uff09\u3002\nSQL\u6ce8\u5165\u653b\u51fb\u662f\u6ce8\u5165\u653b\u51fb\u6700\u5e38\u89c1\u7684\u5f62\u5f0f\uff08\u6b64\u5916\u8fd8\u6709OS\u6ce8\u5165\u653b\u51fb\uff08Struts 2\u7684\u9ad8\u5371\u6f0f\u6d1e\u5c31\u662f\u901a\u8fc7OGNL\u5b9e\u65bdOS\u6ce8\u5165\u653b\u51fb\u5bfc\u81f4\u7684\uff09\uff09\uff0c\u5f53\u670d\u52a1\u5668\u4f7f\u7528\u8bf7\u6c42\u53c2\u6570\u6784\u9020SQL\u8bed\u53e5\u65f6\uff0c\u6076\u610f\u7684SQL\u88ab\u5d4c\u5165\u5230SQL\u4e2d\u4ea4\u7ed9\u6570\u636e\u5e93\u6267\u884c\u3002SQL\u6ce8\u5165\u653b\u51fb\u9700\u8981\u653b\u51fb\u8005\u5bf9\u6570\u636e\u5e93\u7ed3\u6784\u6709\u6240\u4e86\u89e3\u624d\u80fd\u8fdb\u884c\uff0c\u653b\u51fb\u8005\u60f3\u8981\u83b7\u5f97\u8868\u7ed3\u6784\u6709\u591a\u79cd\u65b9\u5f0f\uff1a\n\uff081\uff09\u5982\u679c\u4f7f\u7528\u5f00\u6e90\u7cfb\u7edf\u642d\u5efa\u7f51\u7ad9\uff0c\u6570\u636e\u5e93\u7ed3\u6784\u4e5f\u662f\u516c\u5f00\u7684\uff08\u76ee\u524d\u6709\u5f88\u591a\u73b0\u6210\u7684\u7cfb\u7edf\u53ef\u4ee5\u76f4\u63a5\u642d\u5efa\u8bba\u575b\uff0c\u7535\u5546\u7f51\u7ad9\uff0c\u867d\u7136\u65b9\u4fbf\u5feb\u6377\u4f46\u662f\u98ce\u9669\u662f\u5fc5\u987b\u8981\u8ba4\u771f\u8bc4\u4f30\u7684\uff09\uff1b\n\uff082\uff09\u9519\u8bef\u56de\u663e\uff08\u5982\u679c\u5c06\u670d\u52a1\u5668\u7684\u9519\u8bef\u4fe1\u606f\u76f4\u63a5\u663e\u793a\u5728\u9875\u9762\u4e0a\uff0c\u653b\u51fb\u8005\u53ef\u4ee5\u901a\u8fc7\u975e\u6cd5\u53c2\u6570\u5f15\u53d1\u9875\u9762\u9519\u8bef\u4ece\u800c\u901a\u8fc7\u9519\u8bef\u4fe1\u606f\u4e86\u89e3\u6570\u636e\u5e93\u7ed3\u6784\uff0cWeb\u5e94\u7528\u5e94\u5f53\u8bbe\u7f6e\u53cb\u597d\u7684\u9519\u8bef\u9875\uff0c\u4e00\u65b9\u9762\u7b26\u5408\u6700\u5c0f\u60ca\u8bb6\u539f\u5219\uff0c\u4e00\u65b9\u9762\u5c4f\u853d\u6389\u53ef\u80fd\u7ed9\u7cfb\u7edf\u5e26\u6765\u5371\u9669\u7684\u9519\u8bef\u56de\u663e\u4fe1\u606f\uff09\uff1b\n\uff083\uff09\u76f2\u6ce8\u3002\u9632\u8303SQL\u6ce8\u5165\u653b\u51fb\u4e5f\u53ef\u4ee5\u91c7\u7528\u6d88\u6bd2\u7684\u65b9\u5f0f\uff0c\u901a\u8fc7\u6b63\u5219\u8868\u8fbe\u5f0f\u5bf9\u8bf7\u6c42\u53c2\u6570\u8fdb\u884c\u9a8c\u8bc1\uff0c\u6b64\u5916\uff0c\u53c2\u6570\u7ed1\u5b9a\u4e5f\u662f\u5f88\u597d\u7684\u624b\u6bb5\uff0c\u8fd9\u6837\u6076\u610f\u7684SQL\u4f1a\u88ab\u5f53\u505aSQL\u7684\u53c2\u6570\u800c\u4e0d\u662f\u547d\u4ee4\u88ab\u6267\u884c\uff0cJDBC\u4e2d\u7684PreparedStatement\u5c31\u662f\u652f\u6301\u53c2\u6570\u7ed1\u5b9a\u7684\u8bed\u53e5\u5bf9\u8c61\uff0c\u4ece\u6027\u80fd\u548c\u5b89\u5168\u6027\u4e0a\u90fd\u660e\u663e\u4f18\u4e8eStatement\u3002\nCSRF\u653b\u51fb\uff08Cross Site Request Forgery\uff0c\u8de8\u7ad9\u8bf7\u6c42\u4f2a\u9020\uff09\u662f\u653b\u51fb\u8005\u901a\u8fc7\u8de8\u7ad9\u8bf7\u6c42\uff0c\u4ee5\u5408\u6cd5\u7684\u7528\u6237\u8eab\u4efd\u8fdb\u884c\u975e\u6cd5\u64cd\u4f5c\uff08\u5982\u8f6c\u8d26\u6216\u53d1\u5e16\u7b49\uff09\u3002CSRF\u7684\u539f\u7406\u662f\u5229\u7528\u6d4f\u89c8\u5668\u7684Cookie\u6216\u670d\u52a1\u5668\u7684Session\uff0c\u76d7\u53d6\u7528\u6237\u8eab\u4efd\uff0c\u5176\u539f\u7406\u5982\u4e0b\u56fe\u6240\u793a\u3002\n\u9632\u8303CSRF\u7684\u4e3b\u8981\u624b\u6bb5\u662f\u8bc6\u522b\u8bf7\u6c42\u8005\u7684\u8eab\u4efd\uff0c\u4e3b\u8981\u6709\u4ee5\u4e0b\u51e0\u79cd\u65b9\u5f0f\uff1a\n\uff081\uff09\u5728\u8868\u5355\u4e2d\u6dfb\u52a0\u4ee4\u724c\uff08token\uff09\uff1b\n\uff082\uff09\u9a8c\u8bc1\u7801\uff1b\n\uff083\uff09\u68c0\u67e5\u8bf7\u6c42\u5934\u4e2d\u7684Referer\uff08\u524d\u9762\u63d0\u5230\u9632\u56fe\u7247\u76d7\u94fe\u63a5\u4e5f\u662f\u7528\u7684\u8fd9\u79cd\u65b9\u5f0f\uff09\u3002\n\u4ee4\u724c\u548c\u9a8c\u8bc1\u90fd\u5177\u6709\u4e00\u6b21\u6d88\u8d39\u6027\u7684\u7279\u5f81\uff0c\u56e0\u6b64\u5728\u539f\u7406\u4e0a\u4e00\u81f4\u7684\uff0c\u4f46\u662f\u9a8c\u8bc1\u7801\u662f\u4e00\u79cd\u7cdf\u7cd5\u7684\u7528\u6237\u4f53\u9a8c\uff0c\u4e0d\u662f\u5fc5\u8981\u7684\u60c5\u51b5\u4e0b\u4e0d\u8981\u8f7b\u6613\u4f7f\u7528\u9a8c\u8bc1\u7801\uff0c\u76ee\u524d\u5f88\u591a\u7f51\u7ad9\u7684\u505a\u6cd5\u662f\u5982\u679c\u5728\u77ed\u65f6\u95f4\u5185\u591a\u6b21\u63d0\u4ea4\u4e00\u4e2a\u8868\u5355\u672a\u83b7\u5f97\u6210\u529f\u540e\u624d\u8981\u6c42\u63d0\u4f9b\u9a8c\u8bc1\u7801\uff0c\u8fd9\u6837\u4f1a\u83b7\u5f97\u8f83\u597d\u7684\u7528\u6237\u4f53\u9a8c\u3002\n\n\n201911071003_3.png\n\u8865\u5145\uff1a\u9632\u706b\u5899\u7684\u67b6\u8bbe\u662fWeb\u5b89\u5168\u7684\u91cd\u8981\u4fdd\u969c\uff0cModSecurity\u662f\u5f00\u6e90\u7684Web\u9632\u706b\u5899\u4e2d\u7684\u4f7c\u4f7c\u8005\u3002\u4f01\u4e1a\u7ea7\u9632\u706b\u5899\u7684\u67b6\u8bbe\u5e94\u5f53\u6709\u4e24\u7ea7\u9632\u706b\u5899\uff0cWeb\u670d\u52a1\u5668\u548c\u90e8\u5206\u5e94\u7528\u670d\u52a1\u5668\u53ef\u4ee5\u67b6\u8bbe\u5728\u4e24\u7ea7\u9632\u706b\u5899\u4e4b\u95f4\u7684DMZ\uff0c\u800c\u6570\u636e\u548c\u8d44\u6e90\u670d\u52a1\u5668\u5e94\u5f53\u67b6\u8bbe\u5728\u7b2c\u4e8c\u7ea7\u9632\u706b\u5899\u4e4b\u540e\u3002\n\n\u4ec0\u4e48\u662f\u9886\u57df\u6a21\u578b(domain model)\uff1f\u8d2b\u8840\u6a21\u578b(anaemic domain model)\u548c\u5145\u8840\u6a21\u578b(rich domain model)\u6709\u4ec0\u4e48\u533a\u522b\uff1f\n\u7b54\uff1a\u9886\u57df\u6a21\u578b\u662f\u9886\u57df\u5185\u7684\u6982\u5ff5\u7c7b\u6216\u73b0\u5b9e\u4e16\u754c\u4e2d\u5bf9\u8c61\u7684\u53ef\u89c6\u5316\u8868\u793a\uff0c\u53c8\u79f0\u4e3a\u6982\u5ff5\u6a21\u578b\u6216\u5206\u6790\u5bf9\u8c61\u6a21\u578b\uff0c\u5b83\u4e13\u6ce8\u4e8e\u5206\u6790\u95ee\u9898\u9886\u57df\u672c\u8eab\uff0c\u53d1\u6398\u91cd\u8981\u7684\u4e1a\u52a1\u9886\u57df\u6982\u5ff5\uff0c\u5e76\u5efa\u7acb\u4e1a\u52a1\u9886\u57df\u6982\u5ff5\u4e4b\u95f4\u7684\u5173\u7cfb\u3002\u8d2b\u8840\u6a21\u578b\u662f\u6307\u4f7f\u7528\u7684\u9886\u57df\u5bf9\u8c61\u4e2d\u53ea\u6709setter\u548cgetter\u65b9\u6cd5\uff08POJO\uff09\uff0c\u6240\u6709\u7684\u4e1a\u52a1\u903b\u8f91\u90fd\u4e0d\u5305\u542b\u5728\u9886\u57df\u5bf9\u8c61\u4e2d\u800c\u662f\u653e\u5728\u4e1a\u52a1\u903b\u8f91\u5c42\u3002\u6709\u4eba\u5c06\u6211\u4eec\u8fd9\u91cc\u8bf4\u7684\u8d2b\u8840\u6a21\u578b\u8fdb\u4e00\u6b65\u5212\u5206\u6210\u5931\u8840\u6a21\u578b\uff08\u9886\u57df\u5bf9\u8c61\u5b8c\u5168\u6ca1\u6709\u4e1a\u52a1\u903b\u8f91\uff09\u548c\u8d2b\u8840\u6a21\u578b\uff08\u9886\u57df\u5bf9\u8c61\u6709\u5c11\u91cf\u7684\u4e1a\u52a1\u903b\u8f91\uff09\uff0c\u6211\u4eec\u8fd9\u91cc\u5c31\u4e0d\u5bf9\u6b64\u52a0\u4ee5\u533a\u5206\u4e86\u3002\u5145\u8840\u6a21\u578b\u5c06\u5927\u591a\u6570\u4e1a\u52a1\u903b\u8f91\u548c\u6301\u4e45\u5316\u653e\u5728\u9886\u57df\u5bf9\u8c61\u4e2d\uff0c\u4e1a\u52a1\u903b\u8f91\uff08\u4e1a\u52a1\u95e8\u9762\uff09\u53ea\u662f\u5b8c\u6210\u5bf9\u4e1a\u52a1\u903b\u8f91\u7684\u5c01\u88c5\u3001\u4e8b\u52a1\u548c\u6743\u9650\u7b49\u7684\u5904\u7406\u3002\u4e0b\u9762\u4e24\u5f20\u56fe\u5206\u522b\u5c55\u793a\u4e86\u8d2b\u8840\u6a21\u578b\u548c\u5145\u8840\u6a21\u578b\u7684\u5206\u5c42\u67b6\u6784\u3002\n\n\u8d2b\u8840\u6a21\u578b\n201911071003_4.png\n\u5145\u8840\u6a21\u578b\n201911071003_5.png\n\u8d2b\u8840\u6a21\u578b\u4e0b\u7ec4\u7ec7\u9886\u57df\u903b\u8f91\u901a\u5e38\u4f7f\u7528\u4e8b\u52a1\u811a\u672c\u6a21\u5f0f\uff0c\u8ba9\u6bcf\u4e2a\u8fc7\u7a0b\u5bf9\u5e94\u7528\u6237\u53ef\u80fd\u8981\u505a\u7684\u4e00\u4e2a\u52a8\u4f5c\uff0c\u6bcf\u4e2a\u52a8\u4f5c\u7531\u4e00\u4e2a\u8fc7\u7a0b\u6765\u9a71\u52a8\u3002\u4e5f\u5c31\u662f\u8bf4\u5728\u8bbe\u8ba1\u4e1a\u52a1\u903b\u8f91\u63a5\u53e3\u7684\u65f6\u5019\uff0c\u6bcf\u4e2a\u65b9\u6cd5\u5bf9\u5e94\u7740\u7528\u6237\u7684\u4e00\u4e2a\u64cd\u4f5c\uff0c\u8fd9\u79cd\u6a21\u5f0f\u6709\u4ee5\u4e0b\u51e0\u4e2a\u6709\u70b9\uff1a\n\n\u5b83\u662f\u4e00\u4e2a\u5927\u591a\u6570\u5f00\u53d1\u8005\u90fd\u80fd\u591f\u7406\u89e3\u7684\u7b80\u5355\u8fc7\u7a0b\u6a21\u578b\uff08\u9002\u5408\u56fd\u5185\u7684\u7edd\u5927\u591a\u6570\u5f00\u53d1\u8005\uff09\u3002\n\u5b83\u80fd\u591f\u4e0e\u4e00\u4e2a\u4f7f\u7528\u884c\u6570\u636e\u5165\u53e3\u6216\u8868\u6570\u636e\u5165\u53e3\u7684\u7b80\u5355\u6570\u636e\u8bbf\u95ee\u5c42\u5f88\u597d\u7684\u534f\u4f5c\u3002\n\u4e8b\u52a1\u8fb9\u754c\u7684\u663e\u800c\u6613\u89c1\uff0c\u4e00\u4e2a\u4e8b\u52a1\u5f00\u59cb\u4e8e\u811a\u672c\u7684\u5f00\u59cb\uff0c\u7ec8\u6b62\u4e8e\u811a\u672c\u7684\u7ed3\u675f\uff0c\u5f88\u5bb9\u6613\u901a\u8fc7\u4ee3\u7406\uff08\u6216\u5207\u9762\uff09\u5b9e\u73b0\u58f0\u660e\u5f0f\u4e8b\u52a1\u3002\n\n\n\u7136\u800c\uff0c\u4e8b\u52a1\u811a\u672c\u6a21\u5f0f\u7684\u7f3a\u70b9\u4e5f\u662f\u5f88\u591a\u7684\uff0c\u968f\u7740\u9886\u57df\u903b\u8f91\u590d\u6742\u6027\u7684\u589e\u52a0\uff0c\u7cfb\u7edf\u7684\u590d\u6742\u6027\u5c06\u8fc5\u901f\u589e\u52a0\uff0c\u7a0b\u5e8f\u7ed3\u6784\u5c06\u53d8\u5f97\u6781\u5ea6\u6df7\u4e71\u3002\u5f00\u6e90\u4e2d\u56fd\u793e\u533a\u4e0a\u6709\u4e00\u7bc7\u5f88\u597d\u7684\u8bd1\u6587\u300a\u8d2b\u8840\u9886\u57df\u6a21\u578b\u662f\u5982\u4f55\u5bfc\u81f4\u7cdf\u7cd5\u7684\u8f6f\u4ef6\u4ea7\u751f\u300b\u5bf9\u8fd9\u4e2a\u95ee\u9898\u505a\u4e86\u6bd4\u8f83\u7ec6\u81f4\u7684\u9610\u8ff0\u3002\n\n\u8c08\u4e00\u8c08\u6d4b\u8bd5\u9a71\u52a8\u5f00\u53d1\uff08TDD\uff09\u7684\u597d\u5904\u4ee5\u53ca\u4f60\u7684\u7406\u89e3\u3002\n\u7b54\uff1aTDD\u662f\u6307\u5728\u7f16\u5199\u771f\u6b63\u7684\u529f\u80fd\u5b9e\u73b0\u4ee3\u7801\u4e4b\u524d\u5148\u5199\u6d4b\u8bd5\u4ee3\u7801\uff0c\u7136\u540e\u6839\u636e\u9700\u8981\u91cd\u6784\u5b9e\u73b0\u4ee3\u7801\u3002\u5728JUnit\u7684\u4f5c\u8005Kent Beck\u7684\u5927\u4f5c\u300a\u6d4b\u8bd5\u9a71\u52a8\u5f00\u53d1\uff1a\u5b9e\u6218\u4e0e\u6a21\u5f0f\u89e3\u6790\u300b\uff08Test-Driven Development: by Example\uff09\u4e00\u4e66\u4e2d\u6709\u8fd9\u4e48\u4e00\u6bb5\u5185\u5bb9\uff1a\u201c\u6d88\u9664\u6050\u60e7\u548c\u4e0d\u786e\u5b9a\u6027\u662f\u7f16\u5199\u6d4b\u8bd5\u9a71\u52a8\u4ee3\u7801\u7684\u91cd\u8981\u539f\u56e0\u201d\u3002\u56e0\u4e3a\u7f16\u5199\u4ee3\u7801\u65f6\u7684\u6050\u60e7\u4f1a\u8ba9\u4f60\u5c0f\u5fc3\u8bd5\u63a2\uff0c\u8ba9\u4f60\u56de\u907f\u6c9f\u901a\uff0c\u8ba9\u4f60\u7f9e\u4e8e\u5f97\u5230\u53cd\u9988\uff0c\u8ba9\u4f60\u53d8\u5f97\u7126\u8e81\u4e0d\u5b89\uff0c\u800cTDD\u662f\u6d88\u9664\u6050\u60e7\u3001\u8ba9Java\u5f00\u53d1\u8005\u66f4\u52a0\u81ea\u4fe1\u66f4\u52a0\u4e50\u4e8e\u6c9f\u901a\u7684\u91cd\u8981\u624b\u6bb5\u3002TDD\u4f1a\u5e26\u6765\u7684\u597d\u5904\u53ef\u80fd\u4e0d\u4f1a\u9a6c\u4e0a\u5448\u73b0\uff0c\u4f46\u662f\u4f60\u5728\u67d0\u4e2a\u65f6\u5019\u4e00\u5b9a\u4f1a\u53d1\u73b0\uff0c\u8fd9\u4e9b\u597d\u5904\u5305\u62ec\uff1a- \u66f4\u6e05\u6670\u7684\u4ee3\u7801 \u2014 \u53ea\u5199\u9700\u8981\u7684\u4ee3\u7801- \u66f4\u597d\u7684\u8bbe\u8ba1- \u66f4\u51fa\u8272\u7684\u7075\u6d3b\u6027 \u2014 \u9f13\u52b1\u7a0b\u5e8f\u5458\u9762\u5411\u63a5\u53e3\u7f16\u7a0b- \u66f4\u5feb\u901f\u7684\u53cd\u9988 \u2014 \u4e0d\u4f1a\u5230\u7cfb\u7edf\u4e0a\u7ebf\u65f6\u624d\u77e5\u9053bug\u7684\u5b58\u5728\n\n\u8865\u5145\uff1a\u654f\u6377\u8f6f\u4ef6\u5f00\u53d1\u7684\u6982\u5ff5\u5df2\u7ecf\u6709\u5f88\u591a\u5e74\u4e86\uff0c\u800c\u4e14\u4e5f\u90e8\u5206\u7684\u6539\u53d8\u4e86\u8f6f\u4ef6\u5f00\u53d1\u8fd9\u4e2a\u884c\u4e1a\uff0cTDD\u4e5f\u662f\u654f\u6377\u5f00\u53d1\u6240\u5021\u5bfc\u7684\u3002\nTDD\u53ef\u4ee5\u5728\u591a\u4e2a\u5c42\u7ea7\u4e0a\u5e94\u7528\uff0c\u5305\u62ec\u5355\u5143\u6d4b\u8bd5\uff08\u6d4b\u8bd5\u4e00\u4e2a\u7c7b\u4e2d\u7684\u4ee3\u7801\uff09\u3001\u96c6\u6210\u6d4b\u8bd5\uff08\u6d4b\u8bd5\u7c7b\u4e4b\u95f4\u7684\u4ea4\u4e92\uff09\u3001\u7cfb\u7edf\u6d4b\u8bd5\uff08\u6d4b\u8bd5\u8fd0\u884c\u7684\u7cfb\u7edf\uff09\u548c\u7cfb\u7edf\u96c6\u6210\u6d4b\u8bd5\uff08\u6d4b\u8bd5\u8fd0\u884c\u7684\u7cfb\u7edf\u5305\u62ec\u4f7f\u7528\u7684\u7b2c\u4e09\u65b9\u7ec4\u4ef6\uff09\u3002TDD\u7684\u5b9e\u65bd\u6b65\u9aa4\u662f\uff1a\n\n\u7ea2\uff08\u5931\u8d25\u6d4b\u8bd5\uff09\n\u7eff\uff08\u901a\u8fc7\u6d4b\u8bd5\uff09\n\u91cd\u6784\u3002\n\n\n\u5173\u4e8e\u5b9e\u65bdTDD\u7684\u8be6\u7ec6\u6b65\u9aa4\u8bf7\u53c2\u8003\u53e6\u4e00\u7bc7\u6587\u7ae0\u300a\u6d4b\u8bd5\u9a71\u52a8\u5f00\u53d1\u4e4b\u521d\u7aa5\u95e8\u5f84\u300b\u3002\u5728\u4f7f\u7528TDD\u5f00\u53d1\u65f6\uff0c\u7ecf\u5e38\u4f1a\u9047\u5230\u9700\u8981\u88ab\u6d4b\u5bf9\u8c61\u9700\u8981\u4f9d\u8d56\u5176\u4ed6\u5b50\u7cfb\u7edf\u7684\u60c5\u51b5\uff0c\u4f46\u662f\u4f60\u5e0c\u671b\u5c06\u6d4b\u8bd5\u4ee3\u7801\u8ddf\u4f9d\u8d56\u9879\u9694\u79bb\uff0c\u4ee5\u4fdd\u8bc1\u6d4b\u8bd5\u4ee3\u7801\u4ec5\u4ec5\u9488\u5bf9\u5f53\u524d\u88ab\u6d4b\u5bf9\u8c61\u6216\u65b9\u6cd5\u5c55\u5f00\uff0c\u8fd9\u65f6\u5019\u4f60\u9700\u8981\u7684\u662f\u6d4b\u8bd5\u66ff\u8eab\u3002\n\u6d4b\u8bd5\u66ff\u8eab\u53ef\u4ee5\u5206\u4e3a\u56db\u7c7b\uff1a\n\n\u865a\u8bbe\u66ff\u8eab\uff1a\u53ea\u4f20\u9012\u4f46\u662f\u4e0d\u4f1a\u4f7f\u7528\u5230\u7684\u5bf9\u8c61\uff0c\u4e00\u822c\u7528\u4e8e\u586b\u5145\u65b9\u6cd5\u7684\u53c2\u6570\u5217\u8868\n\u5b58\u6839\u66ff\u8eab\uff1a\u603b\u662f\u8fd4\u56de\u76f8\u540c\u7684\u9884\u8bbe\u54cd\u5e94\uff0c\u5176\u4e2d\u53ef\u80fd\u5305\u62ec\u4e00\u4e9b\u865a\u8bbe\u72b6\u6001\n\u4f2a\u88c5\u66ff\u8eab\uff1a\u53ef\u4ee5\u53d6\u4ee3\u771f\u5b9e\u7248\u672c\u7684\u53ef\u7528\u7248\u672c\uff08\u6bd4\u771f\u5b9e\u7248\u672c\u8fd8\u662f\u4f1a\u5dee\u5f88\u591a\uff09\n\u6a21\u62df\u66ff\u8eab\uff1a\u53ef\u4ee5\u8868\u793a\u4e00\u7cfb\u5217\u671f\u671b\u503c\u7684\u5bf9\u8c61\uff0c\u5e76\u4e14\u53ef\u4ee5\u63d0\u4f9b\u9884\u8bbe\u54cd\u5e94Java\u4e16\u754c\u4e2d\u5b9e\u73b0\u6a21\u62df\u66ff\u8eab\u7684\u7b2c\u4e09\u65b9\u5de5\u5177\u975e\u5e38\u591a\uff0c\u5305\u62ecEasyMock\u3001Mockito\u3001jMock\u7b49\u3002\n\n\n\u6765\u6e90\uff1ahttps://www.jianshu.com/p/088a9d0b8249\n", "categories": [{"name": "\u6781\u5ba2", "slug": "\u6781\u5ba2", "permalink": "/category/\u6781\u5ba2/"}], "tags": [{"name": "Java", "slug": "Java", "permalink": "/tag/Java/"}, {"name": "\u9762\u8bd5\u9898", "slug": "\u9762\u8bd5\u9898", "permalink": "/tag/\u9762\u8bd5\u9898/"}, {"name": "IT", "slug": "IT", "permalink": "/tag/IT/"}]}, {"title": "Java\u9762\u8bd5\u98982", "date": "2020-01-05T12:00:00-00.00", "path": "/archives/java-interview-2/", "text": "\u4ece\u7f51\u7edc\u4e0a\u6536\u96c6\u6574\u7406\u7684Java\u9762\u8bd5\u9898\uff0c\u5982\u6709\u4fb5\u6743\uff0c\u8bf7\u8054\u7cfb\u5220\u9664\uff01\u8fd9\u90e8\u5206\u4e3b\u8981\u662f\u4e0eJava Web\u548cWeb Service\u76f8\u5173\u7684\u9762\u8bd5\u9898\u3002\n96\u3001\u9610\u8ff0Servlet\u548cCGI\u7684\u533a\u522b?\n\u7b54\uff1aServlet\u4e0eCGI\u7684\u533a\u522b\u5728\u4e8eServlet\u5904\u4e8e\u670d\u52a1\u5668\u8fdb\u7a0b\u4e2d\uff0c\u5b83\u901a\u8fc7\u591a\u7ebf\u7a0b\u65b9\u5f0f\u8fd0\u884c\u5176service()\u65b9\u6cd5\uff0c\u4e00\u4e2a\u5b9e\u4f8b\u53ef\u4ee5\u670d\u52a1\u4e8e\u591a\u4e2a\u8bf7\u6c42\uff0c\u5e76\u4e14\u5176\u5b9e\u4f8b\u4e00\u822c\u4e0d\u4f1a\u9500\u6bc1\uff0c\u800cCGI\u5bf9\u6bcf\u4e2a\u8bf7\u6c42\u90fd\u4ea7\u751f\u65b0\u7684\u8fdb\u7a0b\uff0c\u670d\u52a1\u5b8c\u6210\u540e\u5c31\u9500\u6bc1\uff0c\u6240\u4ee5\u6548\u7387\u4e0a\u4f4e\u4e8eServlet\u3002\n\u8865\u5145\uff1aSun Microsystems\u516c\u53f8\u57281996\u5e74\u53d1\u5e03Servlet\u6280\u672f\u5c31\u662f\u4e3a\u4e86\u548cCGI\u8fdb\u884c\u7ade\u4e89\uff0cServlet\u662f\u4e00\u4e2a\u7279\u6b8a\u7684Java\u7a0b\u5e8f\uff0c\u4e00\u4e2a\u57fa\u4e8eJava\u7684Web\u5e94\u7528\u901a\u5e38\u5305\u542b\u4e00\u4e2a\u6216\u591a\u4e2aServlet\u7c7b\u3002\nServlet\u4e0d\u80fd\u591f\u81ea\u884c\u521b\u5efa\u5e76\u6267\u884c\uff0c\u5b83\u662f\u5728Servlet\u5bb9\u5668\u4e2d\u8fd0\u884c\u7684\uff0c\u5bb9\u5668\u5c06\u7528\u6237\u7684\u8bf7\u6c42\u4f20\u9012\u7ed9Servlet\u7a0b\u5e8f\uff0c\u5e76\u5c06Servlet\u7684\u54cd\u5e94\u56de\u4f20\u7ed9\u7528\u6237\u3002\u901a\u5e38\u4e00\u4e2aServlet\u4f1a\u5173\u8054\u4e00\u4e2a\u6216\u591a\u4e2aJSP\u9875\u9762\u3002\n\u4ee5\u524dCGI\u7ecf\u5e38\u56e0\u4e3a\u6027\u80fd\u5f00\u9500\u4e0a\u7684\u95ee\u9898\u88ab\u8bdf\u75c5\uff0c\u7136\u800cFast CGI\u65e9\u5c31\u5df2\u7ecf\u89e3\u51b3\u4e86CGI\u6548\u7387\u4e0a\u7684\u95ee\u9898\uff0c\u6240\u4ee5\u9762\u8bd5\u7684\u65f6\u5019\u5927\u53ef\u4e0d\u5fc5\u4fe1\u53e3\u5f00\u6cb3\u7684\u8bdf\u75c5CGI\uff0c\u4e8b\u5b9e\u4e0a\u6709\u5f88\u591a\u4f60\u719f\u6089\u7684\u7f51\u7ad9\u90fd\u4f7f\u7528\u4e86CGI\u6280\u672f\u3002\n97\u3001Servlet\u63a5\u53e3\u4e2d\u6709\u54ea\u4e9b\u65b9\u6cd5\uff1f\n\u7b54\uff1aServlet\u63a5\u53e3\u5b9a\u4e49\u4e865\u4e2a\u65b9\u6cd5\uff0c\u5176\u4e2d\u524d\u4e09\u4e2a\u65b9\u6cd5\u4e0eServlet\u751f\u547d\u5468\u671f\u76f8\u5173\uff1a\n\nvoid init(ServletConfig config) throws ServletException\n\nvoid service(ServletRequest req, ServletResponse resp) throws ServletException, java.io.IOException\n\nvoid destory()\n\njava.lang.String getServletInfo()\n\nServletConfig getServletConfig()\n\n\nWeb\u5bb9\u5668\u52a0\u8f7dServlet\u5e76\u5c06\u5176\u5b9e\u4f8b\u5316\u540e\uff0cServlet\u751f\u547d\u5468\u671f\u5f00\u59cb\uff0c\u5bb9\u5668\u8fd0\u884c\u5176init()\u65b9\u6cd5\u8fdb\u884cServlet\u7684\u521d\u59cb\u5316\uff1b\n\u8bf7\u6c42\u5230\u8fbe\u65f6\u8c03\u7528Servlet\u7684service()\u65b9\u6cd5\uff0cservice()\u65b9\u6cd5\u4f1a\u6839\u636e\u9700\u8981\u8c03\u7528\u4e0e\u8bf7\u6c42\u5bf9\u5e94\u7684doGet\u6216doPost\u7b49\u65b9\u6cd5\uff1b\n\u5f53\u670d\u52a1\u5668\u5173\u95ed\u6216\u9879\u76ee\u88ab\u5378\u8f7d\u65f6\u670d\u52a1\u5668\u4f1a\u5c06Servlet\u5b9e\u4f8b\u9500\u6bc1\uff0c\u6b64\u65f6\u4f1a\u8c03\u7528Servlet\u7684destroy()\u65b9\u6cd5\u3002\n98\u3001\u8f6c\u53d1\uff08forward\uff09\u548c\u91cd\u5b9a\u5411\uff08redirect\uff09\u7684\u533a\u522b\uff1f\n\u7b54\uff1aforward\u662f\u5bb9\u5668\u4e2d\u63a7\u5236\u6743\u7684\u8f6c\u5411\uff0c\u662f\u670d\u52a1\u5668\u8bf7\u6c42\u8d44\u6e90\uff0c\u670d\u52a1\u5668\u76f4\u63a5\u8bbf\u95ee\u76ee\u6807\u5730\u5740\u7684URL\uff0c\u628a\u90a3\u4e2aURL \u7684\u54cd\u5e94\u5185\u5bb9\u8bfb\u53d6\u8fc7\u6765\uff0c\u7136\u540e\u628a\u8fd9\u4e9b\u5185\u5bb9\u518d\u53d1\u7ed9\u6d4f\u89c8\u5668\uff0c\u6d4f\u89c8\u5668\u6839\u672c\u4e0d\u77e5\u9053\u670d\u52a1\u5668\u53d1\u9001\u7684\u5185\u5bb9\u662f\u4ece\u54ea\u513f\u6765\u7684\uff0c\u6240\u4ee5\u5b83\u7684\u5730\u5740\u680f\u4e2d\u8fd8\u662f\u539f\u6765\u7684\u5730\u5740\u3002\nredirect\u5c31\u662f\u670d\u52a1\u5668\u7aef\u6839\u636e\u903b\u8f91\uff0c\u53d1\u9001\u4e00\u4e2a\u72b6\u6001\u7801\uff0c\u544a\u8bc9\u6d4f\u89c8\u5668\u91cd\u65b0\u53bb\u8bf7\u6c42\u90a3\u4e2a\u5730\u5740\uff0c\u56e0\u6b64\u4ece\u6d4f\u89c8\u5668\u7684\u5730\u5740\u680f\u4e2d\u53ef\u4ee5\u770b\u5230\u8df3\u8f6c\u540e\u7684\u94fe\u63a5\u5730\u5740\uff0c\u5f88\u660e\u663eredirect\u65e0\u6cd5\u8bbf\u95ee\u5230\u670d\u52a1\u5668\u4fdd\u62a4\u8d77\u6765\u8d44\u6e90\uff0c\u4f46\u662f\u53ef\u4ee5\u4ece\u4e00\u4e2a\u7f51\u7ad9redirect\u5230\u5176\u4ed6\u7f51\u7ad9\u3002\nforward\u66f4\u52a0\u9ad8\u6548\uff0c\u6240\u4ee5\u5728\u6ee1\u8db3\u9700\u8981\u65f6\u5c3d\u91cf\u4f7f\u7528forward\uff08\u901a\u8fc7\u8c03\u7528RequestDispatcher\u5bf9\u8c61\u7684forward()\u65b9\u6cd5\uff0c\u8be5\u5bf9\u8c61\u53ef\u4ee5\u901a\u8fc7ServletRequest\u5bf9\u8c61\u7684getRequestDispatcher()\u65b9\u6cd5\u83b7\u5f97\uff09\uff0c\u5e76\u4e14\u8fd9\u6837\u4e5f\u6709\u52a9\u4e8e\u9690\u85cf\u5b9e\u9645\u7684\u94fe\u63a5\uff1b\u5728\u6709\u4e9b\u60c5\u51b5\u4e0b\uff0c\u6bd4\u5982\u9700\u8981\u8bbf\u95ee\u4e00\u4e2a\u5176\u5b83\u670d\u52a1\u5668\u4e0a\u7684\u8d44\u6e90\uff0c\u5219\u5fc5\u987b\u4f7f\u7528\u91cd\u5b9a\u5411\uff08\u901a\u8fc7HttpServletResponse\u5bf9\u8c61\u8c03\u7528\u5176sendRedirect()\u65b9\u6cd5\u5b9e\u73b0\uff09\u3002\n99\u3001JSP\u6709\u54ea\u4e9b\u5185\u7f6e\u5bf9\u8c61\uff1f\u4f5c\u7528\u5206\u522b\u662f\u4ec0\u4e48\uff1f\n\u7b54\uff1aJSP\u67099\u4e2a\u5185\u7f6e\u5bf9\u8c61\uff1a\n\nrequest\uff1a\u5c01\u88c5\u5ba2\u6237\u7aef\u7684\u8bf7\u6c42\uff0c\u5176\u4e2d\u5305\u542b\u6765\u81eaGET\u6216POST\u8bf7\u6c42\u7684\u53c2\u6570\uff1b\n\nresponse\uff1a\u5c01\u88c5\u670d\u52a1\u5668\u5bf9\u5ba2\u6237\u7aef\u7684\u54cd\u5e94\uff1b\n\npageContext\uff1a\u901a\u8fc7\u8be5\u5bf9\u8c61\u53ef\u4ee5\u83b7\u53d6\u5176\u4ed6\u5bf9\u8c61\uff1b\n\nsession\uff1a\u5c01\u88c5\u7528\u6237\u4f1a\u8bdd\u7684\u5bf9\u8c61\uff1b\n\napplication\uff1a\u5c01\u88c5\u670d\u52a1\u5668\u8fd0\u884c\u73af\u5883\u7684\u5bf9\u8c61\uff1b\n\nout\uff1a\u8f93\u51fa\u670d\u52a1\u5668\u54cd\u5e94\u7684\u8f93\u51fa\u6d41\u5bf9\u8c61\uff1b\n\nconfig\uff1aWeb\u5e94\u7528\u7684\u914d\u7f6e\u5bf9\u8c61\uff1b\n\npage\uff1aJSP\u9875\u9762\u672c\u8eab\uff08\u76f8\u5f53\u4e8eJava\u7a0b\u5e8f\u4e2d\u7684this\uff09\uff1b\n\nexception\uff1a\u5c01\u88c5\u9875\u9762\u629b\u51fa\u5f02\u5e38\u7684\u5bf9\u8c61\u3002\n\n\n\u8865\u5145\uff1a\u5982\u679c\u7528Servlet\u6765\u751f\u6210\u7f51\u9875\u4e2d\u7684\u52a8\u6001\u5185\u5bb9\u65e0\u7591\u662f\u975e\u5e38\u7e41\u7410\u7684\u5de5\u4f5c\uff0c\u53e6\u4e00\u65b9\u9762\uff0c\u6240\u6709\u7684\u6587\u672c\u548cHTML\u6807\u7b7e\u90fd\u662f\u786c\u7f16\u7801\uff0c\u5373\u4f7f\u505a\u51fa\u5fae\u5c0f\u7684\u4fee\u6539\uff0c\u90fd\u9700\u8981\u8fdb\u884c\u91cd\u65b0\u7f16\u8bd1\u3002\nJSP\u89e3\u51b3\u4e86Servlet\u7684\u8fd9\u4e9b\u95ee\u9898\uff0c\u5b83\u662fServlet\u5f88\u597d\u7684\u8865\u5145\uff0c\u53ef\u4ee5\u4e13\u95e8\u7528\u4f5c\u4e3a\u7528\u6237\u5448\u73b0\u89c6\u56fe\uff08View\uff09\uff0c\u800cServlet\u4f5c\u4e3a\u63a7\u5236\u5668\uff08Controller\uff09\u4e13\u95e8\u8d1f\u8d23\u5904\u7406\u7528\u6237\u8bf7\u6c42\u5e76\u8f6c\u53d1\u6216\u91cd\u5b9a\u5411\u5230\u67d0\u4e2a\u9875\u9762\u3002\u57fa\u4e8eJava\u7684Web\u5f00\u53d1\u5f88\u591a\u90fd\u540c\u65f6\u4f7f\u7528\u4e86Servlet\u548cJSP\u3002JSP\u9875\u9762\u5176\u5b9e\u662f\u4e00\u4e2aServlet\uff0c\u80fd\u591f\u8fd0\u884cServlet\u7684\u670d\u52a1\u5668\uff08Servlet\u5bb9\u5668\uff09\u901a\u5e38\u4e5f\u662fJSP\u5bb9\u5668\uff0c\u53ef\u4ee5\u63d0\u4f9bJSP\u9875\u9762\u7684\u8fd0\u884c\u73af\u5883\uff0cTomcat\u5c31\u662f\u4e00\u4e2aServlet/JSP\u5bb9\u5668\u3002\n\u7b2c\u4e00\u6b21\u8bf7\u6c42\u4e00\u4e2aJSP\u9875\u9762\u65f6\uff0cServlet/JSP\u5bb9\u5668\u9996\u5148\u5c06JSP\u9875\u9762\u8f6c\u6362\u6210\u4e00\u4e2aJSP\u9875\u9762\u7684\u5b9e\u73b0\u7c7b\uff0c\u8fd9\u662f\u4e00\u4e2a\u5b9e\u73b0\u4e86JspPage\u63a5\u53e3\u6216\u5176\u5b50\u63a5\u53e3HttpJspPage\u7684Java\u7c7b\u3002JspPage\u63a5\u53e3\u662fServlet\u7684\u5b50\u63a5\u53e3\uff0c\u56e0\u6b64\u6bcf\u4e2aJSP\u9875\u9762\u90fd\u662f\u4e00\u4e2aServlet\u3002\u8f6c\u6362\u6210\u529f\u540e\uff0c\u5bb9\u5668\u4f1a\u7f16\u8bd1Servlet\u7c7b\uff0c\u4e4b\u540e\u5bb9\u5668\u52a0\u8f7d\u548c\u5b9e\u4f8b\u5316Java\u5b57\u8282\u7801\uff0c\u5e76\u6267\u884c\u5b83\u901a\u5e38\u5bf9Servlet\u6240\u505a\u7684\u751f\u547d\u5468\u671f\u64cd\u4f5c\u3002\n\u5bf9\u540c\u4e00\u4e2aJSP\u9875\u9762\u7684\u540e\u7eed\u8bf7\u6c42\uff0c\u5bb9\u5668\u4f1a\u67e5\u770b\u8fd9\u4e2aJSP\u9875\u9762\u662f\u5426\u88ab\u4fee\u6539\u8fc7\uff0c\u5982\u679c\u4fee\u6539\u8fc7\u5c31\u4f1a\u91cd\u65b0\u8f6c\u6362\u5e76\u91cd\u65b0\u7f16\u8bd1\u5e76\u6267\u884c\u3002\u5982\u679c\u6ca1\u6709\u5219\u6267\u884c\u5185\u5b58\u4e2d\u5df2\u7ecf\u5b58\u5728\u7684Servlet\u5b9e\u4f8b\u3002\u6211\u4eec\u53ef\u4ee5\u770b\u4e00\u6bb5JSP\u4ee3\u7801\u5bf9\u5e94\u7684Java\u7a0b\u5e8f\u5c31\u77e5\u9053\u4e00\u5207\u4e86\uff0c\u800c\u4e149\u4e2a\u5185\u7f6e\u5bf9\u8c61\u7684\u795e\u79d8\u9762\u7eb1\u4e5f\u4f1a\u88ab\u63ed\u5f00\u3002\nJSP\u9875\u9762\uff1a\n\n    &lt;%@ page pageEncoding=\"UTF-8\"%&gt;\n    &lt;%\n    String path = request.getContextPath();\n    String basePath = request.getScheme() + \"://\" + request.getServerName() + \":\" + request.getServerPort() + path + \"/\";\n    %&gt;\n\n    &lt;!DOCTYPE html&gt;\n    &lt;html&gt;\n      &lt;head&gt;\n        &lt;base href=\"&lt;%=basePath%&gt;\"&gt;\n        &lt;title&gt;\u9996\u9875&lt;/title&gt;\n        &lt;style type=\"text/css\"&gt;\n            * { font-family: \"Arial\"; }\n        &lt;/style&gt;\n      &lt;/head&gt;\n\n      &lt;body&gt;\n        &lt;h1&gt;Hello, World!&lt;/h1&gt;\n        &lt;hr/&gt;\n        &lt;h2&gt;Current time is: &lt;%= new java.util.Date().toString() %&gt;&lt;/h2&gt;\n      &lt;/body&gt;\n    &lt;/html&gt;\n\u5bf9\u5e94\u7684Java\u4ee3\u7801\uff1a\n\n    /*\n     * Generated by the Jasper component of Apache Tomcat\n     * Version: Apache Tomcat/7.0.52\n     * Generated at: 2014-10-13 13:28:38 UTC\n     * Note: The last modified time of this file was set to\n     *       the last modified time of the source file after\n     *       generation to assist with modification tracking.\n     */\n    package org.apache.jsp;\n\n    import javax.servlet.*;\n    import javax.servlet.http.*;\n    import javax.servlet.jsp.*;\n\n    public final class index_jsp extends org.apache.jasper.runtime.HttpJspBase\n            implements org.apache.jasper.runtime.JspSourceDependent {\n\n        private static final javax.servlet.jsp.JspFactory _jspxFactory = javax.servlet.jsp.JspFactory\n                .getDefaultFactory();\n\n        private static java.util.Map&lt;java.lang.String, java.lang.Long&gt; _jspx_dependants;\n\n        private javax.el.ExpressionFactory _el_expressionfactory;\n        private org.apache.tomcat.InstanceManager _jsp_instancemanager;\n\n        public java.util.Map&lt;java.lang.String, java.lang.Long&gt; getDependants() {\n            return _jspx_dependants;\n        }\n\n        public void _jspInit() {\n            _el_expressionfactory = _jspxFactory.getJspApplicationContext(\n                    getServletConfig().getServletContext()).getExpressionFactory();\n            _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory\n                    .getInstanceManager(getServletConfig());\n        }\n\n        public void _jspDestroy() {\n        }\n\n        public void _jspService(\n                final javax.servlet.http.HttpServletRequest request,\n                final javax.servlet.http.HttpServletResponse response)\n                throws java.io.IOException, javax.servlet.ServletException {\n            // \u5185\u7f6e\u5bf9\u8c61\u5c31\u662f\u5728\u8fd9\u91cc\u5b9a\u4e49\u7684\n            final javax.servlet.jsp.PageContext pageContext;\n            javax.servlet.http.HttpSession session = null;\n            final javax.servlet.ServletContext application;\n            final javax.servlet.ServletConfig config;\n            javax.servlet.jsp.JspWriter out = null;\n            final java.lang.Object page = this;\n            javax.servlet.jsp.JspWriter _jspx_out = null;\n            javax.servlet.jsp.PageContext _jspx_page_context = null;\n\n            try {\n                response.setContentType(\"text/html;charset=UTF-8\");\n                pageContext = _jspxFactory.getPageContext(this, request, response,\n                        null, true, 8192, true);\n                _jspx_page_context = pageContext;\n                application = pageContext.getServletContext();\n                config = pageContext.getServletConfig();\n                session = pageContext.getSession();\n                out = pageContext.getOut();\n                _jspx_out = out;\n\n                out.write('\\r');\n                out.write('\\n');\n\n                String path = request.getContextPath();\n                String basePath = request.getScheme() + \"://\"\n                        + request.getServerName() + \":\" + request.getServerPort()\n                        + path + \"/\";\n    // \u4ee5\u4e0b\u4ee3\u7801\u901a\u8fc7\u8f93\u51fa\u6d41\u5c06HTML\u6807\u7b7e\u8f93\u51fa\u5230\u6d4f\u89c8\u5668\u4e2d\n                out.write(\"\\r\\n\");\n                out.write(\"\\r\\n\");\n                out.write(\"&lt;!DOCTYPE html&gt;\\r\\n\");\n                out.write(\"&lt;html&gt;\\r\\n\");\n                out.write(\"  &lt;head&gt;\\r\\n\");\n                out.write(\"    &lt;base href=\\\"\");\n                out.print(basePath);\n                out.write(\"\\\"&gt;\\r\\n\");\n                out.write(\"    &lt;title&gt;\u9996\u9875&lt;/title&gt;\\r\\n\");\n                out.write(\"    &lt;style type=\\\"text/css\\\"&gt;\\r\\n\");\n                out.write(\"    \\t* { font-family: \\\"Arial\\\"; }\\r\\n\");\n                out.write(\"    &lt;/style&gt;\\r\\n\");\n                out.write(\"  &lt;/head&gt;\\r\\n\");\n                out.write(\"  \\r\\n\");\n                out.write(\"  &lt;body&gt;\\r\\n\");\n                out.write(\"    &lt;h1&gt;Hello, World!&lt;/h1&gt;\\r\\n\");\n                out.write(\"    &lt;hr/&gt;\\r\\n\");\n                out.write(\"    &lt;h2&gt;Current time is: \");\n                out.print(new java.util.Date().toString());\n                out.write(\"&lt;/h2&gt;\\r\\n\");\n                out.write(\"  &lt;/body&gt;\\r\\n\");\n                out.write(\"&lt;/html&gt;\\r\\n\");\n            } catch (java.lang.Throwable t) {\n                if (!(t instanceof javax.servlet.jsp.SkipPageException)) {\n                    out = _jspx_out;\n                    if (out != null &amp;&amp; out.getBufferSize() != 0)\n                        try {\n                            out.clearBuffer();\n                        } catch (java.io.IOException e) {\n                        }\n                    if (_jspx_page_context != null)\n                        _jspx_page_context.handlePageException(t);\n                    else\n                        throw new ServletException(t);\n                }\n            } finally {\n                _jspxFactory.releasePageContext(_jspx_page_context);\n            }\n        }\n    }\n100\u3001get\u548cpost\u8bf7\u6c42\u7684\u533a\u522b\uff1f\n\u7b54\uff1a\u2460get\u8bf7\u6c42\u7528\u6765\u4ece\u670d\u52a1\u5668\u4e0a\u83b7\u5f97\u8d44\u6e90\uff0c\u800cpost\u662f\u7528\u6765\u5411\u670d\u52a1\u5668\u63d0\u4ea4\u6570\u636e\uff1b\n\u2461get\u5c06\u8868\u5355\u4e2d\u6570\u636e\u6309\u7167name=value\u7684\u5f62\u5f0f\uff0c\u6dfb\u52a0\u5230action \u6240\u6307\u5411\u7684URL \u540e\u9762\uff0c\u5e76\u4e14\u4e24\u8005\u4f7f\u7528\"?\"\u8fde\u63a5\uff0c\u800c\u5404\u4e2a\u53d8\u91cf\u4e4b\u95f4\u4f7f\u7528\"&amp;\"\u8fde\u63a5\uff1bpost\u662f\u5c06\u8868\u5355\u4e2d\u7684\u6570\u636e\u653e\u5728HTTP\u534f\u8bae\u7684\u8bf7\u6c42\u5934\u6216\u6d88\u606f\u4f53\u4e2d\uff0c\u4f20\u9012\u5230action\u6240\u6307\u5411URL\uff1b\n\u2462get\u4f20\u8f93\u7684\u6570\u636e\u8981\u53d7\u5230URL\u957f\u5ea6\u9650\u5236\uff081024\u5b57\u8282\uff09\uff1b\u800cpost\u53ef\u4ee5\u4f20\u8f93\u5927\u91cf\u7684\u6570\u636e\uff0c\u4e0a\u4f20\u6587\u4ef6\u901a\u5e38\u8981\u4f7f\u7528post\u65b9\u5f0f\uff1b\n\u2463\u4f7f\u7528get\u65f6\u53c2\u6570\u4f1a\u663e\u793a\u5728\u5730\u5740\u680f\u4e0a\uff0c\u5982\u679c\u8fd9\u4e9b\u6570\u636e\u4e0d\u662f\u654f\u611f\u6570\u636e\uff0c\u90a3\u4e48\u53ef\u4ee5\u4f7f\u7528get\uff1b\u5bf9\u4e8e\u654f\u611f\u6570\u636e\u8fd8\u662f\u5e94\u7528\u4f7f\u7528post\uff1b\n\u2464get\u4f7f\u7528MIME\u7c7b\u578bapplication/x-www-form-urlencoded\u7684URL\u7f16\u7801\uff08\u4e5f\u53eb\u767e\u5206\u53f7\u7f16\u7801\uff09\u6587\u672c\u7684\u683c\u5f0f\u4f20\u9012\u53c2\u6570\uff0c\u4fdd\u8bc1\u88ab\u4f20\u9001\u7684\u53c2\u6570\u7531\u9075\u5faa\u89c4\u8303\u7684\u6587\u672c\u7ec4\u6210\uff0c\u4f8b\u5982\u4e00\u4e2a\u7a7a\u683c\u7684\u7f16\u7801\u662f\"%20\"\u3002\n101\u3001\u5e38\u7528\u7684Web\u670d\u52a1\u5668\u6709\u54ea\u4e9b\uff1f\n\u7b54\uff1aUnix\u548cLinux\u5e73\u53f0\u4e0b\u4f7f\u7528\u6700\u5e7f\u6cdb\u7684\u514d\u8d39HTTP\u670d\u52a1\u5668\u662fApache\u670d\u52a1\u5668\uff0c\u800cWindows\u5e73\u53f0\u7684\u670d\u52a1\u5668\u901a\u5e38\u4f7f\u7528IIS\u4f5c\u4e3aWeb\u670d\u52a1\u5668\u3002\n\u9009\u62e9Web\u670d\u52a1\u5668\u5e94\u8003\u8651\u7684\u56e0\u7d20\u6709\uff1a\u6027\u80fd\u3001\u5b89\u5168\u6027\u3001\u65e5\u5fd7\u548c\u7edf\u8ba1\u3001\u865a\u62df\u4e3b\u673a\u3001\u4ee3\u7406\u670d\u52a1\u5668\u3001\u7f13\u51b2\u670d\u52a1\u548c\u96c6\u6210\u5e94\u7528\u7a0b\u5e8f\u7b49\u3002\n\u4e0b\u9762\u662f\u5bf9\u5e38\u89c1\u670d\u52a1\u5668\u7684\u7b80\u4ecb\uff1a\n\nIIS\uff1aMicrosoft\u7684Web\u670d\u52a1\u5668\u4ea7\u54c1\uff0c\u5168\u79f0\u662fInternet Information Services\u3002IIS\u662f\u5141\u8bb8\u5728\u516c\u5171Intranet\u6216Internet\u4e0a\u53d1\u5e03\u4fe1\u606f\u7684Web\u670d\u52a1\u5668\u3002IIS\u662f\u76ee\u524d\u6700\u6d41\u884c\u7684Web\u670d\u52a1\u5668\u4ea7\u54c1\u4e4b\u4e00\uff0c\u5f88\u591a\u8457\u540d\u7684\u7f51\u7ad9\u90fd\u662f\u5efa\u7acb\u5728IIS\u7684\u5e73\u53f0\u4e0a\u3002IIS\u63d0\u4f9b\u4e86\u4e00\u4e2a\u56fe\u5f62\u754c\u9762\u7684\u7ba1\u7406\u5de5\u5177\uff0c\u79f0\u4e3aInternet\u670d\u52a1\u7ba1\u7406\u5668\uff0c\u53ef\u7528\u4e8e\u76d1\u89c6\u914d\u7f6e\u548c\u63a7\u5236Internet\u670d\u52a1\u3002IIS\u662f\u4e00\u79cdWeb\u670d\u52a1\u7ec4\u4ef6\uff0c\u5176\u4e2d\u5305\u62ecWeb\u670d\u52a1\u5668\u3001FTP\u670d\u52a1\u5668\u3001NNTP\u670d\u52a1\u5668\u548cSMTP\u670d\u52a1\u5668\uff0c\u5206\u522b\u7528\u4e8e\u7f51\u9875\u6d4f\u89c8\u3001\u6587\u4ef6\u4f20\u8f93\u3001\u65b0\u95fb\u670d\u52a1\u548c\u90ae\u4ef6\u53d1\u9001\u7b49\u65b9\u9762\uff0c\u5b83\u4f7f\u5f97\u5728\u7f51\u7edc\uff08\u5305\u62ec\u4e92\u8054\u7f51\u548c\u5c40\u57df\u7f51\uff09\u4e0a\u53d1\u5e03\u4fe1\u606f\u6210\u4e86\u4e00\u4ef6\u5f88\u5bb9\u6613\u7684\u4e8b\u3002\u5b83\u63d0\u4f9bISAPI(Intranet Server API\uff09\u4f5c\u4e3a\u6269\u5c55Web\u670d\u52a1\u5668\u529f\u80fd\u7684\u7f16\u7a0b\u63a5\u53e3\uff1b\u540c\u65f6\uff0c\u5b83\u8fd8\u63d0\u4f9b\u4e00\u4e2aInternet\u6570\u636e\u5e93\u8fde\u63a5\u5668\uff0c\u53ef\u4ee5\u5b9e\u73b0\u5bf9\u6570\u636e\u5e93\u7684\u67e5\u8be2\u548c\u66f4\u65b0\u3002\n\nKangle\uff1aKangle Web\u670d\u52a1\u5668\u662f\u4e00\u6b3e\u8de8\u5e73\u53f0\u3001\u529f\u80fd\u5f3a\u5927\u3001\u5b89\u5168\u7a33\u5b9a\u3001\u6613\u64cd\u4f5c\u7684\u9ad8\u6027\u80fdWeb\u670d\u52a1\u5668\u548c\u53cd\u5411\u4ee3\u7406\u670d\u52a1\u5668\u8f6f\u4ef6\u3002\u6b64\u5916\uff0cKangle\u4e5f\u662f\u4e00\u6b3e\u4e13\u4e3a\u505a\u865a\u62df\u4e3b\u673a\u7814\u53d1\u7684Web\u670d\u52a1\u5668\u3002\u5b9e\u73b0\u865a\u62df\u4e3b\u673a\u72ec\u7acb\u8fdb\u7a0b\u3001\u72ec\u7acb\u8eab\u4efd\u8fd0\u884c\u3002\u7528\u6237\u4e4b\u95f4\u5b89\u5168\u9694\u79bb\uff0c\u4e00\u4e2a\u7528\u6237\u51fa\u95ee\u9898\u4e0d\u5f71\u54cd\u5176\u4ed6\u7528\u6237\u3002\u652f\u6301PHP\u3001ASP\u3001ASP.NET\u3001Java\u3001Ruby\u7b49\u591a\u79cd\u52a8\u6001\u5f00\u53d1\u8bed\u8a00\u3002\n\nWebSphere\uff1aWebSphere Application Server\u662f\u529f\u80fd\u5b8c\u5584\u3001\u5f00\u653e\u7684Web\u5e94\u7528\u7a0b\u5e8f\u670d\u52a1\u5668\uff0c\u662fIBM\u7535\u5b50\u5546\u52a1\u8ba1\u5212\u7684\u6838\u5fc3\u90e8\u5206\uff0c\u5b83\u662f\u57fa\u4e8eJava\u7684\u5e94\u7528\u73af\u5883\uff0c\u7528\u4e8e\u5efa\u7acb\u3001\u90e8\u7f72\u548c\u7ba1\u7406Internet\u548cIntranet Web\u5e94\u7528\u7a0b\u5e8f\uff0c\u9002\u5e94\u5404\u79cdWeb\u5e94\u7528\u7a0b\u5e8f\u670d\u52a1\u5668\u7684\u9700\u8981\u3002\n\nWebLogic\uff1aWebLogic Server\u662f\u4e00\u6b3e\u591a\u529f\u80fd\u3001\u57fa\u4e8e\u6807\u51c6\u7684Web\u5e94\u7528\u670d\u52a1\u5668\uff0c\u4e3a\u4f01\u4e1a\u6784\u5efa\u4f01\u4e1a\u5e94\u7528\u63d0\u4f9b\u4e86\u575a\u5b9e\u7684\u57fa\u7840\u3002\u9488\u5bf9\u5404\u79cd\u5e94\u7528\u5f00\u53d1\u3001\u5173\u952e\u6027\u4efb\u52a1\u7684\u90e8\u7f72\uff0c\u5404\u79cd\u7cfb\u7edf\u548c\u6570\u636e\u5e93\u7684\u96c6\u6210\u3001\u8de8Internet\u534f\u4f5c\u7b49Weblogic\u90fd\u63d0\u4f9b\u4e86\u76f8\u5e94\u7684\u652f\u6301\u3002\u7531\u4e8e\u5b83\u5177\u6709\u5168\u9762\u7684\u529f\u80fd\u3001\u5bf9\u5f00\u653e\u6807\u51c6\u7684\u9075\u4ece\u6027\u3001\u591a\u5c42\u67b6\u6784\u3001\u652f\u6301\u57fa\u4e8e\u7ec4\u4ef6\u7684\u5f00\u53d1\u7b49\u4f18\u52bf\uff0c\u5f88\u591a\u516c\u53f8\u7684\u4f01\u4e1a\u7ea7\u5e94\u7528\u90fd\u9009\u62e9\u5b83\u6765\u4f5c\u4e3a\u5f00\u53d1\u548c\u90e8\u7f72\u7684\u73af\u5883\u3002WebLogic Server\u5728\u4f7f\u5e94\u7528\u670d\u52a1\u5668\u6210\u4e3a\u4f01\u4e1a\u5e94\u7528\u67b6\u6784\u7684\u57fa\u7840\u65b9\u9762\u4e00\u76f4\u5904\u4e8e\u9886\u5148\u5730\u4f4d\uff0c\u4e3a\u6784\u5efa\u96c6\u6210\u5316\u7684\u4f01\u4e1a\u7ea7\u5e94\u7528\u63d0\u4f9b\u4e86\u7a33\u56fa\u7684\u57fa\u7840\u3002\n\nApache\uff1a\u76ee\u524dApache\u4ecd\u7136\u662f\u4e16\u754c\u4e0a\u7528\u5f97\u6700\u591a\u7684Web\u670d\u52a1\u5668\uff0c\u5176\u5e02\u573a\u5360\u6709\u7387\u5f88\u957f\u65f6\u95f4\u90fd\u4fdd\u6301\u572860%\u4ee5\u4e0a\uff08\u76ee\u524d\u7684\u5e02\u573a\u4efd\u989d\u7ea640%\u5de6\u53f3\uff09\u3002\u4e16\u754c\u4e0a\u5f88\u591a\u8457\u540d\u7684\u7f51\u7ad9\u90fd\u662fApache\u7684\u4ea7\u7269\uff0c\u5b83\u7684\u6210\u529f\u4e4b\u5904\u4e3b\u8981\u5728\u4e8e\u5b83\u7684\u6e90\u4ee3\u7801\u5f00\u653e\u3001\u6709\u4e00\u652f\u5f3a\u5927\u7684\u5f00\u53d1\u56e2\u961f\u3001\u652f\u6301\u8de8\u5e73\u53f0\u7684\u5e94\u7528\uff08\u53ef\u4ee5\u8fd0\u884c\u5728\u51e0\u4e4e\u6240\u6709\u7684Unix\u3001Windows\u3001linux\u7cfb\u7edf\u5e73\u53f0\u4e0a\uff09\u4ee5\u53ca\u5b83\u7684\u53ef\u79fb\u690d\u6027\u7b49\u65b9\u9762\u3002\n\nTomcat\uff1aTomcat\u662f\u4e00\u4e2a\u5f00\u653e\u6e90\u4ee3\u7801\u3001\u8fd0\u884cServlet\u548cJSP\u7684\u5bb9\u5668\u3002Tomcat\u5b9e\u73b0\u4e86Servlet\u548cJSP\u89c4\u8303\u3002\u6b64\u5916\uff0cTomcat\u8fd8\u5b9e\u73b0\u4e86Apache-Jakarta\u89c4\u8303\u800c\u4e14\u6bd4\u7edd\u5927\u591a\u6570\u5546\u4e1a\u5e94\u7528\u8f6f\u4ef6\u670d\u52a1\u5668\u8981\u597d\uff0c\u56e0\u6b64\u76ee\u524d\u4e5f\u6709\u4e0d\u5c11\u7684Web\u670d\u52a1\u5668\u90fd\u9009\u62e9\u4e86Tomcat\u3002\n\nNginx\uff1a\u8bfb\u4f5c\"engine x\"\uff0c\u662f\u4e00\u4e2a\u9ad8\u6027\u80fd\u7684HTTP\u548c\u53cd\u5411\u4ee3\u7406\u670d\u52a1\u5668\uff0c\u4e5f\u662f\u4e00\u4e2aIMAP/POP3/SMTP\u4ee3\u7406\u670d\u52a1\u5668\u3002 Nginx\u662f\u7531Igor Sysoev\u4e3a\u4fc4\u7f57\u65af\u8bbf\u95ee\u91cf\u7b2c\u4e8c\u7684Rambler\u7ad9\u70b9\u5f00\u53d1\u7684\uff0c\u7b2c\u4e00\u4e2a\u516c\u5f00\u7248\u672c0.1.0\u53d1\u5e03\u4e8e2004\u5e7410\u67084\u65e5\u3002\u5176\u5c06\u6e90\u4ee3\u7801\u4ee5\u7c7bBSD\u8bb8\u53ef\u8bc1\u7684\u5f62\u5f0f\u53d1\u5e03\uff0c\u56e0\u5b83\u7684\u7a33\u5b9a\u6027\u3001\u4e30\u5bcc\u7684\u529f\u80fd\u96c6\u3001\u793a\u4f8b\u914d\u7f6e\u6587\u4ef6\u548c\u4f4e\u7cfb\u7edf\u8d44\u6e90\u7684\u6d88\u8017\u800c\u95fb\u540d\u3002\u57282014\u5e74\u4e0b\u534a\u5e74\uff0cNginx\u7684\u5e02\u573a\u4efd\u989d\u8fbe\u5230\u4e8614%\u3002\n\n\n102\u3001JSP\u548cServlet\u662f\u4ec0\u4e48\u5173\u7cfb\uff1f\n\u7b54\uff1a\u5176\u5b9e\u8fd9\u4e2a\u95ee\u9898\u5728\u4e0a\u9762\u5df2\u7ecf\u9610\u8ff0\u8fc7\u4e86\uff0cServlet\u662f\u4e00\u4e2a\u7279\u6b8a\u7684Java\u7a0b\u5e8f\uff0c\u5b83\u8fd0\u884c\u4e8e\u670d\u52a1\u5668\u7684JVM\u4e2d\uff0c\u80fd\u591f\u4f9d\u9760\u670d\u52a1\u5668\u7684\u652f\u6301\u5411\u6d4f\u89c8\u5668\u63d0\u4f9b\u663e\u793a\u5185\u5bb9\u3002JSP\u672c\u8d28\u4e0a\u662fServlet\u7684\u4e00\u79cd\u7b80\u6613\u5f62\u5f0f\uff0cJSP\u4f1a\u88ab\u670d\u52a1\u5668\u5904\u7406\u6210\u4e00\u4e2a\u7c7b\u4f3c\u4e8eServlet\u7684Java\u7a0b\u5e8f\uff0c\u53ef\u4ee5\u7b80\u5316\u9875\u9762\u5185\u5bb9\u7684\u751f\u6210\u3002Servlet\u548cJSP\u6700\u4e3b\u8981\u7684\u4e0d\u540c\u70b9\u5728\u4e8e\uff0cServlet\u7684\u5e94\u7528\u903b\u8f91\u662f\u5728Java\u6587\u4ef6\u4e2d\uff0c\u5e76\u4e14\u5b8c\u5168\u4ece\u8868\u793a\u5c42\u4e2d\u7684HTML\u5206\u79bb\u5f00\u6765\u3002\u800cJSP\u7684\u60c5\u51b5\u662fJava\u548cHTML\u53ef\u4ee5\u7ec4\u5408\u6210\u4e00\u4e2a\u6269\u5c55\u540d\u4e3a.jsp\u7684\u6587\u4ef6\u3002\n\u6709\u4eba\u8bf4\uff0cServlet\u5c31\u662f\u5728Java\u4e2d\u5199HTML\uff0c\u800cJSP\u5c31\u662f\u5728HTML\u4e2d\u5199Java\u4ee3\u7801\uff0c\u5f53\u7136\u8fd9\u4e2a\u8bf4\u6cd5\u662f\u5f88\u7247\u9762\u4e14\u4e0d\u591f\u51c6\u786e\u7684\u3002JSP\u4fa7\u91cd\u4e8e\u89c6\u56fe\uff0cServlet\u66f4\u4fa7\u91cd\u4e8e\u63a7\u5236\u903b\u8f91\uff0c\u5728MVC\u67b6\u6784\u6a21\u5f0f\u4e2d\uff0cJSP\u9002\u5408\u5145\u5f53\u89c6\u56fe\uff08view\uff09\u800cServlet\u9002\u5408\u5145\u5f53\u63a7\u5236\u5668\uff08controller\uff09\u3002\n103\u3001\u8bb2\u89e3JSP\u4e2d\u7684\u56db\u79cd\u4f5c\u7528\u57df\u3002\n\u7b54\uff1aJSP\u4e2d\u7684\u56db\u79cd\u4f5c\u7528\u57df\u5305\u62ecpage\u3001request\u3001session\u548capplication\uff0c\u5177\u4f53\u6765\u8bf4\uff1a\n\npage\u4ee3\u8868\u4e0e\u4e00\u4e2a\u9875\u9762\u76f8\u5173\u7684\u5bf9\u8c61\u548c\u5c5e\u6027\u3002\n\nrequest\u4ee3\u8868\u4e0eWeb\u5ba2\u6237\u673a\u53d1\u51fa\u7684\u4e00\u4e2a\u8bf7\u6c42\u76f8\u5173\u7684\u5bf9\u8c61\u548c\u5c5e\u6027\u3002\u4e00\u4e2a\u8bf7\u6c42\u53ef\u80fd\u8de8\u8d8a\u591a\u4e2a\u9875\u9762\uff0c\u6d89\u53ca\u591a\u4e2aWeb\u7ec4\u4ef6\uff1b\u9700\u8981\u5728\u9875\u9762\u663e\u793a\u7684\u4e34\u65f6\u6570\u636e\u53ef\u4ee5\u7f6e\u4e8e\u6b64\u4f5c\u7528\u57df\u3002\n\nsession\u4ee3\u8868\u4e0e\u67d0\u4e2a\u7528\u6237\u4e0e\u670d\u52a1\u5668\u5efa\u7acb\u7684\u4e00\u6b21\u4f1a\u8bdd\u76f8\u5173\u7684\u5bf9\u8c61\u548c\u5c5e\u6027\u3002\u8ddf\u67d0\u4e2a\u7528\u6237\u76f8\u5173\u7684\u6570\u636e\u5e94\u8be5\u653e\u5728\u7528\u6237\u81ea\u5df1\u7684session\u4e2d\u3002\n\napplication\u4ee3\u8868\u4e0e\u6574\u4e2aWeb\u5e94\u7528\u7a0b\u5e8f\u76f8\u5173\u7684\u5bf9\u8c61\u548c\u5c5e\u6027\uff0c\u5b83\u5b9e\u8d28\u4e0a\u662f\u8de8\u8d8a\u6574\u4e2aWeb\u5e94\u7528\u7a0b\u5e8f\uff0c\u5305\u62ec\u591a\u4e2a\u9875\u9762\u3001\u8bf7\u6c42\u548c\u4f1a\u8bdd\u7684\u4e00\u4e2a\u5168\u5c40\u4f5c\u7528\u57df\u3002\n\n\n104\u3001\u5982\u4f55\u5b9e\u73b0JSP\u6216Servlet\u7684\u5355\u7ebf\u7a0b\u6a21\u5f0f\uff1f\n\u7b54\uff1a\u5bf9\u4e8eJSP\u9875\u9762\uff0c\u53ef\u4ee5\u901a\u8fc7page\u6307\u4ee4\u8fdb\u884c\u8bbe\u7f6e\u3002\n\n    &lt;%@page isThreadSafe=\u201dfalse\u201d%&gt;\n\u5bf9\u4e8eServlet\uff0c\u53ef\u4ee5\u8ba9\u81ea\u5b9a\u4e49\u7684Servlet\u5b9e\u73b0SingleThreadModel\u6807\u8bc6\u63a5\u53e3\u3002\n\u8bf4\u660e\uff1a\u5982\u679c\u5c06JSP\u6216Servlet\u8bbe\u7f6e\u6210\u5355\u7ebf\u7a0b\u5de5\u4f5c\u6a21\u5f0f\uff0c\u4f1a\u5bfc\u81f4\u6bcf\u4e2a\u8bf7\u6c42\u521b\u5efa\u4e00\u4e2aServlet\u5b9e\u4f8b\uff0c\u8fd9\u79cd\u5b9e\u8df5\u5c06\u5bfc\u81f4\u4e25\u91cd\u7684\u6027\u80fd\u95ee\u9898\uff08\u670d\u52a1\u5668\u7684\u5185\u5b58\u538b\u529b\u5f88\u5927\uff0c\u8fd8\u4f1a\u5bfc\u81f4\u9891\u7e41\u7684\u5783\u573e\u56de\u6536\uff09\uff0c\u6240\u4ee5\u901a\u5e38\u60c5\u51b5\u4e0b\u5e76\u4e0d\u4f1a\u8fd9\u4e48\u505a\u3002\n105\u3001\u5b9e\u73b0\u4f1a\u8bdd\u8ddf\u8e2a\u7684\u6280\u672f\u6709\u54ea\u4e9b\uff1f\n\u7b54\uff1a\u7531\u4e8eHTTP\u534f\u8bae\u672c\u8eab\u662f\u65e0\u72b6\u6001\u7684\uff0c\u670d\u52a1\u5668\u4e3a\u4e86\u533a\u5206\u4e0d\u540c\u7684\u7528\u6237\uff0c\u5c31\u9700\u8981\u5bf9\u7528\u6237\u4f1a\u8bdd\u8fdb\u884c\u8ddf\u8e2a\uff0c\u7b80\u5355\u7684\u8bf4\u5c31\u662f\u4e3a\u7528\u6237\u8fdb\u884c\u767b\u8bb0\uff0c\u4e3a\u7528\u6237\u5206\u914d\u552f\u4e00\u7684ID\uff0c\u4e0b\u4e00\u6b21\u7528\u6237\u5728\u8bf7\u6c42\u4e2d\u5305\u542b\u6b64ID\uff0c\u670d\u52a1\u5668\u636e\u6b64\u5224\u65ad\u5230\u5e95\u662f\u54ea\u4e00\u4e2a\u7528\u6237\u3002\n\nURL \u91cd\u5199\uff1a\u5728URL\u4e2d\u6dfb\u52a0\u7528\u6237\u4f1a\u8bdd\u7684\u4fe1\u606f\u4f5c\u4e3a\u8bf7\u6c42\u7684\u53c2\u6570\uff0c\u6216\u8005\u5c06\u552f\u4e00\u7684\u4f1a\u8bddID\u6dfb\u52a0\u5230URL\u7ed3\u5c3e\u4ee5\u6807\u8bc6\u4e00\u4e2a\u4f1a\u8bdd\u3002\n\n\u8bbe\u7f6e\u8868\u5355\u9690\u85cf\u57df\uff1a\u5c06\u548c\u4f1a\u8bdd\u8ddf\u8e2a\u76f8\u5173\u7684\u5b57\u6bb5\u6dfb\u52a0\u5230\u9690\u5f0f\u8868\u5355\u57df\u4e2d\uff0c\u8fd9\u4e9b\u4fe1\u606f\u4e0d\u4f1a\u5728\u6d4f\u89c8\u5668\u4e2d\u663e\u793a\u4f46\u662f\u63d0\u4ea4\u8868\u5355\u65f6\u4f1a\u63d0\u4ea4\u7ed9\u670d\u52a1\u5668\u3002\u8fd9\u4e24\u79cd\u65b9\u5f0f\u5f88\u96be\u5904\u7406\u8de8\u8d8a\u591a\u4e2a\u9875\u9762\u7684\u4fe1\u606f\u4f20\u9012\uff0c\u56e0\u4e3a\u5982\u679c\u6bcf\u6b21\u90fd\u8981\u4fee\u6539URL\u6216\u5728\u9875\u9762\u4e2d\u6dfb\u52a0\u9690\u5f0f\u8868\u5355\u57df\u6765\u5b58\u50a8\u7528\u6237\u4f1a\u8bdd\u76f8\u5173\u4fe1\u606f\uff0c\u4e8b\u60c5\u5c06\u53d8\u5f97\u975e\u5e38\u9ebb\u70e6\u3002\n\ncookie\uff1acookie\u6709\u4e24\u79cd\uff0c\u4e00\u79cd\u662f\u57fa\u4e8e\u7a97\u53e3\u7684\uff0c\u6d4f\u89c8\u5668\u7a97\u53e3\u5173\u95ed\u540e\uff0ccookie\u5c31\u6ca1\u6709\u4e86\uff1b\u53e6\u4e00\u79cd\u662f\u5c06\u4fe1\u606f\u5b58\u50a8\u5728\u4e00\u4e2a\u4e34\u65f6\u6587\u4ef6\u4e2d\uff0c\u5e76\u8bbe\u7f6e\u5b58\u5728\u7684\u65f6\u95f4\u3002\u5f53\u7528\u6237\u901a\u8fc7\u6d4f\u89c8\u5668\u548c\u670d\u52a1\u5668\u5efa\u7acb\u4e00\u6b21\u4f1a\u8bdd\u540e\uff0c\u4f1a\u8bddID\u5c31\u4f1a\u968f\u54cd\u5e94\u4fe1\u606f\u8fd4\u56de\u5b58\u50a8\u5728\u57fa\u4e8e\u7a97\u53e3\u7684cookie\u4e2d\uff0c\u90a3\u5c31\u610f\u5473\u7740\u53ea\u8981\u6d4f\u89c8\u5668\u6ca1\u6709\u5173\u95ed\uff0c\u4f1a\u8bdd\u6ca1\u6709\u8d85\u65f6\uff0c\u4e0b\u4e00\u6b21\u8bf7\u6c42\u65f6\u8fd9\u4e2a\u4f1a\u8bddID\u53c8\u4f1a\u63d0\u4ea4\u7ed9\u670d\u52a1\u5668\u8ba9\u670d\u52a1\u5668\u8bc6\u522b\u7528\u6237\u8eab\u4efd\u3002\u4f1a\u8bdd\u4e2d\u53ef\u4ee5\u4e3a\u7528\u6237\u4fdd\u5b58\u4fe1\u606f\u3002\u4f1a\u8bdd\u5bf9\u8c61\u662f\u5728\u670d\u52a1\u5668\u5185\u5b58\u4e2d\u7684\uff0c\u800c\u57fa\u4e8e\u7a97\u53e3\u7684cookie\u662f\u5728\u5ba2\u6237\u7aef\u5185\u5b58\u4e2d\u7684\u3002\u5982\u679c\u6d4f\u89c8\u5668\u7981\u7528\u4e86cookie\uff0c\u90a3\u4e48\u5c31\u9700\u8981\u901a\u8fc7\u4e0b\u9762\u4e24\u79cd\u65b9\u5f0f\u8fdb\u884c\u4f1a\u8bdd\u8ddf\u8e2a\u3002\u5f53\u7136\uff0c\u5728\u4f7f\u7528cookie\u65f6\u8981\u6ce8\u610f\u51e0\u70b9\uff1a\u9996\u5148\u4e0d\u8981\u5728cookie\u4e2d\u5b58\u653e\u654f\u611f\u4fe1\u606f\uff1b\u5176\u6b21cookie\u5b58\u50a8\u7684\u6570\u636e\u91cf\u6709\u9650\uff084k\uff09\uff0c\u4e0d\u80fd\u5c06\u8fc7\u591a\u7684\u5185\u5bb9\u5b58\u50a8cookie\u4e2d\uff1b\u518d\u8005\u6d4f\u89c8\u5668\u901a\u5e38\u53ea\u5141\u8bb8\u4e00\u4e2a\u7ad9\u70b9\u6700\u591a\u5b58\u653e20\u4e2acookie\u3002\u5f53\u7136\uff0c\u548c\u7528\u6237\u4f1a\u8bdd\u76f8\u5173\u7684\u5176\u4ed6\u4fe1\u606f\uff08\u9664\u4e86\u4f1a\u8bddID\uff09\u4e5f\u53ef\u4ee5\u5b58\u5728cookie\u65b9\u4fbf\u8fdb\u884c\u4f1a\u8bdd\u8ddf\u8e2a\u3002\u2463HttpSession\uff1a\u5728\u6240\u6709\u4f1a\u8bdd\u8ddf\u8e2a\u6280\u672f\u4e2d\uff0cHttpSession\u5bf9\u8c61\u662f\u6700\u5f3a\u5927\u4e5f\u662f\u529f\u80fd\u6700\u591a\u7684\u3002\u5f53\u4e00\u4e2a\u7528\u6237\u7b2c\u4e00\u6b21\u8bbf\u95ee\u67d0\u4e2a\u7f51\u7ad9\u65f6\u4f1a\u81ea\u52a8\u521b\u5efaHttpSession\uff0c\u6bcf\u4e2a\u7528\u6237\u53ef\u4ee5\u8bbf\u95ee\u4ed6\u81ea\u5df1\u7684HttpSession\u3002\u53ef\u4ee5\u901a\u8fc7HttpServletRequest\u5bf9\u8c61\u7684getSession\u65b9\u6cd5\u83b7\u5f97HttpSession\uff0c\u901a\u8fc7HttpSession\u7684setAttribute\u65b9\u6cd5\u53ef\u4ee5\u5c06\u4e00\u4e2a\u503c\u653e\u5728HttpSession\u4e2d\uff0c\u901a\u8fc7\u8c03\u7528HttpSession\u5bf9\u8c61\u7684getAttribute\u65b9\u6cd5\uff0c\u540c\u65f6\u4f20\u5165\u5c5e\u6027\u540d\u5c31\u53ef\u4ee5\u83b7\u53d6\u4fdd\u5b58\u5728HttpSession\u4e2d\u7684\u5bf9\u8c61\u3002\n\n\n\u4e0e\u4e0a\u9762\u4e09\u79cd\u65b9\u5f0f\u4e0d\u540c\u7684\u662f\uff0cHttpSession\u653e\u5728\u670d\u52a1\u5668\u7684\u5185\u5b58\u4e2d\uff0c\u56e0\u6b64\u4e0d\u8981\u5c06\u8fc7\u5927\u7684\u5bf9\u8c61\u653e\u5728\u91cc\u9762\uff0c\u5373\u4f7f\u76ee\u524d\u7684Servlet\u5bb9\u5668\u53ef\u4ee5\u5728\u5185\u5b58\u5c06\u6ee1\u65f6\u5c06HttpSession\u4e2d\u7684\u5bf9\u8c61\u79fb\u5230\u5176\u4ed6\u5b58\u50a8\u8bbe\u5907\u4e2d\uff0c\u4f46\u662f\u8fd9\u6837\u52bf\u5fc5\u5f71\u54cd\u6027\u80fd\u3002\u6dfb\u52a0\u5230HttpSession\u4e2d\u7684\u503c\u53ef\u4ee5\u662f\u4efb\u610fJava\u5bf9\u8c61\uff0c\u8fd9\u4e2a\u5bf9\u8c61\u6700\u597d\u5b9e\u73b0\u4e86Serializable\u63a5\u53e3\uff0c\u8fd9\u6837Servlet\u5bb9\u5668\u5728\u5fc5\u8981\u7684\u65f6\u5019\u53ef\u4ee5\u5c06\u5176\u5e8f\u5217\u5316\u5230\u6587\u4ef6\u4e2d\uff0c\u5426\u5219\u5728\u5e8f\u5217\u5316\u65f6\u5c31\u4f1a\u51fa\u73b0\u5f02\u5e38\u3002\n\u8865\u5145\uff1aHTML5\u4e2d\u53ef\u4ee5\u4f7f\u7528Web Storage\u6280\u672f\u901a\u8fc7JavaScript\u6765\u4fdd\u5b58\u6570\u636e\uff0c\u4f8b\u5982\u53ef\u4ee5\u4f7f\u7528localStorage\u548csessionStorage\u6765\u4fdd\u5b58\u7528\u6237\u4f1a\u8bdd\u7684\u4fe1\u606f\uff0c\u4e5f\u80fd\u591f\u5b9e\u73b0\u4f1a\u8bdd\u8ddf\u8e2a\u3002\n106\u3001\u8fc7\u6ee4\u5668\u6709\u54ea\u4e9b\u4f5c\u7528\u548c\u7528\u6cd5\uff1f\n\u7b54\uff1a java Web\u5f00\u53d1\u4e2d\u7684\u8fc7\u6ee4\u5668\uff08filter\uff09\u662f\u4eceServlet 2.3\u89c4\u8303\u5f00\u59cb\u589e\u52a0\u7684\u529f\u80fd\uff0c\u5e76\u5728Servlet 2.4\u89c4\u8303\u4e2d\u5f97\u5230\u589e\u5f3a\u3002\u5bf9Web\u5e94\u7528\u6765\u8bf4\uff0c\u8fc7\u6ee4\u5668\u662f\u4e00\u4e2a\u9a7b\u7559\u5728\u670d\u52a1\u5668\u7aef\u7684Web\u7ec4\u4ef6\uff0c\u5b83\u53ef\u4ee5\u622a\u53d6\u5ba2\u6237\u7aef\u548c\u670d\u52a1\u5668\u4e4b\u95f4\u7684\u8bf7\u6c42\u4e0e\u54cd\u5e94\u4fe1\u606f\uff0c\u5e76\u5bf9\u8fd9\u4e9b\u4fe1\u606f\u8fdb\u884c\u8fc7\u6ee4\u3002\u5f53Web\u5bb9\u5668\u63a5\u53d7\u5230\u4e00\u4e2a\u5bf9\u8d44\u6e90\u7684\u8bf7\u6c42\u65f6\uff0c\u5b83\u5c06\u5224\u65ad\u662f\u5426\u6709\u8fc7\u6ee4\u5668\u4e0e\u8fd9\u4e2a\u8d44\u6e90\u76f8\u5173\u8054\u3002\u5982\u679c\u6709\uff0c\u90a3\u4e48\u5bb9\u5668\u5c06\u628a\u8bf7\u6c42\u4ea4\u7ed9\u8fc7\u6ee4\u5668\u8fdb\u884c\u5904\u7406\u3002\u5728\u8fc7\u6ee4\u5668\u4e2d\uff0c\u4f60\u53ef\u4ee5\u6539\u53d8\u8bf7\u6c42\u7684\u5185\u5bb9\uff0c\u6216\u8005\u91cd\u65b0\u8bbe\u7f6e\u8bf7\u6c42\u7684\u62a5\u5934\u4fe1\u606f\uff0c\u7136\u540e\u518d\u5c06\u8bf7\u6c42\u53d1\u9001\u7ed9\u76ee\u6807\u8d44\u6e90\u3002\u5f53\u76ee\u6807\u8d44\u6e90\u5bf9\u8bf7\u6c42\u4f5c\u51fa\u54cd\u5e94\u65f6\u5019\uff0c\u5bb9\u5668\u540c\u6837\u4f1a\u5c06\u54cd\u5e94\u5148\u8f6c\u53d1\u7ed9\u8fc7\u6ee4\u5668\uff0c\u5728\u8fc7\u6ee4\u5668\u4e2d\u4f60\u53ef\u4ee5\u5bf9\u54cd\u5e94\u7684\u5185\u5bb9\u8fdb\u884c\u8f6c\u6362\uff0c\u7136\u540e\u518d\u5c06\u54cd\u5e94\u53d1\u9001\u5230\u5ba2\u6237\u7aef\u3002\n\u5e38\u89c1\u7684\u8fc7\u6ee4\u5668\u7528\u9014\u4e3b\u8981\u5305\u62ec\uff1a\u5bf9\u7528\u6237\u8bf7\u6c42\u8fdb\u884c\u7edf\u4e00\u8ba4\u8bc1\u3001\u5bf9\u7528\u6237\u7684\u8bbf\u95ee\u8bf7\u6c42\u8fdb\u884c\u8bb0\u5f55\u548c\u5ba1\u6838\u3001\u5bf9\u7528\u6237\u53d1\u9001\u7684\u6570\u636e\u8fdb\u884c\u8fc7\u6ee4\u6216\u66ff\u6362\u3001\u8f6c\u6362\u56fe\u8c61\u683c\u5f0f\u3001\u5bf9\u54cd\u5e94\u5185\u5bb9\u8fdb\u884c\u538b\u7f29\u4ee5\u51cf\u5c11\u4f20\u8f93\u91cf\u3001\u5bf9\u8bf7\u6c42\u6216\u54cd\u5e94\u8fdb\u884c\u52a0\u89e3\u5bc6\u5904\u7406\u3001\u89e6\u53d1\u8d44\u6e90\u8bbf\u95ee\u4e8b\u4ef6\u3001\u5bf9XML\u7684\u8f93\u51fa\u5e94\u7528XSLT\u7b49\u3002\n\u548c\u8fc7\u6ee4\u5668\u76f8\u5173\u7684\u63a5\u53e3\u4e3b\u8981\u6709\uff1aFilter\u3001FilterConfig\u548cFilterChain\u3002\n\u7f16\u7801\u8fc7\u6ee4\u5668\u7684\u4f8b\u5b50\uff1a\n\n    import java.io.IOException;\n\n    import javax.servlet.Filter;\n    import javax.servlet.FilterChain;\n    import javax.servlet.FilterConfig;\n    import javax.servlet.ServletException;\n    import javax.servlet.ServletRequest;\n    import javax.servlet.ServletResponse;\n    import javax.servlet.annotation.WebFilter;\n    import javax.servlet.annotation.WebInitParam;\n\n    @WebFilter(urlPatterns = { \"*\" }, \n            initParams = {@WebInitParam(name=\"encoding\", value=\"utf-8\")})\n    public class CodingFilter implements Filter {\n        private String defaultEncoding = \"utf-8\";\n\n        @Override\n        public void destroy() {\n        }\n\n        @Override\n        public void doFilter(ServletRequest req, ServletResponse resp,\n                FilterChain chain) throws IOException, ServletException {\n            req.setCharacterEncoding(defaultEncoding);\n            resp.setCharacterEncoding(defaultEncoding);\n            chain.doFilter(req, resp);\n        }\n\n        @Override\n        public void init(FilterConfig config) throws ServletException {\n            String encoding = config.getInitParameter(\"encoding\");\n            if (encoding != null) {\n                defaultEncoding = encoding;\n            }\n        }\n    }\n\u4e0b\u8f7d\u8ba1\u6570\u8fc7\u6ee4\u5668\u7684\u4f8b\u5b50\uff1a\n\n    import java.io.File;\n    import java.io.FileReader;\n    import java.io.FileWriter;\n    import java.io.IOException;\n    import java.util.Properties;\n    import java.util.concurrent.ExecutorService;\n    import java.util.concurrent.Executors;\n\n    import javax.servlet.Filter;\n    import javax.servlet.FilterChain;\n    import javax.servlet.FilterConfig;\n    import javax.servlet.ServletException;\n    import javax.servlet.ServletRequest;\n    import javax.servlet.ServletResponse;\n    import javax.servlet.annotation.WebFilter;\n    import javax.servlet.http.HttpServletRequest;\n\n    @WebFilter(urlPatterns = {\"/*\"})\n    public class DownloadCounterFilter implements Filter {\n\n        private ExecutorService executorService = Executors.newSingleThreadExecutor();\n        private Properties downloadLog;\n        private File logFile;\n\n        @Override\n        public void destroy() {\n            executorService.shutdown();\n        }\n\n        @Override\n        public void doFilter(ServletRequest req, ServletResponse resp,\n                FilterChain chain) throws IOException, ServletException {\n            HttpServletRequest request = (HttpServletRequest) req;\n            final String uri = request.getRequestURI();\n            executorService.execute(new Runnable() {\n\n                @Override\n                public void run() {\n                    String value = downloadLog.getProperty(uri);\n                    if(value == null) {\n                        downloadLog.setProperty(uri, \"1\");\n                    }\n                    else {\n                        int count = Integer.parseInt(value);\n                        downloadLog.setProperty(uri, String.valueOf(++count));\n                    }\n                    try {\n                        downloadLog.store(new FileWriter(logFile), \"\");\n                    } \n                    catch (IOException e) {\n                        e.printStackTrace();\n                    }\n                }\n            });\n            chain.doFilter(req, resp);\n        }\n\n        @Override\n        public void init(FilterConfig config) throws ServletException {\n            String appPath = config.getServletContext().getRealPath(\"/\");\n            logFile = new File(appPath, \"downloadLog.txt\");\n            if(!logFile.exists()) {\n                try {\n                    logFile.createNewFile();\n                } \n                catch(IOException e) {\n                    e.printStackTrace();\n                }\n            }\n            downloadLog = new Properties();\n            try {\n                downloadLog.load(new FileReader(logFile));\n            } catch (IOException e) {\n                e.printStackTrace();\n            }\n        }\n\n    }\n\u8bf4\u660e\uff1a\u8fd9\u91cc\u4f7f\u7528\u4e86Servlet 3\u89c4\u8303\u4e2d\u7684\u6ce8\u89e3\u6765\u90e8\u7f72\u8fc7\u6ee4\u5668\uff0c\u5f53\u7136\u4e5f\u53ef\u4ee5\u5728web.xml\u4e2d\u4f7f\u7528\u548c\u6807\u7b7e\u90e8\u7f72\u8fc7\u6ee4\u5668\uff0c\u5982108\u9898\u4e2d\u6240\u793a\u3002\n107\u3001\u76d1\u542c\u5668\u6709\u54ea\u4e9b\u4f5c\u7528\u548c\u7528\u6cd5\uff1f\n\u7b54\uff1aJava Web\u5f00\u53d1\u4e2d\u7684\u76d1\u542c\u5668\uff08listener\uff09\u5c31\u662fapplication\u3001session\u3001request\u4e09\u4e2a\u5bf9\u8c61\u521b\u5efa\u3001\u9500\u6bc1\u6216\u8005\u5f80\u5176\u4e2d\u6dfb\u52a0\u4fee\u6539\u5220\u9664\u5c5e\u6027\u65f6\u81ea\u52a8\u6267\u884c\u4ee3\u7801\u7684\u529f\u80fd\u7ec4\u4ef6\uff0c\u5982\u4e0b\u6240\u793a\uff1a\n\nServletContextListener\uff1a\u5bf9Servlet\u4e0a\u4e0b\u6587\u7684\u521b\u5efa\u548c\u9500\u6bc1\u8fdb\u884c\u76d1\u542c\u3002\n\nServletContextAttributeListener\uff1a\u76d1\u542cServlet\u4e0a\u4e0b\u6587\u5c5e\u6027\u7684\u6dfb\u52a0\u3001\u5220\u9664\u548c\u66ff\u6362\u3002\n\nHttpSessionListener\uff1a\u5bf9Session\u7684\u521b\u5efa\u548c\u9500\u6bc1\u8fdb\u884c\u76d1\u542c\u3002\n\n\u8865\u5145\uff1asession\u7684\u9500\u6bc1\u6709\u4e24\u79cd\u60c5\u51b5\uff1a\n1). session\u8d85\u65f6\uff08\u53ef\u4ee5\u5728web.xml\u4e2d\u901a\u8fc7/\u6807\u7b7e\u914d\u7f6e\u8d85\u65f6\u65f6\u95f4\uff09\uff1b\n2). \u901a\u8fc7\u8c03\u7528session\u5bf9\u8c61\u7684invalidate()\u65b9\u6cd5\u4f7fsession\u5931\u6548\u3002\n\nHttpSessionAttributeListener\uff1a\u5bf9Session\u5bf9\u8c61\u4e2d\u5c5e\u6027\u7684\u6dfb\u52a0\u3001\u5220\u9664\u548c\u66ff\u6362\u8fdb\u884c\u76d1\u542c\u3002\n\nServletRequestListener\uff1a\u5bf9\u8bf7\u6c42\u5bf9\u8c61\u7684\u521d\u59cb\u5316\u548c\u9500\u6bc1\u8fdb\u884c\u76d1\u542c\u3002\u2465ServletRequestAttributeListener\uff1a\u5bf9\u8bf7\u6c42\u5bf9\u8c61\u5c5e\u6027\u7684\u6dfb\u52a0\u3001\u5220\u9664\u548c\u66ff\u6362\u8fdb\u884c\u76d1\u542c\u3002\n\n\n\u4e0b\u9762\u662f\u4e00\u4e2a\u7edf\u8ba1\u7f51\u7ad9\u6700\u591a\u5728\u7ebf\u4eba\u6570\u76d1\u542c\u5668\u7684\u4f8b\u5b50\u3002\n\n    import javax.servlet.ServletContextEvent;\n    import javax.servlet.ServletContextListener;\n    import javax.servlet.annotation.WebListener;\n\n    /**\n     \u4e0a\u4e0b\u6587\u76d1\u542c\u5668\uff0c\u5728\u670d\u52a1\u5668\u542f\u52a8\u65f6\u521d\u59cb\u5316onLineCount\u548cmaxOnLineCount\u4e24\u4e2a\u53d8\u91cf\n     \u5e76\u5c06\u5176\u7f6e\u4e8e\u670d\u52a1\u5668\u4e0a\u4e0b\u6587\uff08ServletContext\uff09\u4e2d\uff0c\u5176\u521d\u59cb\u503c\u90fd\u662f0\n    */\n    @WebListener\n    public class InitListener implements ServletContextListener {\n\n        @Override\n        public void contextDestroyed(ServletContextEvent evt) {\n        }\n\n        @Override\n        public void contextInitialized(ServletContextEvent evt) {\n            evt.getServletContext().setAttribute(\"onLineCount\", 0);\n            evt.getServletContext().setAttribute(\"maxOnLineCount\", 0);\n        }\n\n    }\n\n    import java.text.DateFormat;\n    import java.text.SimpleDateFormat;\n    import java.util.Date;\n\n    import javax.servlet.ServletContext;\n    import javax.servlet.annotation.WebListener;\n    import javax.servlet.http.HttpSessionEvent;\n    import javax.servlet.http.HttpSessionListener;\n\n    /**\n     \u4f1a\u8bdd\u76d1\u542c\u5668\uff0c\u5728\u7528\u6237\u4f1a\u8bdd\u521b\u5efa\u548c\u9500\u6bc1\u7684\u65f6\u5019\u6839\u636e\u60c5\u51b5\n     \u4fee\u6539onLineCount\u548cmaxOnLineCount\u7684\u503c\n    */\n    @WebListener\n    public class MaxCountListener implements HttpSessionListener {\n\n        @Override\n        public void sessionCreated(HttpSessionEvent event) {\n            ServletContext ctx = event.getSession().getServletContext();\n            int count = Integer.parseInt(ctx.getAttribute(\"onLineCount\").toString());\n            count++;\n            ctx.setAttribute(\"onLineCount\", count);\n            int maxOnLineCount = Integer.parseInt(ctx.getAttribute(\"maxOnLineCount\").toString());\n            if (count &gt; maxOnLineCount) {\n                ctx.setAttribute(\"maxOnLineCount\", count);\n                DateFormat df = new SimpleDateFormat(\"yyyy-MM-dd HH:mm:ss\");\n                ctx.setAttribute(\"date\", df.format(new Date()));\n            }\n        }\n\n        @Override\n        public void sessionDestroyed(HttpSessionEvent event) {\n            ServletContext app = event.getSession().getServletContext();\n            int count = Integer.parseInt(app.getAttribute(\"onLineCount\").toString());\n            count--;\n            app.setAttribute(\"onLineCount\", count);\n        }\n    }\n\u8bf4\u660e\uff1a\u8fd9\u91cc\u4f7f\u7528\u4e86Servlet 3\u89c4\u8303\u4e2d\u7684@WebListener\u6ce8\u89e3\u914d\u7f6e\u76d1\u542c\u5668\uff0c\u5f53\u7136\u4f60\u53ef\u4ee5\u5728web.xml\u6587\u4ef6\u4e2d\u7528\u6807\u7b7e\u914d\u7f6e\u76d1\u542c\u5668\uff0c\u5982108\u9898\u4e2d\u6240\u793a\u3002\n108\u3001web.xml\u6587\u4ef6\u4e2d\u53ef\u4ee5\u914d\u7f6e\u54ea\u4e9b\u5185\u5bb9\uff1f\n\u7b54\uff1aweb.xml\u7528\u4e8e\u914d\u7f6eWeb\u5e94\u7528\u7684\u76f8\u5173\u4fe1\u606f\uff0c\u5982\uff1a\u76d1\u542c\u5668\uff08listener\uff09\u3001\u8fc7\u6ee4\u5668\uff08filter\uff09\u3001 Servlet\u3001\u76f8\u5173\u53c2\u6570\u3001\u4f1a\u8bdd\u8d85\u65f6\u65f6\u95f4\u3001\u5b89\u5168\u9a8c\u8bc1\u65b9\u5f0f\u3001\u9519\u8bef\u9875\u9762\u7b49\uff0c\u4e0b\u9762\u662f\u4e00\u4e9b\u5f00\u53d1\u4e2d\u5e38\u89c1\u7684\u914d\u7f6e\uff1a\n\n\u914d\u7f6espring\u4e0a\u4e0b\u6587\u52a0\u8f7d\u76d1\u542c\u5668\u52a0\u8f7dSpring\u914d\u7f6e\u6587\u4ef6\u5e76\u521b\u5efaIoC\u5bb9\u5668\uff1a\n\n\n\n      &lt;context-param&gt;\n         &lt;param-name&gt;contextConfigLocation&lt;/param-name&gt;\n        &lt;param-value&gt;classpath:applicationContext.xml&lt;/param-value&gt;\n      &lt;/context-param&gt;\n\n      &lt;listener&gt;\n         &lt;listener-class&gt;\n           org.springframework.web.context.ContextLoaderListener\n         &lt;/listener-class&gt;\n      &lt;/listener&gt;\n\n\u914d\u7f6eSpring\u7684OpenSessionInView\u8fc7\u6ee4\u5668\u6765\u89e3\u51b3\u5ef6\u8fdf\u52a0\u8f7d\u548chibernate\u4f1a\u8bdd\u5173\u95ed\u7684\u77db\u76fe\uff1a\n\n\n\n      &lt;filter&gt;\n          &lt;filter-name&gt;openSessionInView&lt;/filter-name&gt;\n          &lt;filter-class&gt;\n             org.springframework.orm.hibernate3.support.OpenSessionInViewFilter\n          &lt;/filter-class&gt;\n      &lt;/filter&gt;\n\n      &lt;filter-mapping&gt;\n          &lt;filter-name&gt;openSessionInView&lt;/filter-name&gt;\n          &lt;url-pattern&gt;/*&lt;/url-pattern&gt;\n      &lt;/filter-mapping&gt;\n\n\u914d\u7f6e\u4f1a\u8bdd\u8d85\u65f6\u65f6\u95f4\u4e3a10\u5206\u949f\uff1a\n\n\n\n      &lt;session-config&gt;\n          &lt;session-timeout&gt;10&lt;/session-timeout&gt;\n      &lt;/session-config&gt;\n\n\u914d\u7f6e404\u548cException\u7684\u9519\u8bef\u9875\u9762\uff1a\n\n\n\n      &lt;error-page&gt;\n          &lt;error-code&gt;404&lt;/error-code&gt;\n          &lt;location&gt;/error.jsp&lt;/location&gt;\n      &lt;/error-page&gt;\n\n      &lt;error-page&gt;\n          &lt;exception-type&gt;java.lang.Exception&lt;/exception-type&gt;\n          &lt;location&gt;/error.jsp&lt;/location&gt;\n      &lt;/error-page&gt;\n\n\u914d\u7f6e\u5b89\u5168\u8ba4\u8bc1\u65b9\u5f0f\uff1a\n\n\n\n      &lt;security-constraint&gt;\n          &lt;web-resource-collection&gt;\n              &lt;web-resource-name&gt;ProtectedArea&lt;/web-resource-name&gt;\n              &lt;url-pattern&gt;/admin/*&lt;/url-pattern&gt;\n              &lt;http-method&gt;GET&lt;/http-method&gt;\n              &lt;http-method&gt;POST&lt;/http-method&gt;\n          &lt;/web-resource-collection&gt;\n          &lt;auth-constraint&gt;\n              &lt;role-name&gt;admin&lt;/role-name&gt;\n          &lt;/auth-constraint&gt;\n      &lt;/security-constraint&gt;\n\n      &lt;login-config&gt;\n          &lt;auth-method&gt;BASIC&lt;/auth-method&gt;\n      &lt;/login-config&gt;\n\n      &lt;security-role&gt;\n          &lt;role-name&gt;admin&lt;/role-name&gt;\n      &lt;/security-role&gt;\n\u8bf4\u660e\uff1a\u5bf9Servlet\uff08\u5c0f\u670d\u52a1\uff09\u3001Listener\uff08\u76d1\u542c\u5668\uff09\u548cFilter\uff08\u8fc7\u6ee4\u5668\uff09\u7b49Web\u7ec4\u4ef6\u7684\u914d\u7f6e\uff0cServlet 3\u89c4\u8303\u63d0\u4f9b\u4e86\u57fa\u4e8e\u6ce8\u89e3\u7684\u914d\u7f6e\u65b9\u5f0f\uff0c\u53ef\u4ee5\u5206\u522b\u4f7f\u7528@WebServlet\u3001@WebListener\u3001@WebFilter\u6ce8\u89e3\u8fdb\u884c\u914d\u7f6e\u3002\n\u8865\u5145\uff1a\u5982\u679cWeb\u63d0\u4f9b\u4e86\u6709\u4ef7\u503c\u7684\u5546\u4e1a\u4fe1\u606f\u6216\u8005\u662f\u654f\u611f\u6570\u636e\uff0c\u90a3\u4e48\u7ad9\u70b9\u7684\u5b89\u5168\u6027\u5c31\u662f\u5fc5\u987b\u8003\u8651\u7684\u95ee\u9898\u3002\u5b89\u5168\u8ba4\u8bc1\u662f\u5b9e\u73b0\u5b89\u5168\u6027\u7684\u91cd\u8981\u624b\u6bb5\uff0c\u8ba4\u8bc1\u5c31\u662f\u8981\u89e3\u51b3\u201cAre you who you say you are?\u201d\u7684\u95ee\u9898\u3002\n\u8ba4\u8bc1\u7684\u65b9\u5f0f\u975e\u5e38\u591a\uff0c\u7b80\u5355\u8bf4\u6765\u53ef\u4ee5\u5206\u4e3a\u4e09\u7c7b\uff1a\nA. What you know? \u2014 \u53e3\u4ee4\nB. What you have? \u2014 \u6570\u5b57\u8bc1\u4e66\uff08U\u76fe\u3001\u5bc6\u4fdd\u5361\uff09\nC. Who you are? \u2014 \u6307\u7eb9\u8bc6\u522b\u3001\u8679\u819c\u8bc6\u522b\u5728Tomcat\u4e2d\u53ef\u4ee5\u901a\u8fc7\u5efa\u7acb\u5b89\u5168\u5957\u63a5\u5b57\u5c42\uff08Secure Socket Layer, SSL\uff09\u4ee5\u53ca\u901a\u8fc7\u57fa\u672c\u9a8c\u8bc1\u6216\u8868\u5355\u9a8c\u8bc1\u6765\u5b9e\u73b0\u5bf9\u5b89\u5168\u6027\u7684\u652f\u6301\u3002\n109\u3001\u4f60\u7684\u9879\u76ee\u4e2d\u4f7f\u7528\u8fc7\u54ea\u4e9bJSTL\u6807\u7b7e\uff1f\n\u7b54\uff1a\u9879\u76ee\u4e2d\u4e3b\u8981\u4f7f\u7528\u4e86JSTL\u7684\u6838\u5fc3\u6807\u7b7e\u5e93\uff0c\u5305\u62ec\u3001\u3001\u3001\u3001\u7b49\uff0c\u4e3b\u8981\u7528\u4e8e\u6784\u9020\u5faa\u73af\u548c\u5206\u652f\u7ed3\u6784\u4ee5\u63a7\u5236\u663e\u793a\u903b\u8f91\u3002\n\u8bf4\u660e\uff1a\u867d\u7136JSTL\u6807\u7b7e\u5e93\u63d0\u4f9b\u4e86core\u3001sql\u3001fmt\u3001xml\u7b49\u6807\u7b7e\u5e93\uff0c\u4f46\u662f\u5b9e\u9645\u5f00\u53d1\u4e2d\u5efa\u8bae\u53ea\u4f7f\u7528\u6838\u5fc3\u6807\u7b7e\u5e93\uff08core\uff09\uff0c\u800c\u4e14\u6700\u597d\u53ea\u4f7f\u7528\u5206\u652f\u548c\u5faa\u73af\u6807\u7b7e\u5e76\u8f85\u4ee5\u8868\u8fbe\u5f0f\u8bed\u8a00\uff08EL\uff09\uff0c\u8fd9\u6837\u624d\u80fd\u771f\u6b63\u505a\u5230\u6570\u636e\u663e\u793a\u548c\u4e1a\u52a1\u903b\u8f91\u7684\u5206\u79bb\uff0c\u8fd9\u624d\u662f\u6700\u4f73\u5b9e\u8df5\u3002\n110\u3001\u4f7f\u7528\u6807\u7b7e\u5e93\u6709\u4ec0\u4e48\u597d\u5904\uff1f\u5982\u4f55\u81ea\u5b9a\u4e49JSP\u6807\u7b7e\uff1f\n\u7b54\uff1a\u4f7f\u7528\u6807\u7b7e\u5e93\u7684\u597d\u5904\u5305\u62ec\u4ee5\u4e0b\u51e0\u4e2a\u65b9\u9762\uff1a\n\n\u5206\u79bbJSP\u9875\u9762\u7684\u5185\u5bb9\u548c\u903b\u8f91\uff0c\u7b80\u5316\u4e86Web\u5f00\u53d1\uff1b\n\n\u5f00\u53d1\u8005\u53ef\u4ee5\u521b\u5efa\u81ea\u5b9a\u4e49\u6807\u7b7e\u6765\u5c01\u88c5\u4e1a\u52a1\u903b\u8f91\u548c\u663e\u793a\u903b\u8f91\uff1b\n\n\u6807\u7b7e\u5177\u6709\u5f88\u597d\u7684\u53ef\u79fb\u690d\u6027\u3001\u53ef\u7ef4\u62a4\u6027\u548c\u53ef\u91cd\u7528\u6027\uff1b\n\n\u907f\u514d\u4e86\u5bf9Scriptlet\uff08\u5c0f\u811a\u672c\uff09\u7684\u4f7f\u7528\uff08\u5f88\u591a\u516c\u53f8\u7684\u9879\u76ee\u5f00\u53d1\u90fd\u4e0d\u5141\u8bb8\u5728JSP\u4e2d\u4e66\u5199\u5c0f\u811a\u672c\uff09\n\n\n\u81ea\u5b9a\u4e49JSP\u6807\u7b7e\u5305\u62ec\u4ee5\u4e0b\u51e0\u4e2a\u6b65\u9aa4\uff1a\n\n\u7f16\u5199\u4e00\u4e2aJava\u7c7b\u5b9e\u73b0\u5b9e\u73b0Tag/BodyTag/IterationTag\u63a5\u53e3\uff08\u5f00\u53d1\u4e2d\u901a\u5e38\u4e0d\u76f4\u63a5\u5b9e\u73b0\u8fd9\u4e9b\u63a5\u53e3\u800c\u662f\u7ee7\u627fTagSupport/BodyTagSupport/SimpleTagSupport\u7c7b\uff0c\u8fd9\u662f\u5bf9\u7f3a\u7701\u9002\u914d\u6a21\u5f0f\u7684\u5e94\u7528\uff09\uff0c\u91cd\u5199doStartTag()\u3001doEndTag()\u7b49\u65b9\u6cd5\uff0c\u5b9a\u4e49\u6807\u7b7e\u8981\u5b8c\u6210\u7684\u529f\u80fd\n\u7f16\u5199\u6269\u5c55\u540d\u4e3atld\u7684\u6807\u7b7e\u63cf\u8ff0\u6587\u4ef6\u5bf9\u81ea\u5b9a\u4e49\u6807\u7b7e\u8fdb\u884c\u90e8\u7f72\uff0ctld\u6587\u4ef6\u901a\u5e38\u653e\u5728WEB-INF\u6587\u4ef6\u5939\u4e0b\u6216\u5176\u5b50\u76ee\u5f55\u4e2d\n\u5728JSP\u9875\u9762\u4e2d\u4f7f\u7528taglib\u6307\u4ee4\u5f15\u7528\u8be5\u6807\u7b7e\u5e93\n\n\n\u4e0b\u9762\u662f\u4e00\u4e2a\u81ea\u5b9a\u4e49\u6807\u7b7e\u5e93\u7684\u4f8b\u5b50\u3002\n\u6b65\u9aa41 - \u6807\u7b7e\u7c7b\u6e90\u4ee3\u7801TimeTag.java\uff1a\n\n    package com.jackfrued.tags;\n\n    import java.io.IOException;\n    import java.text.SimpleDateFormat;\n    import java.util.Date;\n\n    import javax.servlet.jsp.JspException;\n    import javax.servlet.jsp.JspWriter;\n    import javax.servlet.jsp.tagext.TagSupport;\n\n    public class TimeTag extends TagSupport {\n        private static final long serialVersionUID = 1L;\n\n        private String format = \"yyyy-MM-dd hh:mm:ss\";\n        private String foreColor = \"black\";\n        private String backColor = \"white\";\n\n        public int doStartTag() throws JspException {\n             SimpleDateFormat sdf = new SimpleDateFormat(format);\n             JspWriter writer = pageContext.getOut();\n             StringBuilder sb = new StringBuilder();\n             sb.append(String.format(\"&lt;span style='color:%s;background-color:%s'&gt;%s&lt;/span&gt;\",\n                 foreColor, backColor, sdf.format(new Date())));\n             try {\n               writer.print(sb.toString());\n             } catch(IOException e) {\n               e.printStackTrace();\n             }\n             return SKIP_BODY;\n          }\n\n        public void setFormat(String format) {\n            this.format = format;\n        }\n\n        public void setForeColor(String foreColor) {\n            this.foreColor = foreColor;\n        }\n\n        public void setBackColor(String backColor) {\n            this.backColor = backColor;\n        }\n    }\n\u6b65\u9aa42 - \u7f16\u5199\u6807\u7b7e\u5e93\u63cf\u8ff0\u6587\u4ef6my.tld\uff1a\n\n    &lt;?xml version=\"1.0\" encoding=\"UTF-8\" ?&gt;\n    &lt;taglib xmlns=\"http://java.sun.com/xml/ns/j2ee\"\n        xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n        xsi:schemaLocation=\"http://java.sun.com/xml/ns/j2ee \n        http://java.sun.com/xml/ns/j2ee/web-jsptaglibrary_2_0.xsd\"\n        version=\"2.0\"&gt;\n\n        &lt;description&gt;\u5b9a\u4e49\u6807\u7b7e\u5e93&lt;/description&gt;\n        &lt;tlib-version&gt;1.0&lt;/tlib-version&gt;\n        &lt;short-name&gt;MyTag&lt;/short-name&gt;\n        &lt;tag&gt;\n            &lt;name&gt;time&lt;/name&gt;\n            &lt;tag-class&gt;com.jackfrued.tags.TimeTag&lt;/tag-class&gt;\n            &lt;body-content&gt;empty&lt;/body-content&gt;\n            &lt;attribute&gt;\n                &lt;name&gt;format&lt;/name&gt;\n                &lt;required&gt;false&lt;/required&gt;\n            &lt;/attribute&gt;\n            &lt;attribute&gt;\n                &lt;name&gt;foreColor&lt;/name&gt;\n            &lt;/attribute&gt;\n            &lt;attribute&gt;\n                &lt;name&gt;backColor&lt;/name&gt;\n            &lt;/attribute&gt;\n        &lt;/tag&gt;\n    &lt;/taglib&gt;\n\u6b65\u9aa43 - \u5728JSP\u9875\u9762\u4e2d\u4f7f\u7528\u81ea\u5b9a\u4e49\u6807\u7b7e\uff1a\n\n    &lt;%@ page pageEncoding=\"UTF-8\"%&gt;\n    &lt;%@ taglib prefix=\"my\" uri=\"/WEB-INF/tld/my.tld\" %&gt;\n    &lt;%\n    String path = request.getContextPath();\n    String basePath = request.getScheme() + \"://\" + request.getServerName() + \":\" + request.getServerPort() + path + \"/\";\n    %&gt;\n\n    &lt;!DOCTYPE html&gt;\n    &lt;html&gt;\n      &lt;head&gt;\n        &lt;base href=\"&lt;%=basePath%&gt;\"&gt;\n        &lt;title&gt;\u9996\u9875&lt;/title&gt;\n        &lt;style type=\"text/css\"&gt;\n            * { font-family: \"Arial\"; font-size:72px; }\n        &lt;/style&gt;\n      &lt;/head&gt;\n\n      &lt;body&gt;\n        &lt;my:time format=\"yyyy-MM-dd\" backColor=\"blue\" foreColor=\"yellow\"/&gt;\n      &lt;/body&gt;\n    &lt;/html&gt;\n\u63d0\u793a\uff1a\u5982\u679c\u8981\u5c06\u81ea\u5b9a\u4e49\u7684\u6807\u7b7e\u5e93\u53d1\u5e03\u6210JAR\u6587\u4ef6\uff0c\u9700\u8981\u5c06\u6807\u7b7e\u5e93\u63cf\u8ff0\u6587\u4ef6\uff08tld\u6587\u4ef6\uff09\u653e\u5728JAR\u6587\u4ef6\u7684META-INF\u76ee\u5f55\u4e0b\uff0c\u53ef\u4ee5JDK\u4e2d\u7684jar\u5de5\u5177\u5b8c\u6210JAR\u6587\u4ef6\u7684\u751f\u6210\uff0c\u5982\u679c\u4e0d\u6e05\u695a\u5982\u4f55\u64cd\u4f5c\uff0c\u53ef\u4ee5\u8bf7\u6559\u8c37\u8001\u5e08\u548c\u767e\u8001\u5e08\u3002\n111\u3001\u8bf4\u4e00\u4e0b\u8868\u8fbe\u5f0f\u8bed\u8a00\uff08EL\uff09\u7684\u9690\u5f0f\u5bf9\u8c61\u53ca\u5176\u4f5c\u7528\u3002\n\u7b54\uff1aEL\u7684\u9690\u5f0f\u5bf9\u8c61\u5305\u62ec\uff1apageContext\u3001initParam\uff08\u8bbf\u95ee\u4e0a\u4e0b\u6587\u53c2\u6570\uff09\u3001param\uff08\u8bbf\u95ee\u8bf7\u6c42\u53c2\u6570\uff09\u3001paramValues\u3001header\uff08\u8bbf\u95ee\u8bf7\u6c42\u5934\uff09\u3001headerValues\u3001cookie\uff08\u8bbf\u95eecookie\uff09\u3001applicationScope\uff08\u8bbf\u95eeapplication\u4f5c\u7528\u57df\uff09\u3001sessionScope\uff08\u8bbf\u95eesession\u4f5c\u7528\u57df\uff09\u3001requestScope\uff08\u8bbf\u95eerequest\u4f5c\u7528\u57df\uff09\u3001pageScope\uff08\u8bbf\u95eepage\u4f5c\u7528\u57df\uff09\u3002\n\u7528\u6cd5\u5982\u4e0b\u6240\u793a\uff1a\n\n    ${pageContext.request.method}\n    ${pageContext[\"request\"][\"method\"]}\n    ${pageContext.request[\"method\"]}\n    ${pageContext[\"request\"].method}\n    ${initParam.defaultEncoding}\n    ${header[\"accept-language\"]}\n    ${headerValues[\"accept-language\"][0]}\n    ${cookie.jsessionid.value}\n    ${sessionScope.loginUser.username}\n\u8865\u5145\uff1a\u8868\u8fbe\u5f0f\u8bed\u8a00\u7684.\u548c[]\u8fd0\u7b97\u4f5c\u7528\u662f\u4e00\u81f4\u7684\uff0c\u552f\u4e00\u7684\u5dee\u522b\u5728\u4e8e\u5982\u679c\u8bbf\u95ee\u7684\u5c5e\u6027\u540d\u4e0d\u7b26\u5408Java\u6807\u8bc6\u7b26\u547d\u540d\u89c4\u5219\uff0c\u4f8b\u5982\u4e0a\u9762\u7684accept-language\u5c31\u4e0d\u662f\u4e00\u4e2a\u6709\u6548\u7684Java\u6807\u8bc6\u7b26\uff0c\u90a3\u4e48\u8fd9\u65f6\u5019\u5c31\u53ea\u80fd\u7528[]\u8fd0\u7b97\u7b26\u800c\u4e0d\u80fd\u4f7f\u7528.\u8fd0\u7b97\u7b26\u83b7\u53d6\u5b83\u7684\u503c\n112\u3001\u8868\u8fbe\u5f0f\u8bed\u8a00\uff08EL\uff09\u652f\u6301\u54ea\u4e9b\u8fd0\u7b97\u7b26\uff1f\n\u7b54\uff1a\u9664\u4e86.\u548c[]\u8fd0\u7b97\u7b26\uff0cEL\u8fd8\u63d0\u4f9b\u4e86\uff1a\n\n\u7b97\u672f\u8fd0\u7b97\u7b26\uff1a+\u3001-\u3001*\u3001/\u6216div\u3001%\u6216mod\n\n\u5173\u7cfb\u8fd0\u7b97\u7b26\uff1a==\u6216eq\u3001!=\u6216ne\u3001&gt;\u6216gt\u3001&gt;=\u6216ge\u3001&lt;\u6216lt\u3001&lt;=\u6216le\n\n\u903b\u8f91\u8fd0\u7b97\u7b26\uff1a&amp;&amp;\u6216and\u3001||\u6216or\u3001!\u6216not\n\n\u6761\u4ef6\u8fd0\u7b97\u7b26\uff1a${statement? A : B}\uff08\u8ddfJava\u7684\u6761\u4ef6\u8fd0\u7b97\u7b26\u7c7b\u4f3c\uff09\n\nempty\u8fd0\u7b97\u7b26\uff1a\u68c0\u67e5\u4e00\u4e2a\u503c\u662f\u5426\u4e3anull\u6216\u8005\u7a7a\uff08\u6570\u7ec4\u957f\u5ea6\u4e3a0\u6216\u96c6\u5408\u4e2d\u6ca1\u6709\u5143\u7d20\u4e5f\u8fd4\u56detrue\uff09\n\n\n113\u3001Java Web\u5f00\u53d1\u7684Model 1\u548cModel 2\u5206\u522b\u6307\u7684\u662f\u4ec0\u4e48\uff1f\n\u7b54\uff1aModel 1\u662f\u4ee5\u9875\u9762\u4e3a\u4e2d\u5fc3\u7684Java Web\u5f00\u53d1\uff0c\u4f7f\u7528JSP+JavaBean\u6280\u672f\u5c06\u9875\u9762\u663e\u793a\u903b\u8f91\u548c\u4e1a\u52a1\u903b\u8f91\u5904\u7406\u5206\u5f00\uff0cJSP\u5b9e\u73b0\u9875\u9762\u663e\u793a\uff0cJavaBean\u5bf9\u8c61\u7528\u6765\u4fdd\u5b58\u6570\u636e\u548c\u5b9e\u73b0\u4e1a\u52a1\u903b\u8f91\u3002Model 2\u662f\u57fa\u4e8eMVC\uff08\u6a21\u578b-\u89c6\u56fe-\u63a7\u5236\u5668\uff0cModel-View-Controller\uff09\u67b6\u6784\u6a21\u5f0f\u7684\u5f00\u53d1\u6a21\u578b\uff0c\u5b9e\u73b0\u4e86\u6a21\u578b\u548c\u89c6\u56fe\u7684\u5f7b\u5e95\u5206\u79bb\uff0c\u5229\u4e8e\u56e2\u961f\u5f00\u53d1\u548c\u4ee3\u7801\u590d\u7528\uff0c\u5982\u4e0b\u56fe\u6240\u793a\u3002\njava-intelview-2-001\n114\u3001Servlet 3\u4e2d\u7684\u5f02\u6b65\u5904\u7406\u6307\u7684\u662f\u4ec0\u4e48\uff1f\n\u7b54\uff1a\u5728Servlet 3\u4e2d\u5f15\u5165\u4e86\u4e00\u9879\u65b0\u7684\u6280\u672f\u53ef\u4ee5\u8ba9Servlet\u5f02\u6b65\u5904\u7406\u8bf7\u6c42\u3002\n\u6709\u4eba\u53ef\u80fd\u4f1a\u8d28\u7591\uff0c\u65e2\u7136\u90fd\u6709\u591a\u7ebf\u7a0b\u4e86\uff0c\u8fd8\u9700\u8981\u5f02\u6b65\u5904\u7406\u8bf7\u6c42\u5417\uff1f\u7b54\u6848\u662f\u80af\u5b9a\u7684\uff0c\u56e0\u4e3a\u5982\u679c\u4e00\u4e2a\u4efb\u52a1\u5904\u7406\u65f6\u95f4\u76f8\u5f53\u957f\uff0c\u90a3\u4e48Servlet\u6216Filter\u4f1a\u4e00\u76f4\u5360\u7528\u7740\u8bf7\u6c42\u5904\u7406\u7ebf\u7a0b\u76f4\u5230\u4efb\u52a1\u7ed3\u675f\uff0c\u968f\u7740\u5e76\u53d1\u7528\u6237\u7684\u589e\u52a0\uff0c\u5bb9\u5668\u5c06\u4f1a\u906d\u9047\u7ebf\u7a0b\u8d85\u51fa\u7684\u98ce\u9669\uff0c\u8fd9\u8fd9\u79cd\u60c5\u51b5\u4e0b\u5f88\u591a\u7684\u8bf7\u6c42\u5c06\u4f1a\u88ab\u5806\u79ef\u8d77\u6765\u800c\u540e\u7eed\u7684\u8bf7\u6c42\u53ef\u80fd\u4f1a\u906d\u9047\u62d2\u7edd\u670d\u52a1\uff0c\u76f4\u5230\u6709\u8d44\u6e90\u53ef\u4ee5\u5904\u7406\u8bf7\u6c42\u4e3a\u6b62\u3002\n\u5f02\u6b65\u7279\u6027\u53ef\u4ee5\u5e2e\u52a9\u5e94\u7528\u8282\u7701\u5bb9\u5668\u4e2d\u7684\u7ebf\u7a0b\uff0c\u7279\u522b\u9002\u5408\u6267\u884c\u65f6\u95f4\u957f\u800c\u4e14\u7528\u6237\u9700\u8981\u5f97\u5230\u7ed3\u679c\u7684\u4efb\u52a1\uff0c\u5982\u679c\u7528\u6237\u4e0d\u9700\u8981\u5f97\u5230\u7ed3\u679c\u5219\u76f4\u63a5\u5c06\u4e00\u4e2aRunnable\u5bf9\u8c61\u4ea4\u7ed9Executor\u5e76\u7acb\u5373\u8fd4\u56de\u5373\u53ef\u3002\uff08\u5982\u679c\u4e0d\u6e05\u695a\u591a\u7ebf\u7a0b\u548c\u7ebf\u7a0b\u6c60\u7684\u76f8\u5173\u5185\u5bb9\uff0c\u8bf7\u67e5\u770b\u300aJava\u9762\u8bd5\u9898\u5168\u96c6\uff08\u4e0a\uff09\u300b\u5173\u4e8e\u591a\u7ebf\u7a0b\u548c\u7ebf\u7a0b\u6c60\u7684\u90e8\u5206\u6216\u9605\u8bfb\u6211\u7684\u53e6\u4e00\u7bc7\u6587\u7ae0\u300a\u5173\u4e8eJava\u5e76\u53d1\u7f16\u7a0b\u7684\u603b\u7ed3\u548c\u601d\u8003\u300b\uff09\n\u8865\u5145\uff1a\u591a\u7ebf\u7a0b\u5728Java\u8bde\u751f\u521d\u671f\u65e0\u7591\u662f\u4e00\u4e2a\u4eae\u70b9\uff0c\u800cServlet\u5355\u5b9e\u4f8b\u591a\u7ebf\u7a0b\u7684\u5de5\u4f5c\u65b9\u5f0f\u4e5f\u66fe\u4e3a\u5176\u8d62\u5f97\u7f8e\u540d\uff0c\u7136\u800c\u6280\u672f\u7684\u53d1\u5c55\u5f80\u5f80\u4f1a\u98a0\u8986\u6211\u4eec\u5f88\u591a\u7684\u8ba4\u77e5\uff0c\u5c31\u5982\u540c\u5f53\u5e74\u7231\u56e0\u65af\u5766\u7684\u76f8\u5bf9\u8bba\u98a0\u8986\u4e86\u725b\u987f\u7684\u7ecf\u5178\u529b\u5b66\u4e00\u822c\u3002\u4e8b\u5b9e\u4e0a\uff0c\u5f02\u6b65\u5904\u7406\u7edd\u4e0d\u662fSerlvet 3\u9996\u521b\uff0c\u5982\u679c\u4f60\u4e86\u89e3Node.js\u7684\u8bdd\uff0c\u5bf9Servlet 3\u7684\u8fd9\u4e2a\u91cd\u8981\u6539\u8fdb\u5c31\u4e0d\u4ee5\u4e3a\u5947\u4e86\u3002\n\u4e0b\u9762\u662f\u4e00\u4e2a\u652f\u6301\u5f02\u6b65\u5904\u7406\u8bf7\u6c42\u7684Servlet\u7684\u4f8b\u5b50\u3002\n\n    import java.io.IOException;\n    import javax.servlet.AsyncContext;\n    import javax.servlet.ServletException;\n    import javax.servlet.annotation.WebServlet;\n    import javax.servlet.http.HttpServlet;\n    import javax.servlet.http.HttpServletRequest;\n    import javax.servlet.http.HttpServletResponse;\n\n    @WebServlet(urlPatterns = {\"/async\"}, asyncSupported = true)\n    public class AsyncServlet extends HttpServlet {\n        private static final long serialVersionUID = 1L;\n\n        @Override\n        public void doGet(HttpServletRequest req, HttpServletResponse resp) \n                throws ServletException, IOException {\n            // \u5f00\u542fTomcat\u5f02\u6b65Servlet\u652f\u6301\n            req.setAttribute(\"org.apache.catalina.ASYNC_SUPPORTED\", true);\n\n            final AsyncContext ctx = req.startAsync();  // \u542f\u52a8\u5f02\u6b65\u5904\u7406\u7684\u4e0a\u4e0b\u6587\n            // ctx.setTimeout(30000);\n            ctx.start(new Runnable() {\n\n                @Override\n                public void run() {\n                    // \u5728\u6b64\u5904\u6dfb\u52a0\u5f02\u6b65\u5904\u7406\u7684\u4ee3\u7801\n\n                    ctx.complete();\n                }\n            });\n        }\n    }\n115\u3001\u5982\u4f55\u5728\u57fa\u4e8eJava\u7684Web\u9879\u76ee\u4e2d\u5b9e\u73b0\u6587\u4ef6\u4e0a\u4f20\u548c\u4e0b\u8f7d\uff1f\n\u7b54\uff1a\u5728Sevlet 3 \u4ee5\u524d\uff0cServlet API\u4e2d\u6ca1\u6709\u652f\u6301\u4e0a\u4f20\u529f\u80fd\u7684API\uff0c\u56e0\u6b64\u8981\u5b9e\u73b0\u4e0a\u4f20\u529f\u80fd\u9700\u8981\u5f15\u5165\u7b2c\u4e09\u65b9\u5de5\u5177\u4ecePOST\u8bf7\u6c42\u4e2d\u83b7\u5f97\u4e0a\u4f20\u7684\u9644\u4ef6\u6216\u8005\u901a\u8fc7\u81ea\u884c\u5904\u7406\u8f93\u5165\u6d41\u6765\u83b7\u5f97\u4e0a\u4f20\u7684\u6587\u4ef6\uff0c\u6211\u4eec\u63a8\u8350\u4f7f\u7528Apache\u7684commons-fileupload\u3002\n\u4eceServlet 3\u5f00\u59cb\uff0c\u6587\u4ef6\u4e0a\u4f20\u53d8\u5f97\u65e0\u6bd4\u7b80\u5355\uff0c\u76f8\u4fe1\u770b\u770b\u4e0b\u9762\u7684\u4f8b\u5b50\u4e00\u5207\u90fd\u6e05\u695a\u4e86\u3002\n\u4e0a\u4f20\u9875\u9762index.jsp\uff1a\n\n    &lt;%@ page pageEncoding=\"utf-8\"%&gt;\n    &lt;!DOCTYPE html&gt;\n    &lt;html&gt;\n    &lt;head&gt;\n    &lt;meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\"&gt;\n    &lt;title&gt;Photo Upload&lt;/title&gt;\n    &lt;/head&gt;\n    &lt;body&gt;\n    &lt;h1&gt;Select your photo and upload&lt;/h1&gt;\n    &lt;hr/&gt;\n    &lt;div style=\"color:red;font-size:14px;\"&gt;${hint}&lt;/div&gt;\n    &lt;form action=\"UploadServlet\" method=\"post\" enctype=\"multipart/form-data\"&gt;\n        Photo file: &lt;input type=\"file\" name=\"photo\" /&gt;\n        &lt;input type=\"submit\" value=\"Upload\" /&gt;\n    &lt;/form&gt;\n    &lt;/body&gt;\n    &lt;/html&gt;\n\u652f\u6301\u4e0a\u4f20\u7684Servlet\uff1a\n\n    package com.jackfrued.servlet;\n\n    import java.io.IOException;\n\n    import javax.servlet.ServletException;\n    import javax.servlet.annotation.MultipartConfig;\n    import javax.servlet.annotation.WebServlet;\n    import javax.servlet.http.HttpServlet;\n    import javax.servlet.http.HttpServletRequest;\n    import javax.servlet.http.HttpServletResponse;\n    import javax.servlet.http.Part;\n\n    @WebServlet(\"/UploadServlet\")\n    @MultipartConfig\n    public class UploadServlet extends HttpServlet {\n        private static final long serialVersionUID = 1L;\n\n        protected void doPost(HttpServletRequest request,\n                HttpServletResponse response) throws ServletException, IOException {\n            // \u53ef\u4ee5\u7528request.getPart()\u65b9\u6cd5\u83b7\u5f97\u540d\u4e3aphoto\u7684\u4e0a\u4f20\u9644\u4ef6\n            // \u4e5f\u53ef\u4ee5\u7528request.getParts()\u83b7\u5f97\u6240\u6709\u4e0a\u4f20\u9644\u4ef6\uff08\u591a\u6587\u4ef6\u4e0a\u4f20\uff09\n            // \u7136\u540e\u901a\u8fc7\u5faa\u73af\u5206\u522b\u5904\u7406\u6bcf\u4e00\u4e2a\u4e0a\u4f20\u7684\u6587\u4ef6\n            Part part = request.getPart(\"photo\");\n            if (part != null &amp;&amp; part.getSubmittedFileName().length() &gt; 0) {\n                // \u7528ServletContext\u5bf9\u8c61\u7684getRealPath()\u65b9\u6cd5\u83b7\u5f97\u4e0a\u4f20\u6587\u4ef6\u5939\u7684\u7edd\u5bf9\u8def\u5f84\n                String savePath = request.getServletContext().getRealPath(\"/upload\");\n                // Servlet 3.1\u89c4\u8303\u4e2d\u53ef\u4ee5\u7528Part\u5bf9\u8c61\u7684getSubmittedFileName()\u65b9\u6cd5\u83b7\u5f97\u4e0a\u4f20\u7684\u6587\u4ef6\u540d\n                // \u66f4\u597d\u7684\u505a\u6cd5\u662f\u4e3a\u4e0a\u4f20\u7684\u6587\u4ef6\u8fdb\u884c\u91cd\u547d\u540d\uff08\u907f\u514d\u540c\u540d\u6587\u4ef6\u7684\u76f8\u4e92\u8986\u76d6\uff09\n                part.write(savePath + \"/\" + part.getSubmittedFileName());\n                request.setAttribute(\"hint\", \"Upload Successfully!\");\n            } else {\n                request.setAttribute(\"hint\", \"Upload failed!\");\n            }\n            // \u8df3\u8f6c\u56de\u5230\u4e0a\u4f20\u9875\u9762\n            request.getRequestDispatcher(\"index.jsp\").forward(request, response);\n        }\n\n    }\n116\u3001\u670d\u52a1\u5668\u6536\u5230\u7528\u6237\u63d0\u4ea4\u7684\u8868\u5355\u6570\u636e\uff0c\u5230\u5e95\u662f\u8c03\u7528Servlet\u7684doGet()\u8fd8\u662fdoPost()\u65b9\u6cd5\uff1f\n\u7b54\uff1aHTML\u7684\u5143\u7d20\u6709\u4e00\u4e2amethod\u5c5e\u6027\uff0c\u7528\u6765\u6307\u5b9a\u63d0\u4ea4\u8868\u5355\u7684\u65b9\u5f0f\uff0c\u5176\u503c\u53ef\u4ee5\u662fget\u6216post\u3002\u6211\u4eec\u81ea\u5b9a\u4e49\u7684Servlet\u4e00\u822c\u60c5\u51b5\u4e0b\u4f1a\u91cd\u5199doGet()\u6216doPost()\u4e24\u4e2a\u65b9\u6cd5\u4e4b\u4e00\u6216\u5168\u90e8\uff0c\u5982\u679c\u662fGET\u8bf7\u6c42\u5c31\u8c03\u7528doGet()\u65b9\u6cd5\uff0c\u5982\u679c\u662fPOST\u8bf7\u6c42\u5c31\u8c03\u7528doPost()\u65b9\u6cd5\uff0c\u90a3\u4e3a\u4ec0\u4e48\u4e3a\u4ec0\u4e48\u8fd9\u6837\u5462\uff1f\n\u6211\u4eec\u81ea\u5b9a\u4e49\u7684Servlet\u901a\u5e38\u7ee7\u627f\u81eaHttpServlet\uff0cHttpServlet\u7ee7\u627f\u81eaGenericServlet\u5e76\u91cd\u5199\u4e86\u5176\u4e2d\u7684service()\u65b9\u6cd5\uff0c\u8fd9\u4e2a\u65b9\u6cd5\u662fServlet\u63a5\u53e3\u4e2d\u5b9a\u4e49\u7684\u3002\nHttpServlet\u91cd\u5199\u7684service()\u65b9\u6cd5\u4f1a\u5148\u83b7\u53d6\u7528\u6237\u8bf7\u6c42\u7684\u65b9\u6cd5\uff0c\u7136\u540e\u6839\u636e\u8bf7\u6c42\u65b9\u6cd5\u8c03\u7528doGet()\u3001doPost()\u3001doPut()\u3001doDelete()\u7b49\u65b9\u6cd5\uff0c\u5982\u679c\u5728\u81ea\u5b9a\u4e49Servlet\u4e2d\u91cd\u5199\u4e86\u8fd9\u4e9b\u65b9\u6cd5\uff0c\u90a3\u4e48\u663e\u7136\u4f1a\u8c03\u7528\u91cd\u5199\u8fc7\u7684\uff08\u81ea\u5b9a\u4e49\u7684\uff09\u65b9\u6cd5\uff0c\u8fd9\u663e\u7136\u662f\u5bf9\u6a21\u677f\u65b9\u6cd5\u6a21\u5f0f\u7684\u5e94\u7528\uff08\u5982\u679c\u4e0d\u7406\u89e3\uff0c\u8bf7\u53c2\u8003\u960e\u5b8f\u535a\u58eb\u7684\u300aJava\u4e0e\u6a21\u5f0f\u300b\u4e00\u4e66\u7684\u7b2c37\u7ae0\uff09\u3002\n\u5f53\u7136\uff0c\u81ea\u5b9a\u4e49Servlet\u4e2d\u4e5f\u53ef\u4ee5\u76f4\u63a5\u91cd\u5199service()\u65b9\u6cd5\uff0c\u90a3\u4e48\u4e0d\u7ba1\u662f\u54ea\u79cd\u65b9\u5f0f\u7684\u8bf7\u6c42\uff0c\u90fd\u53ef\u4ee5\u901a\u8fc7\u81ea\u5df1\u7684\u4ee3\u7801\u8fdb\u884c\u5904\u7406\uff0c\u8fd9\u5bf9\u4e8e\u4e0d\u533a\u5206\u8bf7\u6c42\u65b9\u6cd5\u7684\u573a\u666f\u6bd4\u8f83\u5408\u9002\u3002\n117\u3001JSP\u4e2d\u7684\u9759\u6001\u5305\u542b\u548c\u52a8\u6001\u5305\u542b\u6709\u4ec0\u4e48\u533a\u522b\uff1f\n\u7b54\uff1a\u9759\u6001\u5305\u542b\u662f\u901a\u8fc7JSP\u7684include\u6307\u4ee4\u5305\u542b\u9875\u9762\uff0c\u52a8\u6001\u5305\u542b\u662f\u901a\u8fc7JSP\u6807\u51c6\u52a8\u4f5c\u5305\u542b\u9875\u9762\u3002\u9759\u6001\u5305\u542b\u662f\u7f16\u8bd1\u65f6\u5305\u542b\uff0c\u5982\u679c\u5305\u542b\u7684\u9875\u9762\u4e0d\u5b58\u5728\u5219\u4f1a\u4ea7\u751f\u7f16\u8bd1\u9519\u8bef\uff0c\u800c\u4e14\u4e24\u4e2a\u9875\u9762\u7684\"contentType\"\u5c5e\u6027\u5e94\u4fdd\u6301\u4e00\u81f4\uff0c\u56e0\u4e3a\u4e24\u4e2a\u9875\u9762\u4f1a\u5408\u4e8c\u4e3a\u4e00\uff0c\u53ea\u4ea7\u751f\u4e00\u4e2aclass\u6587\u4ef6\uff0c\u56e0\u6b64\u88ab\u5305\u542b\u9875\u9762\u53d1\u751f\u7684\u53d8\u52a8\u518d\u5305\u542b\u5b83\u7684\u9875\u9762\u66f4\u65b0\u524d\u4e0d\u4f1a\u5f97\u5230\u66f4\u65b0\u3002\n\u52a8\u6001\u5305\u542b\u662f\u8fd0\u884c\u65f6\u5305\u542b\uff0c\u53ef\u4ee5\u5411\u88ab\u5305\u542b\u7684\u9875\u9762\u4f20\u9012\u53c2\u6570\uff0c\u5305\u542b\u9875\u9762\u548c\u88ab\u5305\u542b\u9875\u9762\u662f\u72ec\u7acb\u7684\uff0c\u4f1a\u7f16\u8bd1\u51fa\u4e24\u4e2aclass\u6587\u4ef6\uff0c\u5982\u679c\u88ab\u5305\u542b\u7684\u9875\u9762\u4e0d\u5b58\u5728\uff0c\u4e0d\u4f1a\u4ea7\u751f\u7f16\u8bd1\u9519\u8bef\uff0c\u4e5f\u4e0d\u5f71\u54cd\u9875\u9762\u5176\u4ed6\u90e8\u5206\u7684\u6267\u884c\u3002\u4ee3\u7801\u5982\u4e0b\u6240\u793a\uff1a\n\n    &lt;%-- \u9759\u6001\u5305\u542b --%&gt;\n    &lt;%@ include file=\"...\" %&gt;\n\n    &lt;%-- \u52a8\u6001\u5305\u542b --%&gt;\n    &lt;jsp:include page=\"...\"&gt;\n        &lt;jsp:param name=\"...\" value=\"...\" /&gt;\n    &lt;/jsp:include&gt;\n118\u3001Servlet\u4e2d\u5982\u4f55\u83b7\u53d6\u7528\u6237\u63d0\u4ea4\u7684\u67e5\u8be2\u53c2\u6570\u6216\u8868\u5355\u6570\u636e\uff1f\n\u7b54\uff1a\u53ef\u4ee5\u901a\u8fc7\u8bf7\u6c42\u5bf9\u8c61\uff08HttpServletRequest\uff09\u7684getParameter()\u65b9\u6cd5\u901a\u8fc7\u53c2\u6570\u540d\u83b7\u5f97\u53c2\u6570\u503c\u3002\u5982\u679c\u6709\u5305\u542b\u591a\u4e2a\u503c\u7684\u53c2\u6570\uff08\u4f8b\u5982\u590d\u9009\u6846\uff09\uff0c\u53ef\u4ee5\u901a\u8fc7\u8bf7\u6c42\u5bf9\u8c61\u7684getParameterValues()\u65b9\u6cd5\u83b7\u5f97\u3002\u5f53\u7136\u4e5f\u53ef\u4ee5\u901a\u8fc7\u8bf7\u6c42\u5bf9\u8c61\u7684getParameterMap()\u83b7\u5f97\u4e00\u4e2a\u53c2\u6570\u540d\u548c\u53c2\u6570\u503c\u7684\u6620\u5c04\uff08Map\uff09\u3002\n119\u3001Servlet\u4e2d\u5982\u4f55\u83b7\u53d6\u7528\u6237\u914d\u7f6e\u7684\u521d\u59cb\u5316\u53c2\u6570\u4ee5\u53ca\u670d\u52a1\u5668\u4e0a\u4e0b\u6587\u53c2\u6570\uff1f\n\u7b54\uff1a\u53ef\u4ee5\u901a\u8fc7\u91cd\u5199Servlet\u63a5\u53e3\u7684init(ServletConfig)\u65b9\u6cd5\u5e76\u901a\u8fc7ServletConfig\u5bf9\u8c61\u7684getInitParameter()\u65b9\u6cd5\u6765\u83b7\u53d6Servlet\u7684\u521d\u59cb\u5316\u53c2\u6570\u3002\u53ef\u4ee5\u901a\u8fc7ServletConfig\u5bf9\u8c61\u7684getServletContext()\u65b9\u6cd5\u83b7\u53d6ServletContext\u5bf9\u8c61\uff0c\u5e76\u901a\u8fc7\u8be5\u5bf9\u8c61\u7684getInitParameter()\u65b9\u6cd5\u6765\u83b7\u53d6\u670d\u52a1\u5668\u4e0a\u4e0b\u6587\u53c2\u6570\u3002\u5f53\u7136\uff0cServletContext\u5bf9\u8c61\u4e5f\u5728\u5904\u7406\u7528\u6237\u8bf7\u6c42\u7684\u65b9\u6cd5\uff08\u5982doGet()\u65b9\u6cd5\uff09\u4e2d\u901a\u8fc7\u8bf7\u6c42\u5bf9\u8c61\u7684getServletContext()\u65b9\u6cd5\u6765\u83b7\u5f97\u3002\n120\u3001\u5982\u4f55\u8bbe\u7f6e\u8bf7\u6c42\u7684\u7f16\u7801\u4ee5\u53ca\u54cd\u5e94\u5185\u5bb9\u7684\u7c7b\u578b\uff1f\n\u7b54\uff1a\u901a\u8fc7\u8bf7\u6c42\u5bf9\u8c61\uff08ServletRequest\uff09\u7684setCharacterEncoding(String)\u65b9\u6cd5\u53ef\u4ee5\u8bbe\u7f6e\u8bf7\u6c42\u7684\u7f16\u7801\uff0c\u5176\u5b9e\u8981\u5f7b\u5e95\u89e3\u51b3\u4e71\u7801\u95ee\u9898\u5c31\u5e94\u8be5\u8ba9\u9875\u9762\u3001\u670d\u52a1\u5668\u3001\u8bf7\u6c42\u548c\u54cd\u5e94\u3001Java\u7a0b\u5e8f\u90fd\u4f7f\u7528\u7edf\u4e00\u7684\u7f16\u7801\uff0c\u6700\u597d\u7684\u9009\u62e9\u5f53\u7136\u662fUTF-8\uff1b\u901a\u8fc7\u54cd\u5e94\u5bf9\u8c61\uff08ServletResponse\uff09\u7684setContentType(String)\u65b9\u6cd5\u53ef\u4ee5\u8bbe\u7f6e\u54cd\u5e94\u5185\u5bb9\u7684\u7c7b\u578b\uff0c\u5f53\u7136\u4e5f\u53ef\u4ee5\u901a\u8fc7HttpServletResponsed\u5bf9\u8c61\u7684setHeader(String, String)\u65b9\u6cd5\u6765\u8bbe\u7f6e\u3002\n\u8bf4\u660e\uff1a\u73b0\u5728\u5982\u679c\u8fd8\u6709\u516c\u53f8\u5728\u9762\u8bd5\u7684\u65f6\u5019\u95eeJSP\u7684\u58f0\u660e\u6807\u8bb0\u3001\u8868\u8fbe\u5f0f\u6807\u8bb0\u3001\u5c0f\u811a\u672c\u6807\u8bb0\u8fd9\u4e9b\u5185\u5bb9\u7684\u8bdd\uff0c\u8fd9\u6837\u7684\u516c\u53f8\u4e5f\u4e0d\u7528\u53bb\u4e86\uff0c\u5176\u5b9eJSP\u5185\u7f6e\u5bf9\u8c61\u3001JSP\u6307\u4ee4\u8fd9\u4e9b\u4e1c\u897f\u57fa\u672c\u4e0a\u90fd\u53ef\u4ee5\u5fd8\u5374\u4e86\uff0c\u5173\u4e8eJava Web\u5f00\u53d1\u7684\u76f8\u5173\u77e5\u8bc6\uff0c\u53ef\u4ee5\u770b\u4e00\u4e0b\u6211\u7684\u300aServlet&amp;JSP\u601d\u7ef4\u5bfc\u56fe\u300b\uff0c\u4e0a\u9762\u6709\u5b8c\u6574\u7684\u77e5\u8bc6\u70b9\u7684\u7f57\u5217\u3002\u60f3\u4e86\u89e3\u5982\u4f55\u5b9e\u73b0\u81ea\u5b9a\u4e49MVC\u6846\u67b6\u7684\uff0c\u53ef\u4ee5\u770b\u4e00\u4e0b\u6211\u7684\u300aJava Web\u81ea\u5b9a\u4e49MVC\u6846\u67b6\u8be6\u89e3\u300b\u3002\n121\u3001\u89e3\u91ca\u4e00\u4e0b\u7f51\u7edc\u5e94\u7528\u7684\u6a21\u5f0f\u53ca\u5176\u7279\u70b9\u3002\n\u7b54\uff1a\u5178\u578b\u7684\u7f51\u7edc\u5e94\u7528\u6a21\u5f0f\u5927\u81f4\u6709\u4e09\u7c7b\uff1aB/S\u3001C/S\u3001P2P\u3002\n\u5176\u4e2dB\u4ee3\u8868\u6d4f\u89c8\u5668\uff08Browser\uff09\u3001C\u4ee3\u8868\u5ba2\u6237\u7aef\uff08Client\uff09\u3001S\u4ee3\u8868\u670d\u52a1\u5668\uff08Server\uff09\uff0cP2P\u662f\u5bf9\u7b49\u6a21\u5f0f\uff0c\u4e0d\u533a\u5206\u5ba2\u6237\u7aef\u548c\u670d\u52a1\u5668\u3002\nB/S\u5e94\u7528\u6a21\u5f0f\u4e2d\u53ef\u4ee5\u89c6\u4e3a\u7279\u6b8a\u7684C/S\u5e94\u7528\u6a21\u5f0f\uff0c\u53ea\u662f\u5c06C/S\u5e94\u7528\u6a21\u5f0f\u4e2d\u7684\u7279\u6b8a\u7684\u5ba2\u6237\u7aef\u6362\u6210\u4e86\u6d4f\u89c8\u5668\uff0c\u56e0\u4e3a\u51e0\u4e4e\u6240\u6709\u7684\u7cfb\u7edf\u4e0a\u90fd\u6709\u6d4f\u89c8\u5668\uff0c\u90a3\u4e48\u53ea\u8981\u6253\u5f00\u6d4f\u89c8\u5668\u5c31\u53ef\u4ee5\u4f7f\u7528\u5e94\u7528\uff0c\u6ca1\u6709\u5b89\u88c5\u3001\u914d\u7f6e\u3001\u5347\u7ea7\u5ba2\u6237\u7aef\u6240\u5e26\u6765\u7684\u5404\u79cd\u5f00\u9500\u3002\nP2P\u5e94\u7528\u6a21\u5f0f\u4e2d\uff0c\u6210\u5343\u4e0a\u4e07\u53f0\u5f7c\u6b64\u8fde\u63a5\u7684\u8ba1\u7b97\u673a\u90fd\u5904\u4e8e\u5bf9\u7b49\u7684\u5730\u4f4d\uff0c\u6574\u4e2a\u7f51\u7edc\u4e00\u822c\u6765\u8bf4\u4e0d\u4f9d\u8d56\u4e13\u7528\u7684\u96c6\u4e2d\u670d\u52a1\u5668\u3002\u7f51\u7edc\u4e2d\u7684\u6bcf\u4e00\u53f0\u8ba1\u7b97\u673a\u65e2\u80fd\u5145\u5f53\u7f51\u7edc\u670d\u52a1\u7684\u8bf7\u6c42\u8005\uff0c\u53c8\u5bf9\u5176\u5b83\u8ba1\u7b97\u673a\u7684\u8bf7\u6c42\u4f5c\u51fa\u54cd\u5e94\uff0c\u63d0\u4f9b\u8d44\u6e90\u548c\u670d\u52a1\u3002\u901a\u5e38\u8fd9\u4e9b\u8d44\u6e90\u548c\u670d\u52a1\u5305\u62ec\uff1a\u4fe1\u606f\u7684\u5171\u4eab\u548c\u4ea4\u6362\u3001\u8ba1\u7b97\u8d44\u6e90\uff08\u5982CPU\u7684\u5171\u4eab\uff09\u3001\u5b58\u50a8\u5171\u4eab\uff08\u5982\u7f13\u5b58\u548c\u78c1\u76d8\u7a7a\u95f4\u7684\u4f7f\u7528\uff09\u7b49\uff0c\u8fd9\u79cd\u5e94\u7528\u6a21\u5f0f\u6700\u5927\u7684\u963b\u529b\u5b89\u5168\u6027\u3001\u7248\u672c\u7b49\u95ee\u9898\uff0c\u76ee\u524d\u6709\u5f88\u591a\u5e94\u7528\u90fd\u6df7\u5408\u4f7f\u7528\u4e86\u591a\u79cd\u5e94\u7528\u6a21\u578b\uff0c\u6700\u5e38\u89c1\u7684\u7f51\u7edc\u89c6\u9891\u5e94\u7528\uff0c\u5b83\u51e0\u4e4e\u628a\u4e09\u79cd\u6a21\u5f0f\u90fd\u7528\u4e0a\u4e86\u3002\n\u8865\u5145\uff1a\u6b64\u9898\u8981\u8ddf\"\u7535\u5b50\u5546\u52a1\u6a21\u5f0f\"\u533a\u5206\u5f00\uff0c\u56e0\u4e3a\u6709\u5f88\u591a\u4eba\u88ab\u95ee\u5230\u8fd9\u4e2a\u95ee\u9898\u7684\u65f6\u5019\u9a6c\u4e0a\u60f3\u5230\u7684\u662fB2B\uff08\u5982\u963f\u91cc\u5df4\u5df4\uff09\u3001B2C\uff08\u5982\u5f53\u5f53\u3001\u4e9a\u9a6c\u900a\u3001\u4eac\u4e1c\uff09\u3001C2C\uff08\u5982\u6dd8\u5b9d\u3001\u62cd\u62cd\uff09\u3001C2B\uff08\u5982\u5a01\u5ba2\uff09\u3001O2O\uff08\u5982\u7f8e\u56e2\u3001\u997f\u4e86\u4e48\uff09\u3002\u5bf9\u4e8e\u8fd9\u7c7b\u95ee\u9898\uff0c\u53ef\u4ee5\u53bb\u767e\u5ea6\u4e0a\u9762\u79d1\u666e\u4e00\u4e0b\u3002\n122\u3001\u4ec0\u4e48\u662fWeb Service\uff08Web\u670d\u52a1\uff09\uff1f\n\u7b54\uff1a\u4ece\u8868\u9762\u4e0a\u770b\uff0cWeb Service\u5c31\u662f\u4e00\u4e2a\u5e94\u7528\u7a0b\u5e8f\uff0c\u5b83\u5411\u5916\u754c\u66b4\u9732\u51fa\u4e00\u4e2a\u80fd\u591f\u901a\u8fc7Web\u8fdb\u884c\u8c03\u7528\u7684API\u3002\u8fd9\u5c31\u662f\u8bf4\uff0c\u4f60\u80fd\u591f\u7528\u7f16\u7a0b\u7684\u65b9\u6cd5\u900f\u660e\u7684\u8c03\u7528\u8fd9\u4e2a\u5e94\u7528\u7a0b\u5e8f\uff0c\u4e0d\u9700\u8981\u4e86\u89e3\u5b83\u7684\u4efb\u4f55\u7ec6\u8282\uff0c\u8ddf\u4f60\u4f7f\u7528\u7684\u7f16\u7a0b\u8bed\u8a00\u4e5f\u6ca1\u6709\u5173\u7cfb\u3002\n\u4f8b\u5982\u53ef\u4ee5\u521b\u5efa\u4e00\u4e2a\u63d0\u4f9b\u5929\u6c14\u9884\u62a5\u7684Web Service\uff0c\u90a3\u4e48\u65e0\u8bba\u4f60\u7528\u54ea\u79cd\u7f16\u7a0b\u8bed\u8a00\u5f00\u53d1\u7684\u5e94\u7528\u90fd\u53ef\u4ee5\u901a\u8fc7\u8c03\u7528\u5b83\u7684API\u5e76\u4f20\u5165\u57ce\u5e02\u4fe1\u606f\u6765\u83b7\u5f97\u8be5\u57ce\u5e02\u7684\u5929\u6c14\u9884\u62a5\u3002\u4e4b\u6240\u4ee5\u79f0\u4e4b\u4e3aWeb Service\uff0c\u662f\u56e0\u4e3a\u5b83\u57fa\u4e8eHTTP\u534f\u8bae\u4f20\u8f93\u6570\u636e\uff0c\u8fd9\u4f7f\u5f97\u8fd0\u884c\u5728\u4e0d\u540c\u673a\u5668\u4e0a\u7684\u4e0d\u540c\u5e94\u7528\u65e0\u987b\u501f\u52a9\u9644\u52a0\u7684\u3001\u4e13\u95e8\u7684\u7b2c\u4e09\u65b9\u8f6f\u4ef6\u6216\u786c\u4ef6\uff0c\u5c31\u53ef\u76f8\u4e92\u4ea4\u6362\u6570\u636e\u6216\u96c6\u6210\u3002\n\u8865\u5145\uff1a\u8fd9\u91cc\u5fc5\u987b\u8981\u63d0\u53ca\u7684\u4e00\u4e2a\u6982\u5ff5\u662fSOA\uff08Service-Oriented Architecture\uff0c\u9762\u5411\u670d\u52a1\u7684\u67b6\u6784\uff09\uff0cSOA\u662f\u4e00\u79cd\u601d\u60f3\uff0c\u5b83\u5c06\u5e94\u7528\u7a0b\u5e8f\u7684\u4e0d\u540c\u529f\u80fd\u5355\u5143\u901a\u8fc7\u4e2d\u7acb\u7684\u5951\u7ea6\u8054\u7cfb\u8d77\u6765\uff0c\u72ec\u7acb\u4e8e\u786c\u4ef6\u5e73\u53f0\u3001\u64cd\u4f5c\u7cfb\u7edf\u548c\u7f16\u7a0b\u8bed\u8a00\uff0c\u4f7f\u5f97\u5404\u79cd\u5f62\u5f0f\u7684\u529f\u80fd\u5355\u5143\u80fd\u591f\u66f4\u597d\u7684\u96c6\u6210\u3002\u663e\u7136\uff0cWeb Service\u662fSOA\u7684\u4e00\u79cd\u8f83\u597d\u7684\u89e3\u51b3\u65b9\u6848\uff0c\u5b83\u66f4\u591a\u7684\u662f\u4e00\u79cd\u6807\u51c6\uff0c\u800c\u4e0d\u662f\u4e00\u79cd\u5177\u4f53\u7684\u6280\u672f\u3002\n123\u3001\u6982\u5ff5\u89e3\u91ca\uff1aSOAP\u3001WSDL\u3001UDDI\u3002\n\u7b54\uff1a\n\nSOAP\uff1a\u7b80\u5355\u5bf9\u8c61\u8bbf\u95ee\u534f\u8bae\uff08Simple Object Access Protocol\uff09\uff0c\u662fWeb Service\u4e2d\u4ea4\u6362\u6570\u636e\u7684\u4e00\u79cd\u534f\u8bae\u89c4\u8303\u3002\n\nWSDL\uff1aWeb\u670d\u52a1\u63cf\u8ff0\u8bed\u8a00\uff08Web Service Description Language\uff09\uff0c\u5b83\u63cf\u8ff0\u4e86Web\u670d\u52a1\u7684\u516c\u5171\u63a5\u53e3\u3002\u8fd9\u662f\u4e00\u4e2a\u57fa\u4e8eXML\u7684\u5173\u4e8e\u5982\u4f55\u4e0eWeb\u670d\u52a1\u901a\u8baf\u548c\u4f7f\u7528\u7684\u670d\u52a1\u63cf\u8ff0\uff1b\u4e5f\u5c31\u662f\u63cf\u8ff0\u4e0e\u76ee\u5f55\u4e2d\u5217\u51fa\u7684Web\u670d\u52a1\u8fdb\u884c\u4ea4\u4e92\u65f6\u9700\u8981\u7ed1\u5b9a\u7684\u534f\u8bae\u548c\u4fe1\u606f\u683c\u5f0f\u3002\u901a\u5e38\u91c7\u7528\u62bd\u8c61\u8bed\u8a00\u63cf\u8ff0\u8be5\u670d\u52a1\u652f\u6301\u7684\u64cd\u4f5c\u548c\u4fe1\u606f\uff0c\u4f7f\u7528\u7684\u65f6\u5019\u518d\u5c06\u5b9e\u9645\u7684\u7f51\u7edc\u534f\u8bae\u548c\u4fe1\u606f\u683c\u5f0f\u7ed1\u5b9a\u7ed9\u8be5\u670d\u52a1\u3002\n\nUDDI\uff1a\u7edf\u4e00\u63cf\u8ff0\u3001\u53d1\u73b0\u548c\u96c6\u6210\uff08Universal Description, Discovery and Integration\uff09\uff0c\u5b83\u662f\u4e00\u4e2a\u57fa\u4e8eXML\u7684\u8de8\u5e73\u53f0\u7684\u63cf\u8ff0\u89c4\u8303\uff0c\u53ef\u4ee5\u4f7f\u4e16\u754c\u8303\u56f4\u5185\u7684\u4f01\u4e1a\u5728\u4e92\u8054\u7f51\u4e0a\u53d1\u5e03\u81ea\u5df1\u6240\u63d0\u4f9b\u7684\u670d\u52a1\u3002\u7b80\u5355\u7684\u8bf4\uff0cUDDI\u662f\u8bbf\u95ee\u5404\u79cdWSDL\u7684\u4e00\u4e2a\u95e8\u9762\uff08\u53ef\u4ee5\u53c2\u8003\u8bbe\u8ba1\u6a21\u5f0f\u4e2d\u7684\u95e8\u9762\u6a21\u5f0f\uff09\u3002\n\n\n\u63d0\u793a\uff1a\u5173\u4e8eWeb Service\u7684\u76f8\u5173\u6982\u5ff5\u548c\u77e5\u8bc6\u53ef\u4ee5\u5728W3CSchool\u4e0a\u627e\u5230\u76f8\u5173\u7684\u8d44\u6599\u3002\n124\u3001Java\u89c4\u8303\u4e2d\u548cWeb Service\u76f8\u5173\u7684\u89c4\u8303\u6709\u54ea\u4e9b\uff1f\n\u7b54\uff1aJava\u89c4\u8303\u4e2d\u548cWeb Service\u76f8\u5173\u7684\u6709\u4e09\u4e2a\uff1a\n\nJAX-WS(JSR 224)\uff1a\u8fd9\u4e2a\u89c4\u8303\u662f\u65e9\u671f\u7684\u57fa\u4e8eSOAP\u7684Web Service\u89c4\u8303JAX-RPC\u7684\u66ff\u4ee3\u7248\u672c\uff0c\u5b83\u5e76\u4e0d\u63d0\u4f9b\u5411\u4e0b\u517c\u5bb9\u6027\uff0c\u56e0\u4e3aRPC\u6837\u5f0f\u7684WSDL\u4ee5\u53ca\u76f8\u5173\u7684API\u5df2\u7ecf\u5728Java EE5\u4e2d\u88ab\u79fb\u9664\u4e86\u3002WS-MetaData\u662fJAX-WS\u7684\u4f9d\u8d56\u89c4\u8303\uff0c\u63d0\u4f9b\u4e86\u57fa\u4e8e\u6ce8\u89e3\u914d\u7f6eWeb Service\u548cSOAP\u6d88\u606f\u7684\u76f8\u5173API\u3002\n\nJAXM(JSR 67)\uff1a\u5b9a\u4e49\u4e86\u53d1\u9001\u548c\u63a5\u6536\u6d88\u606f\u6240\u9700\u7684API,\u76f8\u5f53\u4e8eWeb Service\u7684\u670d\u52a1\u5668\u7aef\u3002\n\nJAX-RS(JSR 311 &amp; JSR 339 &amp; JSR 370)\uff1a\u662fJava\u9488\u5bf9REST\uff08Representation State Transfer\uff09\u67b6\u6784\u98ce\u683c\u5236\u5b9a\u7684\u4e00\u5957Web Service\u89c4\u8303\u3002REST\u662f\u4e00\u79cd\u8f6f\u4ef6\u67b6\u6784\u6a21\u5f0f\uff0c\u662f\u4e00\u79cd\u98ce\u683c\uff0c\u5b83\u4e0d\u50cfSOAP\u90a3\u6837\u672c\u8eab\u627f\u8f7d\u7740\u4e00\u79cd\u6d88\u606f\u534f\u8bae\uff0c (\u4e24\u79cd\u98ce\u683c\u7684Web Service\u5747\u91c7\u7528\u4e86HTTP\u505a\u4f20\u8f93\u534f\u8bae\uff0c\u56e0\u4e3aHTTP\u534f\u8bae\u80fd\u7a7f\u8d8a\u9632\u706b\u5899\uff0cJava\u7684\u8fdc\u7a0b\u65b9\u6cd5\u8c03\u7528\uff08RMI\uff09\u7b49\u662f\u91cd\u91cf\u7ea7\u534f\u8bae\uff0c\u901a\u5e38\u4e0d\u80fd\u7a7f\u8d8a\u9632\u706b\u5899\uff09\uff0c\u56e0\u6b64\u53ef\u4ee5\u5c06REST\u89c6\u4e3a\u57fa\u4e8eHTTP\u534f\u8bae\u7684\u8f6f\u4ef6\u67b6\u6784\u3002REST\u4e2d\u6700\u91cd\u8981\u7684\u4e24\u4e2a\u6982\u5ff5\u662f\u8d44\u6e90\u5b9a\u4f4d\u548c\u8d44\u6e90\u64cd\u4f5c\uff0c\u800cHTTP\u534f\u8bae\u6070\u597d\u5b8c\u6574\u7684\u63d0\u4f9b\u4e86\u8fd9\u4e24\u4e2a\u70b9\u3002HTTP\u534f\u8bae\u4e2d\u7684URI\u53ef\u4ee5\u5b8c\u6210\u8d44\u6e90\u5b9a\u4f4d\uff0c\u800cGET\u3001POST\u3001OPTION\u3001DELETE\u65b9\u6cd5\u53ef\u4ee5\u5b8c\u6210\u8d44\u6e90\u64cd\u4f5c\u3002\u56e0\u6b64REST\u5b8c\u5168\u4f9d\u8d56HTTP\u534f\u8bae\u5c31\u53ef\u4ee5\u5b8c\u6210Web Service\uff0c\u800c\u4e0d\u50cfSOAP\u534f\u8bae\u90a3\u6837\u53ea\u5229\u7528\u4e86HTTP\u7684\u4f20\u8f93\u7279\u6027\uff0c\u5b9a\u4f4d\u548c\u64cd\u4f5c\u90fd\u662f\u7531SOAP\u534f\u8bae\u81ea\u8eab\u5b8c\u6210\u7684\uff0c\u4e5f\u6b63\u662f\u7531\u4e8eSOAP\u6d88\u606f\u7684\u5b58\u5728\u4f7f\u5f97\u57fa\u4e8eSOAP\u7684Web Service\u663e\u5f97\u7b28\u91cd\u800c\u9010\u6e10\u88ab\u6dd8\u6c70\u3002\n\n\n125\u3001\u4ecb\u7ecd\u4e00\u4e0b\u4f60\u4e86\u89e3\u7684Java\u9886\u57df\u7684Web Service\u6846\u67b6\u3002\n\u7b54\uff1aJava\u9886\u57df\u7684Web Service\u6846\u67b6\u5f88\u591a\uff0c\u5305\u62ecAxis2\uff08Axis\u7684\u5347\u7ea7\u7248\u672c\uff09\u3001Jersey\uff08RESTful\u7684Web Service\u6846\u67b6\uff09\u3001CXF\uff08XFire\u7684\u5ef6\u7eed\u7248\u672c\uff09\u3001Hessian\u3001Turmeric\u3001JBoss SOA\u7b49\uff0c\u5176\u4e2d\u7edd\u5927\u591a\u6570\u90fd\u662f\u5f00\u6e90\u6846\u67b6\u3002\n\u63d0\u793a\uff1a\u9762\u8bd5\u88ab\u95ee\u5230\u8fd9\u7c7b\u95ee\u9898\u7684\u65f6\u5019\u4e00\u5b9a\u9009\u62e9\u81ea\u5df1\u7528\u8fc7\u7684\u6700\u719f\u6089\u7684\u4f5c\u7b54\uff0c\u5982\u679c\u4e4b\u524d\u6ca1\u6709\u4e86\u89e3\u8fc7\u5c31\u5e94\u8be5\u5728\u9762\u8bd5\u524d\u82b1\u4e00\u4e9b\u65f6\u95f4\u4e86\u89e3\u5176\u4e2d\u7684\u4e24\u4e2a\uff0c\u5e76\u6bd4\u8f83\u5176\u4f18\u7f3a\u70b9\uff0c\u8fd9\u6837\u624d\u80fd\u5728\u9762\u8bd5\u65f6\u7ed9\u51fa\u4e00\u4e2a\u6f02\u4eae\u7684\u7b54\u6848\u3002\n\u6765\u6e90\uff1ahttps://blog.csdn.net/jackfrued/article/details/44931137\n", "categories": [{"name": "\u6781\u5ba2", "slug": "\u6781\u5ba2", "permalink": "/category/\u6781\u5ba2/"}], "tags": [{"name": "Java", "slug": "Java", "permalink": "/tag/Java/"}, {"name": "\u9762\u8bd5\u9898", "slug": "\u9762\u8bd5\u9898", "permalink": "/tag/\u9762\u8bd5\u9898/"}, {"name": "IT", "slug": "IT", "permalink": "/tag/IT/"}]}, {"title": "Java\u9762\u8bd5\u98981", "date": "2020-01-04T12:00:00-00.00", "path": "/archives/java-interview-1/", "text": "\u4ece\u7f51\u7edc\u4e0a\u6536\u96c6\u6574\u7406\u7684Java\u9762\u8bd5\u9898\uff0c\u5982\u6709\u4fb5\u6743\uff0c\u8bf7\u8054\u7cfb\u5220\u9664\uff011\u3001\u9762\u5411\u5bf9\u8c61\u7684\u7279\u5f81\u6709\u54ea\u4e9b\u65b9\u9762\uff1f\n\u9762\u5411\u5bf9\u8c61\u7684\u7279\u5f81\u4e3b\u8981\u6709\u4ee5\u4e0b\u51e0\u4e2a\u65b9\u9762\uff1a\n\uff081\uff09\u62bd\u8c61\uff1a\n\u62bd\u8c61\u662f\u5c06\u4e00\u7c7b\u5bf9\u8c61\u7684\u5171\u540c\u7279\u5f81\u603b\u7ed3\u51fa\u6765\u6784\u9020\u7c7b\u7684\u8fc7\u7a0b\uff0c\u5305\u62ec\u6570\u636e\u62bd\u8c61\u548c\u884c\u4e3a\u62bd\u8c61\u4e24\u65b9\u9762\u3002\n\u62bd\u8c61\u53ea\u5173\u6ce8\u5bf9\u8c61\u6709\u54ea\u4e9b\u5c5e\u6027\u548c\u884c\u4e3a\uff0c\u5e76\u4e0d\u5173\u6ce8\u8fd9\u4e9b\u884c\u4e3a\u7684\u7ec6\u8282\u662f\u4ec0\u4e48\u3002\n\uff082\uff09\u7ee7\u627f\uff1a\n\u7ee7\u627f\u662f\u4ece\u5df2\u6709\u7c7b\u5f97\u5230\u7ee7\u627f\u4fe1\u606f\u521b\u5efa\u65b0\u7c7b\u7684\u8fc7\u7a0b\u3002\n\u63d0\u4f9b\u7ee7\u627f\u4fe1\u606f\u7684\u7c7b\u88ab\u79f0\u4e3a\u7236\u7c7b\uff08\u8d85\u7c7b\u3001\u57fa\u7c7b\uff09\uff1b\u5f97\u5230\u7ee7\u627f\u4fe1\u606f\u7684\u7c7b\u88ab\u79f0\u4e3a\u5b50\u7c7b\uff08\u6d3e\u751f\u7c7b\uff09\u3002\n\u7ee7\u627f\u8ba9\u53d8\u5316\u4e2d\u7684\u8f6f\u4ef6\u7cfb\u7edf\u6709\u4e86\u4e00\u5b9a\u7684\u5ef6\u7eed\u6027\uff0c\u540c\u65f6\u7ee7\u627f\u4e5f\u662f\u5c01\u88c5\u7a0b\u5e8f\u4e2d\u53ef\u53d8\u56e0\u7d20\u7684\u91cd\u8981\u624b\u6bb5\uff08\u5982\u679c\u4e0d\u80fd\u7406\u89e3\u8bf7\u9605\u8bfb\u960e\u5b8f\u535a\u58eb\u7684\u300aJava\u4e0e\u6a21\u5f0f\u300b\u6216\u300a\u8bbe\u8ba1\u6a21\u5f0f\u7cbe\u89e3\u300b\u4e2d\u5173\u4e8e\u6865\u6881\u6a21\u5f0f\u7684\u90e8\u5206\uff09\u3002\n\uff083\uff09\u5c01\u88c5\uff1a\n\u901a\u5e38\u8ba4\u4e3a\u5c01\u88c5\u662f\u628a\u6570\u636e\u548c\u64cd\u4f5c\u6570\u636e\u7684\u65b9\u6cd5\u7ed1\u5b9a\u8d77\u6765\uff0c\u5bf9\u6570\u636e\u7684\u8bbf\u95ee\u53ea\u80fd\u901a\u8fc7\u5df2\u5b9a\u4e49\u7684\u63a5\u53e3\u3002\n\u9762\u5411\u5bf9\u8c61\u7684\u672c\u8d28\u5c31\u662f\u5c06\u73b0\u5b9e\u4e16\u754c\u63cf\u7ed8\u6210\u4e00\u7cfb\u5217\u5b8c\u5168\u81ea\u6cbb\u3001\u5c01\u95ed\u7684\u5bf9\u8c61\u3002\u6211\u4eec\u5728\u7c7b\u4e2d\u7f16\u5199\u7684\u65b9\u6cd5\u5c31\u662f\u5bf9\u5b9e\u73b0\u7ec6\u8282\u7684\u4e00\u79cd\u5c01\u88c5\uff1b\u6211\u4eec\u7f16\u5199\u4e00\u4e2a\u7c7b\u5c31\u662f\u5bf9\u6570\u636e\u548c\u6570\u636e\u64cd\u4f5c\u7684\u5c01\u88c5\u3002\n\u53ef\u4ee5\u8bf4\uff0c\u5c01\u88c5\u5c31\u662f\u9690\u85cf\u4e00\u5207\u53ef\u9690\u85cf\u7684\u4e1c\u897f\uff0c\u53ea\u5411\u5916\u754c\u63d0\u4f9b\u6700\u7b80\u5355\u7684\u7f16\u7a0b\u63a5\u53e3\uff08\u53ef\u4ee5\u60f3\u60f3\u666e\u901a\u6d17\u8863\u673a\u548c\u5168\u81ea\u52a8\u6d17\u8863\u673a\u7684\u5dee\u522b\uff0c\u660e\u663e\u5168\u81ea\u52a8\u6d17\u8863\u673a\u5c01\u88c5\u66f4\u597d\u56e0\u6b64\u64cd\u4f5c\u8d77\u6765\u66f4\u7b80\u5355\uff1b\u6211\u4eec\u73b0\u5728\u4f7f\u7528\u7684\u667a\u80fd\u624b\u673a\u4e5f\u662f\u5c01\u88c5\u5f97\u8db3\u591f\u597d\u7684\uff0c\u56e0\u4e3a\u51e0\u4e2a\u6309\u952e\u5c31\u641e\u5b9a\u4e86\u6240\u6709\u7684\u4e8b\u60c5\uff09\u3002\n\uff084\uff09\u591a\u6001\u6027\uff1a\n\u591a\u6001\u6027\u662f\u6307\u5141\u8bb8\u4e0d\u540c\u5b50\u7c7b\u578b\u7684\u5bf9\u8c61\u5bf9\u540c\u4e00\u6d88\u606f\u4f5c\u51fa\u4e0d\u540c\u7684\u54cd\u5e94\u3002\u7b80\u5355\u7684\u8bf4\u5c31\u662f\u7528\u540c\u6837\u7684\u5bf9\u8c61\u5f15\u7528\u8c03\u7528\u540c\u6837\u7684\u65b9\u6cd5\u4f46\u662f\u505a\u4e86\u4e0d\u540c\u7684\u4e8b\u60c5\u3002\n\u591a\u6001\u6027\u5206\u4e3a \u7f16\u8bd1\u65f6\u7684\u591a\u6001\u6027 \u548c \u8fd0\u884c\u65f6\u7684\u591a\u6001\u6027\u3002\n\u5982\u679c\u5c06\u5bf9\u8c61\u7684\u65b9\u6cd5\u89c6\u4e3a\u5bf9\u8c61\u5411\u5916\u754c\u63d0\u4f9b\u7684\u670d\u52a1\uff0c\u90a3\u4e48\u8fd0\u884c\u65f6\u7684\u591a\u6001\u6027\u53ef\u4ee5\u89e3\u91ca\u4e3a\uff1a\u5f53A\u7cfb\u7edf\u8bbf\u95eeB\u7cfb\u7edf\u63d0\u4f9b\u7684\u670d\u52a1\u65f6\uff0cB\u7cfb\u7edf\u6709\u591a\u79cd\u63d0\u4f9b\u670d\u52a1\u7684\u65b9\u5f0f\uff0c\u4f46\u4e00\u5207\u5bf9A\u7cfb\u7edf\u6765\u8bf4\u90fd\u662f\u900f\u660e\u7684\uff08\u5c31\u50cf\u7535\u52a8\u5243\u987b\u5200\u662fA\u7cfb\u7edf\uff0c\u5b83\u7684\u4f9b\u7535\u7cfb\u7edf\u662fB\u7cfb\u7edf\uff0cB\u7cfb\u7edf\u53ef\u4ee5\u4f7f\u7528\u7535\u6c60\u4f9b\u7535\u6216\u8005\u7528\u4ea4\u6d41\u7535\uff0c\u751a\u81f3\u8fd8\u6709\u53ef\u80fd\u662f\u592a\u9633\u80fd\uff0cA\u7cfb\u7edf\u53ea\u4f1a\u901a\u8fc7B\u7c7b\u5bf9\u8c61\u8c03\u7528\u4f9b\u7535\u7684\u65b9\u6cd5\uff0c\u4f46\u5e76\u4e0d\u77e5\u9053\u4f9b\u7535\u7cfb\u7edf\u7684\u5e95\u5c42\u5b9e\u73b0\u662f\u4ec0\u4e48\uff0c\u7a76\u7adf\u901a\u8fc7\u4f55\u79cd\u65b9\u5f0f\u83b7\u5f97\u4e86\u52a8\u529b\uff09\u3002\n\u65b9\u6cd5\u91cd\u8f7d\uff08overload\uff09\u5b9e\u73b0\u7684\u662f\u7f16\u8bd1\u65f6\u7684\u591a\u6001\u6027\uff08\u4e5f\u79f0\u4e3a\u524d\u7ed1\u5b9a\uff09\uff0c\u800c\u65b9\u6cd5\u91cd\u5199\uff08override\uff09\u5b9e\u73b0\u7684\u662f\u8fd0\u884c\u65f6\u7684\u591a\u6001\u6027\uff08\u4e5f\u79f0\u4e3a\u540e\u7ed1\u5b9a\uff09\u3002\n\u8fd0\u884c\u65f6\u7684\u591a\u6001\u662f\u9762\u5411\u5bf9\u8c61\u6700\u7cbe\u9ad3\u7684\u4e1c\u897f\uff0c\u8981\u5b9e\u73b0\u591a\u6001\u9700\u8981\u505a\u4e24\u4ef6\u4e8b\uff1a1). \u65b9\u6cd5\u91cd\u5199\uff08\u5b50\u7c7b\u7ee7\u627f\u7236\u7c7b\u5e76\u91cd\u5199\u7236\u7c7b\u4e2d\u5df2\u6709\u7684\u6216\u62bd\u8c61\u7684\u65b9\u6cd5\uff09\uff1b2). \u5bf9\u8c61\u9020\u578b\uff08\u7528\u7236\u7c7b\u578b\u5f15\u7528\u5f15\u7528\u5b50\u7c7b\u578b\u5bf9\u8c61\uff0c\u8fd9\u6837\u540c\u6837\u7684\u5f15\u7528\u8c03\u7528\u540c\u6837\u7684\u65b9\u6cd5\u5c31\u4f1a\u6839\u636e\u5b50\u7c7b\u5bf9\u8c61\u7684\u4e0d\u540c\u800c\u8868\u73b0\u51fa\u4e0d\u540c\u7684\u884c\u4e3a\uff09\u3002\n2\u3001\u8bbf\u95ee\u4fee\u9970\u7b26public,private,protected,\u4ee5\u53ca\u4e0d\u5199\uff08\u9ed8\u8ba4\uff09\u65f6\u7684\u533a\u522b\uff1f\n\n\n\u4fee\u9970\u7b26\n\u5f53\u524d\u7c7b\n\u540c\u5305\n\u5b50\u7c7b\n\u5176\u4ed6\u5305\n\n\n\n\npublic\n\u221a\n\u221a\n\u221a\n\u221a\n\n\nprotected\n\u221a\n\u221a\n\u221a\n\u00d7\n\n\ndefault\n\u221a\n\u221a\n\u00d7\n\u00d7\n\n\nprivate\n\u221a\n\u00d7\n\u00d7\n\u00d7\n\n\n\n\u7c7b\u7684\u6210\u5458\u4e0d\u5199\u8bbf\u95ee\u4fee\u9970\u65f6\u9ed8\u8ba4\u4e3adefault\u3002\n\u9ed8\u8ba4\u5bf9\u4e8e\u540c\u4e00\u4e2a\u5305\u4e2d\u7684\u5176\u4ed6\u7c7b\u76f8\u5f53\u4e8e\u516c\u5f00\uff08public\uff09\uff0c\u5bf9\u4e8e\u4e0d\u662f\u540c\u4e00\u4e2a\u5305\u4e2d\u7684\u5176\u4ed6\u7c7b\u76f8\u5f53\u4e8e\u79c1\u6709\uff08private\uff09\u3002\n\u53d7\u4fdd\u62a4\uff08protected\uff09\u5bf9\u5b50\u7c7b\u76f8\u5f53\u4e8e\u516c\u5f00\uff0c\u5bf9\u4e0d\u662f\u540c\u4e00\u5305\u4e2d\u7684\u6ca1\u6709\u7236\u5b50\u5173\u7cfb\u7684\u7c7b\u76f8\u5f53\u4e8e\u79c1\u6709\u3002\nJava\u4e2d\uff0c\u5916\u90e8\u7c7b\u7684\u4fee\u9970\u7b26\u53ea\u80fd\u662fpublic\u6216\u9ed8\u8ba4\uff0c\u7c7b\u7684\u6210\u5458\uff08\u5305\u62ec\u5185\u90e8\u7c7b\uff09\u7684\u4fee\u9970\u7b26\u53ef\u4ee5\u662f\u4ee5\u4e0a\u56db\u79cd\u3002\n3\u3001String \u662f\u6700\u57fa\u672c\u7684\u6570\u636e\u7c7b\u578b\u5417\uff1f\n\u7b54\uff1a\u4e0d\u662f\u3002\nJava\u4e2d\u7684\u57fa\u672c\u6570\u636e\u7c7b\u578b\u53ea\u67098\u4e2a\uff1abyte\u3001short\u3001int\u3001long\u3001float\u3001double\u3001char\u3001boolean\uff1b\n\u9664\u4e86\u57fa\u672c\u7c7b\u578b\uff08primitive type\uff09\uff0c\u5269\u4e0b\u7684\u90fd\u662f\u5f15\u7528\u7c7b\u578b\uff08reference type\uff09\uff0cJava 5\u4ee5\u540e\u5f15\u5165\u7684\u679a\u4e3e\u7c7b\u578b\u4e5f\u7b97\u662f\u4e00\u79cd\u6bd4\u8f83\u7279\u6b8a\u7684\u5f15\u7528\u7c7b\u578b\u3002\n4\u3001float f=3.4;\u662f\u5426\u6b63\u786e\uff1f\n\u7b54:\u4e0d\u6b63\u786e\u3002\n3.4\u662f\u53cc\u7cbe\u5ea6\u6570\uff0c\u5c06\u53cc\u7cbe\u5ea6\u578b\uff08double,8\u4e2a\u5b57\u8282\uff09\u8d4b\u503c\u7ed9\u6d6e\u70b9\u578b\uff08float,4\u4e2a\u5b57\u8282\uff09\u5c5e\u4e8e\u4e0b\u8f6c\u578b\uff08down-casting\uff0c\u4e5f\u79f0\u4e3a\u7a84\u5316\uff09\u4f1a\u9020\u6210\u7cbe\u5ea6\u635f\u5931\uff0c\u56e0\u6b64\u9700\u8981\u5f3a\u5236\u7c7b\u578b\u8f6c\u6362float f =(float)3.4; \u6216\u8005\u5199\u6210float f =3.4F;\u3002\n5\u3001short s1 = 1; s1 = s1 + 1;\u6709\u9519\u5417?short s1 = 1; s1 += 1;\u6709\u9519\u5417\uff1f\n\u7b54\uff1a\u5bf9\u4e8eshort s1 = 1; s1 = s1 + 1;\u7531\u4e8e1\u662fint\u7c7b\u578b\uff0c\u56e0\u6b64s1+1\u8fd0\u7b97\u7ed3\u679c\u4e5f\u662fint \u578b\uff0c\u9700\u8981\u5f3a\u5236\u8f6c\u6362\u7c7b\u578b\u624d\u80fd\u8d4b\u503c\u7ed9short\u578b\u3002\n\u800cshort s1 = 1; s1 += 1;\u53ef\u4ee5\u6b63\u786e\u7f16\u8bd1\uff0c\u56e0\u4e3as1 += 1;\u76f8\u5f53\u4e8es1 = (short)(s1 + 1);\u5176\u4e2d\u6709\u9690\u542b\u7684\u5f3a\u5236\u7c7b\u578b\u8f6c\u6362\u3002\n6\u3001Java\u6709\u6ca1\u6709goto\uff1f\n\u7b54\uff1agoto \u662fJava\u4e2d\u7684\u4fdd\u7559\u5b57\uff0c\u5728\u76ee\u524d\u7248\u672c\u7684Java\u4e2d\u6ca1\u6709\u4f7f\u7528\u3002\uff08\u6839\u636eJames Gosling\uff08Java\u4e4b\u7236\uff09\u7f16\u5199\u7684\u300aThe Java Programming Language\u300b\u4e00\u4e66\u7684\u9644\u5f55\u4e2d\u7ed9\u51fa\u4e86\u4e00\u4e2aJava\u5173\u952e\u5b57\u5217\u8868\uff0c\u5176\u4e2d\u6709goto\u548cconst\uff0c\u4f46\u662f\u8fd9\u4e24\u4e2a\u662f\u76ee\u524d\u65e0\u6cd5\u4f7f\u7528\u7684\u5173\u952e\u5b57\uff0c\u56e0\u6b64\u6709\u4e9b\u5730\u65b9\u5c06\u5176\u79f0\u4e4b\u4e3a\u4fdd\u7559\u5b57\uff0c\u5176\u5b9e\u4fdd\u7559\u5b57\u8fd9\u4e2a\u8bcd\u5e94\u8be5\u6709\u66f4\u5e7f\u6cdb\u7684\u610f\u4e49\uff0c\u56e0\u4e3a\u719f\u6089C\u8bed\u8a00\u7684\u7a0b\u5e8f\u5458\u90fd\u77e5\u9053\uff0c\u5728\u7cfb\u7edf\u7c7b\u5e93\u4e2d\u4f7f\u7528\u8fc7\u7684\u6709\u7279\u6b8a\u610f\u4e49\u7684\u5355\u8bcd\u6216\u5355\u8bcd\u7684\u7ec4\u5408\u90fd\u88ab\u89c6\u4e3a\u4fdd\u7559\u5b57\uff09\n7\u3001int\u548cInteger\u6709\u4ec0\u4e48\u533a\u522b\uff1f\n\u7b54\uff1aJava\u662f\u4e00\u4e2a\u8fd1\u4e4e\u7eaf\u6d01\u7684\u9762\u5411\u5bf9\u8c61\u7f16\u7a0b\u8bed\u8a00\uff0c\u4f46\u662f\u4e3a\u4e86\u7f16\u7a0b\u7684\u65b9\u4fbf\u8fd8\u662f\u5f15\u5165\u4e86\u57fa\u672c\u6570\u636e\u7c7b\u578b\uff0c\u4f46\u662f\u4e3a\u4e86\u80fd\u591f\u5c06\u8fd9\u4e9b\u57fa\u672c\u6570\u636e\u7c7b\u578b\u5f53\u6210\u5bf9\u8c61\u64cd\u4f5c\uff0cJava\u4e3a\u6bcf\u4e00\u4e2a\u57fa\u672c\u6570\u636e\u7c7b\u578b\u90fd\u5f15\u5165\u4e86\u5bf9\u5e94\u7684\u5305\u88c5\u7c7b\u578b\uff08wrapper class\uff09\uff0cint\u7684\u5305\u88c5\u7c7b\u5c31\u662fInteger\uff0c\u4eceJava 5\u5f00\u59cb\u5f15\u5165\u4e86\u81ea\u52a8\u88c5\u7bb1/\u62c6\u7bb1\u673a\u5236\uff0c\u4f7f\u5f97\u4e8c\u8005\u53ef\u4ee5\u76f8\u4e92\u8f6c\u6362\u3002\nJava \u4e3a\u6bcf\u4e2a\u539f\u59cb\u7c7b\u578b\u63d0\u4f9b\u4e86\u5305\u88c5\u7c7b\u578b\uff1a\n\n\u539f\u59cb\u7c7b\u578b: boolean\uff0cchar\uff0cbyte\uff0cshort\uff0cint\uff0clong\uff0cfloat\uff0cdouble\n\u5305\u88c5\u7c7b\u578b\uff1aBoolean\uff0cCharacter\uff0cByte\uff0cShort\uff0cInteger\uff0cLong\uff0cFloat\uff0cDouble\n\n\nclass AutoUnboxingTest { \n    public static void main(String[] args) { \n        Integer a = new Integer(3); Integer b = 3; // \u5c063\u81ea\u52a8\u88c5\u7bb1\u6210Integer\u7c7b\u578b \n        int c = 3; \n        System.out.println(a == b); // false \u4e24\u4e2a\u5f15\u7528\u6ca1\u6709\u5f15\u7528\u540c\u4e00\u5bf9\u8c61 \n        System.out.println(a == c); // true a\u81ea\u52a8\u62c6\u7bb1\u6210int\u7c7b\u578b\u518d\u548cc\u6bd4\u8f83 \n    }\n}\n\u6700\u8fd1\u8fd8\u9047\u5230\u4e00\u4e2a\u9762\u8bd5\u9898\uff0c\u4e5f\u662f\u548c\u81ea\u52a8\u88c5\u7bb1\u548c\u62c6\u7bb1\u6709\u70b9\u5173\u7cfb\u7684\uff0c\u4ee3\u7801\u5982\u4e0b\u6240\u793a\uff1a\n\npublic class Test03 { \n    public static void main(String[] args) { \n        Integer f1 = 100, f2 = 100, f3 = 150, f4 = 150; \n        System.out.println(f1 == f2); \n        System.out.println(f3 == f4); \n    }\n}\n\u5982\u679c\u4e0d\u660e\u5c31\u91cc\u5f88\u5bb9\u6613\u8ba4\u4e3a\u4e24\u4e2a\u8f93\u51fa\u8981\u4e48\u90fd\u662ftrue\u8981\u4e48\u90fd\u662ffalse\u3002\u9996\u5148\u9700\u8981\u6ce8\u610f\u7684\u662ff1\u3001f2\u3001f3\u3001f4\u56db\u4e2a\u53d8\u91cf\u90fd\u662fInteger\u5bf9\u8c61\u5f15\u7528\uff0c\u6240\u4ee5\u4e0b\u9762\u7684==\u8fd0\u7b97\u6bd4\u8f83\u7684\u4e0d\u662f\u503c\u800c\u662f\u5f15\u7528\u3002\n\u88c5\u7bb1\u7684\u672c\u8d28\u662f\u4ec0\u4e48\u5462\uff1f\u5f53\u6211\u4eec\u7ed9\u4e00\u4e2aInteger\u5bf9\u8c61\u8d4b\u4e00\u4e2aint\u503c\u7684\u65f6\u5019\uff0c\u4f1a\u8c03\u7528Integer\u7c7b\u7684\u9759\u6001\u65b9\u6cd5valueOf\uff0c\u5982\u679c\u770b\u770bvalueOf\u7684\u6e90\u4ee3\u7801\u5c31\u77e5\u9053\u53d1\u751f\u4e86\u4ec0\u4e48\u3002\n\npublic static Integer valueOf(int i) {\n    if (i &gt;= IntegerCache.low &amp;&amp; i &lt;= IntegerCache.high)\n        return IntegerCache.cache[i + (-IntegerCache.low)];\n    return new Integer(i);\n}\nIntegerCache\u662fInteger\u7684\u5185\u90e8\u7c7b\uff0c\u5176\u4ee3\u7801\u5982\u4e0b\u6240\u793a\uff1a\n\n/**\n* Cache to support the object identity semantics of autoboxing for values between\n* -128 and 127 (inclusive) as required by JLS.\n*\n* The cache is initialized on first usage.  The size of the cache\n* may be controlled by the {@code -XX:AutoBoxCacheMax=&lt;size&gt;} option.\n* During VM initialization, java.lang.Integer.IntegerCache.high property\n* may be set and saved in the private system properties in the\n* sun.misc.VM class.\n*/\n\nprivate static class IntegerCache {\n    static final int low = -128;\n    static final int high;\n    static final Integer cache[];\n\n    static {\n        // high value may be configured by property\n        int h = 127;\n        String integerCacheHighPropValue =\n            sun.misc.VM.getSavedProperty(\"java.lang.Integer.IntegerCache.high\");\n        if (integerCacheHighPropValue != null) {\n            try {\n                int i = parseInt(integerCacheHighPropValue);\n                i = Math.max(i, 127);\n                // Maximum array size is Integer.MAX_VALUE\n                h = Math.min(i, Integer.MAX_VALUE - (-low) -1);\n            } catch( NumberFormatException nfe) {\n                // If the property cannot be parsed into an int, ignore it.\n            }\n        }\n        high = h;\n\n        cache = new Integer[(high - low) + 1];\n        int j = low;\n        for(int k = 0; k &lt; cache.length; k++)\n            cache[k] = new Integer(j++);\n\n        // range [-128, 127] must be interned (JLS7 5.1.7)\n        assert IntegerCache.high &gt;= 127;\n    }\n\n    private IntegerCache() {}\n}\n\u7b80\u5355\u7684\u8bf4\uff0c\u5982\u679c\u6574\u578b\u5b57\u9762\u91cf\u7684\u503c\u5728-128\u5230127\u4e4b\u95f4\uff0c\u90a3\u4e48\u4e0d\u4f1anew\u65b0\u7684Integer\u5bf9\u8c61\uff0c\u800c\u662f\u76f4\u63a5\u5f15\u7528\u5e38\u91cf\u6c60\u4e2d\u7684Integer\u5bf9\u8c61\uff0c\u6240\u4ee5\u4e0a\u9762\u7684\u9762\u8bd5\u9898\u4e2df1==f2\u7684\u7ed3\u679c\u662ftrue\uff0c\u800cf3==f4\u7684\u7ed3\u679c\u662ffalse\u3002\n\u63d0\u9192\uff1a\u8d8a\u662f\u8c8c\u4f3c\u7b80\u5355\u7684\u9762\u8bd5\u9898\u5176\u4e2d\u7684\u7384\u673a\u5c31\u8d8a\u591a\uff0c\u9700\u8981\u9762\u8bd5\u8005\u6709\u76f8\u5f53\u6df1\u539a\u7684\u529f\u529b\u3002\n8\u3001&amp;\u548c&amp;&amp;\u7684\u533a\u522b\uff1f\n\u7b54\uff1a&amp;\u8fd0\u7b97\u7b26\u6709\u4e24\u79cd\u7528\u6cd5\uff1a(1)\u6309\u4f4d\u4e0e\uff1b(2)\u903b\u8f91\u4e0e\u3002\n&amp;&amp;\u8fd0\u7b97\u7b26\u662f\u77ed\u8def\u4e0e\u8fd0\u7b97\u3002\u903b\u8f91\u4e0e\u8ddf\u77ed\u8def\u4e0e\u7684\u5dee\u522b\u662f\u975e\u5e38\u5de8\u5927\u7684\uff0c\u867d\u7136\u4e8c\u8005\u90fd\u8981\u6c42\u8fd0\u7b97\u7b26\u5de6\u53f3\u4e24\u7aef\u7684\u5e03\u5c14\u503c\u90fd\u662ftrue\u6574\u4e2a\u8868\u8fbe\u5f0f\u7684\u503c\u624d\u662ftrue\u3002\n&amp;&amp;\u4e4b\u6240\u4ee5\u79f0\u4e3a\u77ed\u8def\u8fd0\u7b97\u662f\u56e0\u4e3a\uff0c\u5982\u679c&amp;&amp;\u5de6\u8fb9\u7684\u8868\u8fbe\u5f0f\u7684\u503c\u662ffalse\uff0c\u53f3\u8fb9\u7684\u8868\u8fbe\u5f0f\u4f1a\u88ab\u76f4\u63a5\u77ed\u8def\u6389\uff0c\u4e0d\u4f1a\u8fdb\u884c\u8fd0\u7b97\u3002\n\u5f88\u591a\u65f6\u5019\u6211\u4eec\u53ef\u80fd\u90fd\u9700\u8981\u7528&amp;&amp;\u800c\u4e0d\u662f&amp;\uff0c\u4f8b\u5982\u5728\u9a8c\u8bc1\u7528\u6237\u767b\u5f55\u65f6\u5224\u5b9a\u7528\u6237\u540d\u4e0d\u662fnull\u800c\u4e14\u4e0d\u662f\u7a7a\u5b57\u7b26\u4e32\uff0c\u5e94\u5f53\u5199\u4e3a\uff1ausername != null &amp;&amp;!username.equals(\"\")\uff0c\u4e8c\u8005\u7684\u987a\u5e8f\u4e0d\u80fd\u4ea4\u6362\uff0c\u66f4\u4e0d\u80fd\u7528&amp;\u8fd0\u7b97\u7b26\uff0c\u56e0\u4e3a\u7b2c\u4e00\u4e2a\u6761\u4ef6\u5982\u679c\u4e0d\u6210\u7acb\uff0c\u6839\u672c\u4e0d\u80fd\u8fdb\u884c\u5b57\u7b26\u4e32\u7684equals\u6bd4\u8f83\uff0c\u5426\u5219\u4f1a\u4ea7\u751fNullPointerException\u5f02\u5e38\u3002\n\u6ce8\u610f\uff1a\u903b\u8f91\u6216\u8fd0\u7b97\u7b26\uff08|\uff09\u548c\u77ed\u8def\u6216\u8fd0\u7b97\u7b26\uff08||\uff09\u7684\u5dee\u522b\u4e5f\u662f\u5982\u6b64\u3002\n\u8865\u5145\uff1a\u5982\u679c\u4f60\u719f\u6089JavaScript\uff0c\u90a3\u4f60\u53ef\u80fd\u66f4\u80fd\u611f\u53d7\u5230\u77ed\u8def\u8fd0\u7b97\u7684\u5f3a\u5927\uff0c\u60f3\u6210\u4e3ajavascript\u7684\u9ad8\u624b\u5c31\u5148\u4ece\u73a9\u8f6c\u77ed\u8def\u8fd0\u7b97\u5f00\u59cb\u5427\u3002\n9\u3001\u89e3\u91ca\u5185\u5b58\u4e2d\u7684\u6808(stack)\u3001\u5806(heap)\u548c\u65b9\u6cd5\u533a(method area)\u7684\u7528\u6cd5\u3002\n\u7b54\uff1a\u901a\u5e38\u6211\u4eec\u5b9a\u4e49\u4e00\u4e2a\u57fa\u672c\u6570\u636e\u7c7b\u578b\u7684\u53d8\u91cf\uff0c\u4e00\u4e2a\u5bf9\u8c61\u7684\u5f15\u7528\uff0c\u8fd8\u6709\u5c31\u662f\u51fd\u6570\u8c03\u7528\u7684\u73b0\u573a\u4fdd\u5b58\u90fd\u4f7f\u7528JVM\u4e2d\u7684\u6808\u7a7a\u95f4\uff1b\n\u800c\u901a\u8fc7new\u5173\u952e\u5b57\u548c\u6784\u9020\u5668\u521b\u5efa\u7684\u5bf9\u8c61\u5219\u653e\u5728\u5806\u7a7a\u95f4\uff0c\u5806\u662f\u5783\u573e\u6536\u96c6\u5668\u7ba1\u7406\u7684\u4e3b\u8981\u533a\u57df\uff0c\u7531\u4e8e\u73b0\u5728\u7684\u5783\u573e\u6536\u96c6\u5668\u90fd\u91c7\u7528\u5206\u4ee3\u6536\u96c6\u7b97\u6cd5\uff0c\u6240\u4ee5\u5806\u7a7a\u95f4\u8fd8\u53ef\u4ee5\u7ec6\u5206\u4e3a\u65b0\u751f\u4ee3\u548c\u8001\u751f\u4ee3\uff0c\u518d\u5177\u4f53\u4e00\u70b9\u53ef\u4ee5\u5206\u4e3aEden\u3001Survivor\uff08\u53c8\u53ef\u5206\u4e3aFrom Survivor\u548cTo Survivor\uff09\u3001Tenured\uff1b\n\u65b9\u6cd5\u533a\u548c\u5806\u90fd\u662f\u5404\u4e2a\u7ebf\u7a0b\u5171\u4eab\u7684\u5185\u5b58\u533a\u57df\uff0c\u7528\u4e8e\u5b58\u50a8\u5df2\u7ecf\u88abJVM\u52a0\u8f7d\u7684\u7c7b\u4fe1\u606f\u3001\u5e38\u91cf\u3001\u9759\u6001\u53d8\u91cf\u3001JIT\u7f16\u8bd1\u5668\u7f16\u8bd1\u540e\u7684\u4ee3\u7801\u7b49\u6570\u636e\uff1b\n\u7a0b\u5e8f\u4e2d\u7684\u5b57\u9762\u91cf\uff08literal\uff09\u5982\u76f4\u63a5\u4e66\u5199\u7684100\u3001\"hello\"\u548c\u5e38\u91cf\u90fd\u662f\u653e\u5728\u5e38\u91cf\u6c60\u4e2d\uff0c\u5e38\u91cf\u6c60\u662f\u65b9\u6cd5\u533a\u7684\u4e00\u90e8\u5206\u3002\n\u6808\u7a7a\u95f4\u64cd\u4f5c\u8d77\u6765\u6700\u5feb\u4f46\u662f\u6808\u5f88\u5c0f\uff0c\u901a\u5e38\u5927\u91cf\u7684\u5bf9\u8c61\u90fd\u662f\u653e\u5728\u5806\u7a7a\u95f4\uff0c\u6808\u548c\u5806\u7684\u5927\u5c0f\u90fd\u53ef\u4ee5\u901a\u8fc7JVM\u7684\u542f\u52a8\u53c2\u6570\u6765\u8fdb\u884c\u8c03\u6574\uff0c\u6808\u7a7a\u95f4\u7528\u5149\u4e86\u4f1a\u5f15\u53d1StackOverflowError\uff0c\u800c\u5806\u548c\u5e38\u91cf\u6c60\u7a7a\u95f4\u4e0d\u8db3\u5219\u4f1a\u5f15\u53d1OutOfMemoryError\u3002\n\n    String str = new String(\"hello\");\n\u4e0a\u9762\u7684\u8bed\u53e5\u4e2d\u53d8\u91cfstr\u653e\u5728\u6808\u4e0a\uff0c\u7528new\u521b\u5efa\u51fa\u6765\u7684\u5b57\u7b26\u4e32\u5bf9\u8c61\u653e\u5728\u5806\u4e0a\uff0c\u800c\"hello\"\u8fd9\u4e2a\u5b57\u9762\u91cf\u662f\u653e\u5728\u65b9\u6cd5\u533a\u7684\u3002\n\u8865\u51451\uff1a\u8f83\u65b0\u7248\u672c\u7684Java\uff08\u4eceJava 6\u7684\u67d0\u4e2a\u66f4\u65b0\u5f00\u59cb\uff09\u4e2d\uff0c\u7531\u4e8eJIT\u7f16\u8bd1\u5668\u7684\u53d1\u5c55\u548c\"\u9003\u9038\u5206\u6790\"\u6280\u672f\u7684\u9010\u6e10\u6210\u719f\uff0c\u6808\u4e0a\u5206\u914d\u3001\u6807\u91cf\u66ff\u6362\u7b49\u4f18\u5316\u6280\u672f\u4f7f\u5f97\u5bf9\u8c61\u4e00\u5b9a\u5206\u914d\u5728\u5806\u4e0a\u8fd9\u4ef6\u4e8b\u60c5\u5df2\u7ecf\u53d8\u5f97\u4e0d\u90a3\u4e48\u7edd\u5bf9\u4e86\u3002\n\u8865\u51452\uff1a\u8fd0\u884c\u65f6\u5e38\u91cf\u6c60\u76f8\u5f53\u4e8eClass\u6587\u4ef6\u5e38\u91cf\u6c60\u5177\u6709\u52a8\u6001\u6027\uff0cJava\u8bed\u8a00\u5e76\u4e0d\u8981\u6c42\u5e38\u91cf\u4e00\u5b9a\u53ea\u6709\u7f16\u8bd1\u671f\u95f4\u624d\u80fd\u4ea7\u751f\uff0c\u8fd0\u884c\u671f\u95f4\u4e5f\u53ef\u4ee5\u5c06\u65b0\u7684\u5e38\u91cf\u653e\u5165\u6c60\u4e2d\uff0cString\u7c7b\u7684intern()\u65b9\u6cd5\u5c31\u662f\u8fd9\u6837\u7684\u3002\n\u770b\u770b\u4e0b\u9762\u4ee3\u7801\u7684\u6267\u884c\u7ed3\u679c\u662f\u4ec0\u4e48\u5e76\u4e14\u6bd4\u8f83\u4e00\u4e0bJava 7\u4ee5\u524d\u548c\u4ee5\u540e\u7684\u8fd0\u884c\u7ed3\u679c\u662f\u5426\u4e00\u81f4\u3002\n\nString s1 = new StringBuilder(\"go\").append(\"od\").toString();\nSystem.out.println(s1.intern() == s1);\nString s2 = new StringBuilder(\"ja\").append(\"va\").toString();\nSystem.out.println(s2.intern() == s2);\n10\u3001Math.round(11.5) \u7b49\u4e8e\u591a\u5c11\uff1fMath.round(-11.5)\u7b49\u4e8e\u591a\u5c11\uff1f\n\u7b54\uff1aMath.round(11.5)\u7684\u8fd4\u56de\u503c\u662f12\uff0cMath.round(-11.5)\u7684\u8fd4\u56de\u503c\u662f-11\u3002\u56db\u820d\u4e94\u5165\u7684\u539f\u7406\u662f\u5728\u53c2\u6570\u4e0a\u52a00.5\u7136\u540e\u8fdb\u884c\u4e0b\u53d6\u6574\u3002\n11\u3001switch \u662f\u5426\u80fd\u4f5c\u7528\u5728byte \u4e0a\uff0c\u662f\u5426\u80fd\u4f5c\u7528\u5728long \u4e0a\uff0c\u662f\u5426\u80fd\u4f5c\u7528\u5728String\u4e0a\uff1f\n\u7b54\uff1a\u5728Java 5\u4ee5\u524d\uff0cswitch(expr)\u4e2d\uff0cexpr\u53ea\u80fd\u662fbyte\u3001short\u3001char\u3001int\u3002\n\u4eceJava 5\u5f00\u59cb\uff0cJava\u4e2d\u5f15\u5165\u4e86\u679a\u4e3e\u7c7b\u578b\uff0cexpr\u4e5f\u53ef\u4ee5\u662fenum\u7c7b\u578b\uff0c\u4eceJava 7\u5f00\u59cb\uff0cexpr\u8fd8\u53ef\u4ee5\u662f\u5b57\u7b26\u4e32\uff08String\uff09\uff0c\u4f46\u662f\u957f\u6574\u578b\uff08long\uff09\u5728\u76ee\u524d\u6240\u6709\u7684\u7248\u672c\u4e2d\u90fd\u662f\u4e0d\u53ef\u4ee5\u7684\u3002\n12\u3001\u7528\u6700\u6709\u6548\u7387\u7684\u65b9\u6cd5\u8ba1\u7b972\u4e58\u4ee58\uff1f\n\u7b54\uff1a 2 &lt;&lt; 3\uff08\u5de6\u79fb3\u4f4d\u76f8\u5f53\u4e8e\u4e58\u4ee52\u76843\u6b21\u65b9\uff0c\u53f3\u79fb3\u4f4d\u76f8\u5f53\u4e8e\u9664\u4ee52\u76843\u6b21\u65b9\uff09\u3002\n\u8865\u5145\uff1a\u6211\u4eec\u4e3a\u7f16\u5199\u7684\u7c7b\u91cd\u5199hashCode\u65b9\u6cd5\u65f6\uff0c\u53ef\u80fd\u4f1a\u770b\u5230\u5982\u4e0b\u6240\u793a\u7684\u4ee3\u7801\uff0c\u5176\u5b9e\u6211\u4eec\u4e0d\u592a\u7406\u89e3\u4e3a\u4ec0\u4e48\u8981\u4f7f\u7528\u8fd9\u6837\u7684\u4e58\u6cd5\u8fd0\u7b97\u6765\u4ea7\u751f\u54c8\u5e0c\u7801\uff08\u6563\u5217\u7801\uff09\uff0c\u800c\u4e14\u4e3a\u4ec0\u4e48\u8fd9\u4e2a\u6570\u662f\u4e2a\u7d20\u6570\uff0c\u4e3a\u4ec0\u4e48\u901a\u5e38\u9009\u62e931\u8fd9\u4e2a\u6570\uff1f\n\u524d\u4e24\u4e2a\u95ee\u9898\u7684\u7b54\u6848\u4f60\u53ef\u4ee5\u81ea\u5df1\u767e\u5ea6\u4e00\u4e0b\uff0c\u9009\u62e931\u662f\u56e0\u4e3a\u53ef\u4ee5\u7528\u79fb\u4f4d\u548c\u51cf\u6cd5\u8fd0\u7b97\u6765\u4ee3\u66ff\u4e58\u6cd5\uff0c\u4ece\u800c\u5f97\u5230\u66f4\u597d\u7684\u6027\u80fd\u3002\n\u8bf4\u5230\u8fd9\u91cc\u4f60\u53ef\u80fd\u5df2\u7ecf\u60f3\u5230\u4e86\uff1a31 * num \u7b49\u4ef7\u4e8e(num &lt;&lt; 5) - num\uff0c\u5de6\u79fb5\u4f4d\u76f8\u5f53\u4e8e\u4e58\u4ee52\u76845\u6b21\u65b9\u518d\u51cf\u53bb\u81ea\u8eab\u5c31\u76f8\u5f53\u4e8e\u4e58\u4ee531\uff0c\u73b0\u5728\u7684VM\u90fd\u80fd\u81ea\u52a8\u5b8c\u6210\u8fd9\u4e2a\u4f18\u5316\u3002\n\npublic class PhoneNumber { \n    private int areaCode; \n    private String prefix; \n    private String lineNumber; \n\n    @Override \n    public int hashCode() { \n        final int prime = 31; \n        int result = 1; \n        result = prime * result + areaCode; \n        result = prime * result + ((lineNumber == null) ? 0 : lineNumber.hashCode()); \n        result = prime * result + ((prefix == null) ? 0 : prefix.hashCode()); \n        return result; \n    } \n\n    @Override \n    public boolean equals(Object obj) { \n        if (this == obj) return true; \n        if (obj == null) return false; \n        if (getClass() != obj.getClass()) {\n            return false;\n        } \n\n        PhoneNumber other = (PhoneNumber) obj; \n        if (areaCode != other.areaCode) return false; \n        if (lineNumber == null) { \n            if (other.lineNumber != null) return false; \n        } else if (!lineNumber.equals(other.lineNumber)) {\n            return false; \n        }\n\n        if (prefix == null) { \n            if (other.prefix != null) return false; \n        } else if (!prefix.equals(other.prefix)) {\n            return false; \n        }\n        return true; \n    }\n}\n13\u3001\u6570\u7ec4\u6709\u6ca1\u6709length()\u65b9\u6cd5\uff1fString\u6709\u6ca1\u6709length()\u65b9\u6cd5\uff1f\n\u7b54\uff1a\u6570\u7ec4\u6ca1\u6709length()\u65b9\u6cd5\uff0c\u6709length \u7684\u5c5e\u6027\u3002String \u6709length()\u65b9\u6cd5\u3002JavaScript\u4e2d\uff0c\u83b7\u5f97\u5b57\u7b26\u4e32\u7684\u957f\u5ea6\u662f\u901a\u8fc7length\u5c5e\u6027\u5f97\u5230\u7684\uff0c\u8fd9\u4e00\u70b9\u5bb9\u6613\u548cJava\u6df7\u6dc6\u3002\n14\u3001\u5728Java\u4e2d\uff0c\u5982\u4f55\u8df3\u51fa\u5f53\u524d\u7684\u591a\u91cd\u5d4c\u5957\u5faa\u73af\uff1f\n\u7b54\uff1a\u5728\u6700\u5916\u5c42\u5faa\u73af\u524d\u52a0\u4e00\u4e2a\u6807\u8bb0\u5982A\uff0c\u7136\u540e\u7528break A;\u53ef\u4ee5\u8df3\u51fa\u591a\u91cd\u5faa\u73af\u3002\uff08Java\u4e2d\u652f\u6301\u5e26\u6807\u7b7e\u7684break\u548ccontinue\u8bed\u53e5\uff0c\u4f5c\u7528\u6709\u70b9\u7c7b\u4f3c\u4e8eC\u548cC++\u4e2d\u7684goto\u8bed\u53e5\uff0c\u4f46\u662f\u5c31\u50cf\u8981\u907f\u514d\u4f7f\u7528goto\u4e00\u6837\uff0c\u5e94\u8be5\u907f\u514d\u4f7f\u7528\u5e26\u6807\u7b7e\u7684break\u548ccontinue\uff0c\u56e0\u4e3a\u5b83\u4e0d\u4f1a\u8ba9\u4f60\u7684\u7a0b\u5e8f\u53d8\u5f97\u66f4\u4f18\u96c5\uff0c\u5f88\u591a\u65f6\u5019\u751a\u81f3\u6709\u76f8\u53cd\u7684\u4f5c\u7528\uff0c\u6240\u4ee5\u8fd9\u79cd\u8bed\u6cd5\u5176\u5b9e\u4e0d\u77e5\u9053\u66f4\u597d\uff09\n15\u3001\u6784\u9020\u5668\uff08constructor\uff09\u662f\u5426\u53ef\u88ab\u91cd\u5199\uff08override\uff09\uff1f\n\u7b54\uff1a\u6784\u9020\u5668\u4e0d\u80fd\u88ab\u7ee7\u627f\uff0c\u56e0\u6b64\u4e0d\u80fd\u88ab\u91cd\u5199\uff0c\u4f46\u53ef\u4ee5\u88ab\u91cd\u8f7d\u3002\n16\u3001\u4e24\u4e2a\u5bf9\u8c61\u503c\u76f8\u540c(x.equals(y) == true)\uff0c\u4f46\u5374\u53ef\u6709\u4e0d\u540c\u7684hash code\uff0c\u8fd9\u53e5\u8bdd\u5bf9\u4e0d\u5bf9\uff1f\n\u7b54\uff1a\u4e0d\u5bf9\uff0c\u5982\u679c\u4e24\u4e2a\u5bf9\u8c61x\u548cy\u6ee1\u8db3x.equals(y) == true\uff0c\u5b83\u4eec\u7684\u54c8\u5e0c\u7801\uff08hash code\uff09\u5e94\u5f53\u76f8\u540c\u3002\nJava\u5bf9\u4e8eeqauls\u65b9\u6cd5\u548chashCode\u65b9\u6cd5\u662f\u8fd9\u6837\u89c4\u5b9a\u7684\uff1a\n(1)\u5982\u679c\u4e24\u4e2a\u5bf9\u8c61\u76f8\u540c\uff08equals\u65b9\u6cd5\u8fd4\u56detrue\uff09\uff0c\u90a3\u4e48\u5b83\u4eec\u7684hashCode\u503c\u4e00\u5b9a\u8981\u76f8\u540c\uff1b\n(2)\u5982\u679c\u4e24\u4e2a\u5bf9\u8c61\u7684hashCode\u76f8\u540c\uff0c\u5b83\u4eec\u5e76\u4e0d\u4e00\u5b9a\u76f8\u540c\u3002\u5f53\u7136\uff0c\u4f60\u672a\u5fc5\u8981\u6309\u7167\u8981\u6c42\u53bb\u505a\uff0c\u4f46\u662f\u5982\u679c\u4f60\u8fdd\u80cc\u4e86\u4e0a\u8ff0\u539f\u5219\u5c31\u4f1a\u53d1\u73b0\u5728\u4f7f\u7528\u5bb9\u5668\u65f6\uff0c\u76f8\u540c\u7684\u5bf9\u8c61\u53ef\u4ee5\u51fa\u73b0\u5728Set\u96c6\u5408\u4e2d\uff0c\u540c\u65f6\u589e\u52a0\u65b0\u5143\u7d20\u7684\u6548\u7387\u4f1a\u5927\u5927\u4e0b\u964d\uff08\u5bf9\u4e8e\u4f7f\u7528\u54c8\u5e0c\u5b58\u50a8\u7684\u7cfb\u7edf\uff0c\u5982\u679c\u54c8\u5e0c\u7801\u9891\u7e41\u7684\u51b2\u7a81\u5c06\u4f1a\u9020\u6210\u5b58\u53d6\u6027\u80fd\u6025\u5267\u4e0b\u964d\uff09\u3002\n\u8865\u5145\uff1a\u5173\u4e8eequals\u548chashCode\u65b9\u6cd5\uff0c\u5f88\u591aJava\u7a0b\u5e8f\u90fd\u77e5\u9053\uff0c\u4f46\u5f88\u591a\u4eba\u4e5f\u5c31\u662f\u4ec5\u4ec5\u77e5\u9053\u800c\u5df2\uff0c\u5728Joshua Bloch\u7684\u5927\u4f5c\u300aEffective Java\u300b\uff08\u5f88\u591a\u8f6f\u4ef6\u516c\u53f8\uff0c\u300aEffective Java\u300b\u3001\u300aJava\u7f16\u7a0b\u601d\u60f3\u300b\u4ee5\u53ca\u300a\u91cd\u6784\uff1a\u6539\u5584\u65e2\u6709\u4ee3\u7801\u8d28\u91cf\u300b\u662fJava\u7a0b\u5e8f\u5458\u5fc5\u770b\u4e66\u7c4d\uff0c\u5982\u679c\u4f60\u8fd8\u6ca1\u770b\u8fc7\uff0c\u90a3\u5c31\u8d76\u7d27\u53bb\u4e9a\u9a6c\u900a\u4e70\u4e00\u672c\u5427\uff09\u4e2d\u662f\u8fd9\u6837\u4ecb\u7ecdequals\u65b9\u6cd5\u7684\uff1a\u9996\u5148equals\u65b9\u6cd5\u5fc5\u987b\u6ee1\u8db3\u81ea\u53cd\u6027\uff08x.equals(x)\u5fc5\u987b\u8fd4\u56detrue\uff09\u3001\u5bf9\u79f0\u6027\uff08x.equals(y)\u8fd4\u56detrue\u65f6\uff0cy.equals(x)\u4e5f\u5fc5\u987b\u8fd4\u56detrue\uff09\u3001\u4f20\u9012\u6027\uff08x.equals(y)\u548cy.equals(z)\u90fd\u8fd4\u56detrue\u65f6\uff0cx.equals(z)\u4e5f\u5fc5\u987b\u8fd4\u56detrue\uff09\u548c\u4e00\u81f4\u6027\uff08\u5f53x\u548cy\u5f15\u7528\u7684\u5bf9\u8c61\u4fe1\u606f\u6ca1\u6709\u88ab\u4fee\u6539\u65f6\uff0c\u591a\u6b21\u8c03\u7528x.equals(y)\u5e94\u8be5\u5f97\u5230\u540c\u6837\u7684\u8fd4\u56de\u503c\uff09\uff0c\u800c\u4e14\u5bf9\u4e8e\u4efb\u4f55\u975enull\u503c\u7684\u5f15\u7528x\uff0cx.equals(null)\u5fc5\u987b\u8fd4\u56defalse\u3002\n\u5b9e\u73b0\u9ad8\u8d28\u91cf\u7684equals\u65b9\u6cd5\u7684\u8bc0\u7a8d\u5305\u62ec\uff1a\n\n\u4f7f\u7528==\u64cd\u4f5c\u7b26\u68c0\u67e5\"\u53c2\u6570\u662f\u5426\u4e3a\u8fd9\u4e2a\u5bf9\u8c61\u7684\u5f15\u7528\"\uff1b\n\n\u4f7f\u7528instanceof\u64cd\u4f5c\u7b26\u68c0\u67e5\"\u53c2\u6570\u662f\u5426\u4e3a\u6b63\u786e\u7684\u7c7b\u578b\"\uff1b\n\n\u5bf9\u4e8e\u7c7b\u4e2d\u7684\u5173\u952e\u5c5e\u6027\uff0c\u68c0\u67e5\u53c2\u6570\u4f20\u5165\u5bf9\u8c61\u7684\u5c5e\u6027\u662f\u5426\u4e0e\u4e4b\u76f8\u5339\u914d\uff1b\n\n\u7f16\u5199\u5b8cequals\u65b9\u6cd5\u540e\uff0c\u95ee\u81ea\u5df1\u5b83\u662f\u5426\u6ee1\u8db3\u5bf9\u79f0\u6027\u3001\u4f20\u9012\u6027\u3001\u4e00\u81f4\u6027\uff1b\n\n\u91cd\u5199equals\u65f6\u603b\u662f\u8981\u91cd\u5199hashCode\uff1b\n\n\u4e0d\u8981\u5c06equals\u65b9\u6cd5\u53c2\u6570\u4e2d\u7684Object\u5bf9\u8c61\u66ff\u6362\u4e3a\u5176\u4ed6\u7684\u7c7b\u578b\uff0c\u5728\u91cd\u5199\u65f6\u4e0d\u8981\u5fd8\u6389@Override\u6ce8\u89e3\u3002\n\n\n17\u3001\u662f\u5426\u53ef\u4ee5\u7ee7\u627fString\u7c7b\uff1f\n\u7b54\uff1aString \u7c7b\u662ffinal\u7c7b\uff0c\u4e0d\u53ef\u4ee5\u88ab\u7ee7\u627f\u3002\n\u8865\u5145\uff1a\u7ee7\u627fString\u672c\u8eab\u5c31\u662f\u4e00\u4e2a\u9519\u8bef\u7684\u884c\u4e3a\uff0c\u5bf9String\u7c7b\u578b\u6700\u597d\u7684\u91cd\u7528\u65b9\u5f0f\u662f\u5173\u8054\u5173\u7cfb\uff08Has-A\uff09\u548c\u4f9d\u8d56\u5173\u7cfb\uff08Use-A\uff09\u800c\u4e0d\u662f\u7ee7\u627f\u5173\u7cfb\uff08Is-A\uff09\u3002\n18\u3001\u5f53\u4e00\u4e2a\u5bf9\u8c61\u88ab\u5f53\u4f5c\u53c2\u6570\u4f20\u9012\u5230\u4e00\u4e2a\u65b9\u6cd5\u540e\uff0c\u6b64\u65b9\u6cd5\u53ef\u6539\u53d8\u8fd9\u4e2a\u5bf9\u8c61\u7684\u5c5e\u6027\uff0c\u5e76\u53ef\u8fd4\u56de\u53d8\u5316\u540e\u7684\u7ed3\u679c\uff0c\u90a3\u4e48\u8fd9\u91cc\u5230\u5e95\u662f\u503c\u4f20\u9012\u8fd8\u662f\u5f15\u7528\u4f20\u9012\uff1f\n\u7b54\uff1a\u662f\u503c\u4f20\u9012\u3002\nJava\u8bed\u8a00\u7684\u65b9\u6cd5\u8c03\u7528\u53ea\u652f\u6301\u53c2\u6570\u7684\u503c\u4f20\u9012\u3002\u5f53\u4e00\u4e2a\u5bf9\u8c61\u5b9e\u4f8b\u4f5c\u4e3a\u4e00\u4e2a\u53c2\u6570\u88ab\u4f20\u9012\u5230\u65b9\u6cd5\u4e2d\u65f6\uff0c\u53c2\u6570\u7684\u503c\u5c31\u662f\u5bf9\u8be5\u5bf9\u8c61\u7684\u5f15\u7528\u3002\u5bf9\u8c61\u7684\u5c5e\u6027\u53ef\u4ee5\u5728\u88ab\u8c03\u7528\u8fc7\u7a0b\u4e2d\u88ab\u6539\u53d8\uff0c\u4f46\u5bf9\u5bf9\u8c61\u5f15\u7528\u7684\u6539\u53d8\u662f\u4e0d\u4f1a\u5f71\u54cd\u5230\u8c03\u7528\u8005\u7684\u3002\nC++\u548cC#\u4e2d\u53ef\u4ee5\u901a\u8fc7\u4f20\u5f15\u7528\u6216\u4f20\u8f93\u51fa\u53c2\u6570\u6765\u6539\u53d8\u4f20\u5165\u7684\u53c2\u6570\u7684\u503c\u3002\u5728C#\u4e2d\u53ef\u4ee5\u7f16\u5199\u5982\u4e0b\u6240\u793a\u7684\u4ee3\u7801\uff0c\u4f46\u662f\u5728Java\u4e2d\u5374\u505a\u4e0d\u5230\u3002\n\nusing System;\nnamespace CS01 { \n    class Program { \n        public static void swap(ref int x, ref int y) { \n            int temp = x; x = y; y = temp; \n        } \n\n        public static void Main (string[] args) { \n            int a = 5, b = 10; swap (ref a, ref b); // a = 10, b = 5; \n            Console.WriteLine (\"a = {0}, b = {1}\", a, b); \n        } \n    }\n}\n\u8bf4\u660e\uff1aJava\u4e2d\u6ca1\u6709\u4f20\u5f15\u7528\u5b9e\u5728\u662f\u975e\u5e38\u7684\u4e0d\u65b9\u4fbf\uff0c\u8fd9\u4e00\u70b9\u5728Java 8\u4e2d\u4ecd\u7136\u6ca1\u6709\u5f97\u5230\u6539\u8fdb\uff0c\u6b63\u662f\u5982\u6b64\u5728Java\u7f16\u5199\u7684\u4ee3\u7801\u4e2d\u624d\u4f1a\u51fa\u73b0\u5927\u91cf\u7684Wrapper\u7c7b\uff08\u5c06\u9700\u8981\u901a\u8fc7\u65b9\u6cd5\u8c03\u7528\u4fee\u6539\u7684\u5f15\u7528\u7f6e\u4e8e\u4e00\u4e2aWrapper\u7c7b\u4e2d\uff0c\u518d\u5c06Wrapper\u5bf9\u8c61\u4f20\u5165\u65b9\u6cd5\uff09\uff0c\u8fd9\u6837\u7684\u505a\u6cd5\u53ea\u4f1a\u8ba9\u4ee3\u7801\u53d8\u5f97\u81c3\u80bf\uff0c\u5c24\u5176\u662f\u8ba9\u4eceC\u548cC++\u8f6c\u578b\u4e3aJava\u7a0b\u5e8f\u5458\u7684\u5f00\u53d1\u8005\u65e0\u6cd5\u5bb9\u5fcd\u3002\n19\u3001String\u548cStringBuilder\u3001StringBuffer\u7684\u533a\u522b\uff1f\n\u7b54\uff1aJava\u5e73\u53f0\u63d0\u4f9b\u4e86\u4e24\u79cd\u7c7b\u578b\u7684\u5b57\u7b26\u4e32\uff1aString\u548cStringBuffer/StringBuilder\uff0c\u5b83\u4eec\u53ef\u4ee5\u50a8\u5b58\u548c\u64cd\u4f5c\u5b57\u7b26\u4e32\u3002\n\u5176\u4e2dString\u662f\u53ea\u8bfb\u5b57\u7b26\u4e32\uff0c\u4e5f\u5c31\u610f\u5473\u7740String\u5f15\u7528\u7684\u5b57\u7b26\u4e32\u5185\u5bb9\u662f\u4e0d\u80fd\u88ab\u6539\u53d8\u7684\u3002\n\u800cStringBuffer/StringBuilder\u7c7b\u8868\u793a\u7684\u5b57\u7b26\u4e32\u5bf9\u8c61\u53ef\u4ee5\u76f4\u63a5\u8fdb\u884c\u4fee\u6539\u3002StringBuilder\u662fJava 5\u4e2d\u5f15\u5165\u7684\uff0c\u5b83\u548cStringBuffer\u7684\u65b9\u6cd5\u5b8c\u5168\u76f8\u540c\uff0c\u533a\u522b\u5728\u4e8e\u5b83\u662f\u5728\u5355\u7ebf\u7a0b\u73af\u5883\u4e0b\u4f7f\u7528\u7684\uff0c\u56e0\u4e3a\u5b83\u7684\u6240\u6709\u65b9\u9762\u90fd\u6ca1\u6709\u88absynchronized\u4fee\u9970\uff0c\u56e0\u6b64\u5b83\u7684\u6548\u7387\u4e5f\u6bd4StringBuffer\u8981\u9ad8\u3002\n\u9762\u8bd5\u98981 - \u4ec0\u4e48\u60c5\u51b5\u4e0b\u7528+\u8fd0\u7b97\u7b26\u8fdb\u884c\u5b57\u7b26\u4e32\u8fde\u63a5\u6bd4\u8c03\u7528StringBuffer/StringBuilder\u5bf9\u8c61\u7684append\u65b9\u6cd5\u8fde\u63a5\u5b57\u7b26\u4e32\u6027\u80fd\u66f4\u597d\uff1f\n\u9762\u8bd5\u98982 - \u8bf7\u8bf4\u51fa\u4e0b\u9762\u7a0b\u5e8f\u7684\u8f93\u51fa\u3002\n\nclass StringEqualTest {\n\n    public static void main(String[] args) {\n        String s1 = \"Programming\";\n        String s2 = new String(\"Programming\");\n        String s3 = \"Program\";\n        String s4 = \"ming\";\n        String s5 = \"Program\" + \"ming\";\n        String s6 = s3 + s4;\n        System.out.println(s1 == s2);\n        System.out.println(s1 == s5);\n        System.out.println(s1 == s6);\n        System.out.println(s1 == s6.intern());\n        System.out.println(s2 == s2.intern());\n    }\n}\n\u8865\u5145\uff1a\u89e3\u7b54\u4e0a\u9762\u7684\u9762\u8bd5\u9898\u9700\u8981\u6e05\u9664\u4e24\u70b9\uff1a\n\nString\u5bf9\u8c61\u7684intern\u65b9\u6cd5\u4f1a\u5f97\u5230\u5b57\u7b26\u4e32\u5bf9\u8c61\u5728\u5e38\u91cf\u6c60\u4e2d\u5bf9\u5e94\u7684\u7248\u672c\u7684\u5f15\u7528\uff08\u5982\u679c\u5e38\u91cf\u6c60\u4e2d\u6709\u4e00\u4e2a\u5b57\u7b26\u4e32\u4e0eString\u5bf9\u8c61\u7684equals\u7ed3\u679c\u662ftrue\uff09\uff0c\u5982\u679c\u5e38\u91cf\u6c60\u4e2d\u6ca1\u6709\u5bf9\u5e94\u7684\u5b57\u7b26\u4e32\uff0c\u5219\u8be5\u5b57\u7b26\u4e32\u5c06\u88ab\u6dfb\u52a0\u5230\u5e38\u91cf\u6c60\u4e2d\uff0c\u7136\u540e\u8fd4\u56de\u5e38\u91cf\u6c60\u4e2d\u5b57\u7b26\u4e32\u7684\u5f15\u7528\uff1b\n\n\u5b57\u7b26\u4e32\u7684+\u64cd\u4f5c\u5176\u672c\u8d28\u662f\u521b\u5efa\u4e86StringBuilder\u5bf9\u8c61\u8fdb\u884cappend\u64cd\u4f5c\uff0c\u7136\u540e\u5c06\u62fc\u63a5\u540e\u7684StringBuilder\u5bf9\u8c61\u7528toString\u65b9\u6cd5\u5904\u7406\u6210String\u5bf9\u8c61\uff0c\u8fd9\u4e00\u70b9\u53ef\u4ee5\u7528javap -c StringEqualTest.class\u547d\u4ee4\u83b7\u5f97class\u6587\u4ef6\u5bf9\u5e94\u7684JVM\u5b57\u8282\u7801\u6307\u4ee4\u5c31\u53ef\u4ee5\u770b\u51fa\u6765\u3002\n\n\n20\u3001\u91cd\u8f7d\uff08Overload\uff09\u548c\u91cd\u5199\uff08Override\uff09\u7684\u533a\u522b\u3002\u91cd\u8f7d\u7684\u65b9\u6cd5\u80fd\u5426\u6839\u636e\u8fd4\u56de\u7c7b\u578b\u8fdb\u884c\u533a\u5206\uff1f\n\u7b54\uff1a\u65b9\u6cd5\u7684\u91cd\u8f7d\u548c\u91cd\u5199\u90fd\u662f\u5b9e\u73b0\u591a\u6001\u7684\u65b9\u5f0f\uff0c\u533a\u522b\u5728\u4e8e\u524d\u8005\u5b9e\u73b0\u7684\u662f\u7f16\u8bd1\u65f6\u7684\u591a\u6001\u6027\uff0c\u800c\u540e\u8005\u5b9e\u73b0\u7684\u662f\u8fd0\u884c\u65f6\u7684\u591a\u6001\u6027\u3002\n\u91cd\u8f7d\u53d1\u751f\u5728\u4e00\u4e2a\u7c7b\u4e2d\uff0c\u540c\u540d\u7684\u65b9\u6cd5\u5982\u679c\u6709\u4e0d\u540c\u7684\u53c2\u6570\u5217\u8868\uff08\u53c2\u6570\u7c7b\u578b\u4e0d\u540c\u3001\u53c2\u6570\u4e2a\u6570\u4e0d\u540c\u6216\u8005\u4e8c\u8005\u90fd\u4e0d\u540c\uff09\u5219\u89c6\u4e3a\u91cd\u8f7d\uff1b\n\u91cd\u5199\u53d1\u751f\u5728\u5b50\u7c7b\u4e0e\u7236\u7c7b\u4e4b\u95f4\uff0c\u91cd\u5199\u8981\u6c42\u5b50\u7c7b\u88ab\u91cd\u5199\u65b9\u6cd5\u4e0e\u7236\u7c7b\u88ab\u91cd\u5199\u65b9\u6cd5\u6709\u76f8\u540c\u7684\u8fd4\u56de\u7c7b\u578b\uff0c\u6bd4\u7236\u7c7b\u88ab\u91cd\u5199\u65b9\u6cd5\u66f4\u597d\u8bbf\u95ee\uff0c\u4e0d\u80fd\u6bd4\u7236\u7c7b\u88ab\u91cd\u5199\u65b9\u6cd5\u58f0\u660e\u66f4\u591a\u7684\u5f02\u5e38\uff08\u91cc\u6c0f\u4ee3\u6362\u539f\u5219\uff09\u3002\n\u91cd\u8f7d\u5bf9\u8fd4\u56de\u7c7b\u578b\u6ca1\u6709\u7279\u6b8a\u7684\u8981\u6c42\u3002\n\u9762\u8bd5\u9898\uff1a\u534e\u4e3a\u7684\u9762\u8bd5\u9898\u4e2d\u66fe\u7ecf\u95ee\u8fc7\u8fd9\u6837\u4e00\u4e2a\u95ee\u9898 - \"\u4e3a\u4ec0\u4e48\u4e0d\u80fd\u6839\u636e\u8fd4\u56de\u7c7b\u578b\u6765\u533a\u5206\u91cd\u8f7d\"\uff0c\u5feb\u8bf4\u51fa\u4f60\u7684\u7b54\u6848\u5427\uff01\n21\u3001\u63cf\u8ff0\u4e00\u4e0bJVM\u52a0\u8f7dclass\u6587\u4ef6\u7684\u539f\u7406\u673a\u5236\uff1f\n\u7b54\uff1aJVM\u4e2d\u7c7b\u7684\u88c5\u8f7d\u662f\u7531\u7c7b\u52a0\u8f7d\u5668\uff08ClassLoader\uff09\u548c\u5b83\u7684\u5b50\u7c7b\u6765\u5b9e\u73b0\u7684\uff0cJava\u4e2d\u7684\u7c7b\u52a0\u8f7d\u5668\u662f\u4e00\u4e2a\u91cd\u8981\u7684Java\u8fd0\u884c\u65f6\u7cfb\u7edf\u7ec4\u4ef6\uff0c\u5b83\u8d1f\u8d23\u5728\u8fd0\u884c\u65f6\u67e5\u627e\u548c\u88c5\u5165\u7c7b\u6587\u4ef6\u4e2d\u7684\u7c7b\u3002\n\u7531\u4e8eJava\u7684\u8de8\u5e73\u53f0\u6027\uff0c\u7ecf\u8fc7\u7f16\u8bd1\u7684Java\u6e90\u7a0b\u5e8f\u5e76\u4e0d\u662f\u4e00\u4e2a\u53ef\u6267\u884c\u7a0b\u5e8f\uff0c\u800c\u662f\u4e00\u4e2a\u6216\u591a\u4e2a\u7c7b\u6587\u4ef6\u3002\u5f53Java\u7a0b\u5e8f\u9700\u8981\u4f7f\u7528\u67d0\u4e2a\u7c7b\u65f6\uff0cJVM\u4f1a\u786e\u4fdd\u8fd9\u4e2a\u7c7b\u5df2\u7ecf\u88ab\u52a0\u8f7d\u3001\u8fde\u63a5\uff08\u9a8c\u8bc1\u3001\u51c6\u5907\u548c\u89e3\u6790\uff09\u548c\u521d\u59cb\u5316\u3002\u7c7b\u7684\u52a0\u8f7d\u662f\u6307\u628a\u7c7b\u7684.class\u6587\u4ef6\u4e2d\u7684\u6570\u636e\u8bfb\u5165\u5230\u5185\u5b58\u4e2d\uff0c\u901a\u5e38\u662f\u521b\u5efa\u4e00\u4e2a\u5b57\u8282\u6570\u7ec4\u8bfb\u5165.class\u6587\u4ef6\uff0c\u7136\u540e\u4ea7\u751f\u4e0e\u6240\u52a0\u8f7d\u7c7b\u5bf9\u5e94\u7684Class\u5bf9\u8c61\u3002\u52a0\u8f7d\u5b8c\u6210\u540e\uff0cClass\u5bf9\u8c61\u8fd8\u4e0d\u5b8c\u6574\uff0c\u6240\u4ee5\u6b64\u65f6\u7684\u7c7b\u8fd8\u4e0d\u53ef\u7528\u3002\u5f53\u7c7b\u88ab\u52a0\u8f7d\u540e\u5c31\u8fdb\u5165\u8fde\u63a5\u9636\u6bb5\uff0c\u8fd9\u4e00\u9636\u6bb5\u5305\u62ec\u9a8c\u8bc1\u3001\u51c6\u5907\uff08\u4e3a\u9759\u6001\u53d8\u91cf\u5206\u914d\u5185\u5b58\u5e76\u8bbe\u7f6e\u9ed8\u8ba4\u7684\u521d\u59cb\u503c\uff09\u548c\u89e3\u6790\uff08\u5c06\u7b26\u53f7\u5f15\u7528\u66ff\u6362\u4e3a\u76f4\u63a5\u5f15\u7528\uff09\u4e09\u4e2a\u6b65\u9aa4\u3002\n\u6700\u540eJVM\u5bf9\u7c7b\u8fdb\u884c\u521d\u59cb\u5316\uff0c\u5305\u62ec\uff1a1)\u5982\u679c\u7c7b\u5b58\u5728\u76f4\u63a5\u7684\u7236\u7c7b\u5e76\u4e14\u8fd9\u4e2a\u7c7b\u8fd8\u6ca1\u6709\u88ab\u521d\u59cb\u5316\uff0c\u90a3\u4e48\u5c31\u5148\u521d\u59cb\u5316\u7236\u7c7b\uff1b2)\u5982\u679c\u7c7b\u4e2d\u5b58\u5728\u521d\u59cb\u5316\u8bed\u53e5\uff0c\u5c31\u4f9d\u6b21\u6267\u884c\u8fd9\u4e9b\u521d\u59cb\u5316\u8bed\u53e5\u3002\u7c7b\u7684\u52a0\u8f7d\u662f\u7531\u7c7b\u52a0\u8f7d\u5668\u5b8c\u6210\u7684\uff0c\u7c7b\u52a0\u8f7d\u5668\u5305\u62ec\uff1a\u6839\u52a0\u8f7d\u5668\uff08BootStrap\uff09\u3001\u6269\u5c55\u52a0\u8f7d\u5668\uff08Extension\uff09\u3001\u7cfb\u7edf\u52a0\u8f7d\u5668\uff08System\uff09\u548c\u7528\u6237\u81ea\u5b9a\u4e49\u7c7b\u52a0\u8f7d\u5668\uff08java.lang.ClassLoader\u7684\u5b50\u7c7b\uff09\u3002\u4eceJava 2\uff08JDK 1.2\uff09\u5f00\u59cb\uff0c\u7c7b\u52a0\u8f7d\u8fc7\u7a0b\u91c7\u53d6\u4e86\u7236\u4eb2\u59d4\u6258\u673a\u5236\uff08PDM\uff09\u3002PDM\u66f4\u597d\u7684\u4fdd\u8bc1\u4e86Java\u5e73\u53f0\u7684\u5b89\u5168\u6027\uff0c\u5728\u8be5\u673a\u5236\u4e2d\uff0cJVM\u81ea\u5e26\u7684Bootstrap\u662f\u6839\u52a0\u8f7d\u5668\uff0c\u5176\u4ed6\u7684\u52a0\u8f7d\u5668\u90fd\u6709\u4e14\u4ec5\u6709\u4e00\u4e2a\u7236\u7c7b\u52a0\u8f7d\u5668\u3002\u7c7b\u7684\u52a0\u8f7d\u9996\u5148\u8bf7\u6c42\u7236\u7c7b\u52a0\u8f7d\u5668\u52a0\u8f7d\uff0c\u7236\u7c7b\u52a0\u8f7d\u5668\u65e0\u80fd\u4e3a\u529b\u65f6\u624d\u7531\u5176\u5b50\u7c7b\u52a0\u8f7d\u5668\u81ea\u884c\u52a0\u8f7d\u3002JVM\u4e0d\u4f1a\u5411Java\u7a0b\u5e8f\u63d0\u4f9b\u5bf9Bootstrap\u7684\u5f15\u7528\u3002\n\u4e0b\u9762\u662f\u5173\u4e8e\u51e0\u4e2a\u7c7b\u52a0\u8f7d\u5668\u7684\u8bf4\u660e\uff1a\nBootstrap\uff1a\u4e00\u822c\u7528\u672c\u5730\u4ee3\u7801\u5b9e\u73b0\uff0c\u8d1f\u8d23\u52a0\u8f7dJVM\u57fa\u7840\u6838\u5fc3\u7c7b\u5e93\uff08rt.jar\uff09\uff1b\nExtension\uff1a\u4ecejava.ext.dirs\u7cfb\u7edf\u5c5e\u6027\u6240\u6307\u5b9a\u7684\u76ee\u5f55\u4e2d\u52a0\u8f7d\u7c7b\u5e93\uff0c\u5b83\u7684\u7236\u52a0\u8f7d\u5668\u662fBootstrap\uff1b\nSystem\uff1a\u53c8\u53eb\u5e94\u7528\u7c7b\u52a0\u8f7d\u5668\uff0c\u5176\u7236\u7c7b\u662fExtension\u3002\u5b83\u662f\u5e94\u7528\u6700\u5e7f\u6cdb\u7684\u7c7b\u52a0\u8f7d\u5668\u3002\u5b83\u4ece\u73af\u5883\u53d8\u91cfclasspath\u6216\u8005\u7cfb\u7edf\u5c5e\u6027java.class.path\u6240\u6307\u5b9a\u7684\u76ee\u5f55\u4e2d\u8bb0\u8f7d\u7c7b\uff0c\u662f\u7528\u6237\u81ea\u5b9a\u4e49\u52a0\u8f7d\u5668\u7684\u9ed8\u8ba4\u7236\u52a0\u8f7d\u5668\u3002\n22\u3001char \u578b\u53d8\u91cf\u4e2d\u80fd\u4e0d\u80fd\u5b58\u8d2e\u4e00\u4e2a\u4e2d\u6587\u6c49\u5b57\uff0c\u4e3a\u4ec0\u4e48\uff1f\n\u7b54\uff1achar\u7c7b\u578b\u53ef\u4ee5\u5b58\u50a8\u4e00\u4e2a\u4e2d\u6587\u6c49\u5b57\uff0c\u56e0\u4e3aJava\u4e2d\u4f7f\u7528\u7684\u7f16\u7801\u662fUnicode\uff08\u4e0d\u9009\u62e9\u4efb\u4f55\u7279\u5b9a\u7684\u7f16\u7801\uff0c\u76f4\u63a5\u4f7f\u7528\u5b57\u7b26\u5728\u5b57\u7b26\u96c6\u4e2d\u7684\u7f16\u53f7\uff0c\u8fd9\u662f\u7edf\u4e00\u7684\u552f\u4e00\u65b9\u6cd5\uff09\uff0c\u4e00\u4e2achar\u7c7b\u578b\u53602\u4e2a\u5b57\u8282\uff0816\u6bd4\u7279\uff09\uff0c\u6240\u4ee5\u653e\u4e00\u4e2a\u4e2d\u6587\u662f\u6ca1\u95ee\u9898\u7684\u3002\n\u8865\u5145\uff1a\u4f7f\u7528Unicode\u610f\u5473\u7740\u5b57\u7b26\u5728JVM\u5185\u90e8\u548c\u5916\u90e8\u6709\u4e0d\u540c\u7684\u8868\u73b0\u5f62\u5f0f\uff0c\u5728JVM\u5185\u90e8\u90fd\u662fUnicode\uff0c\u5f53\u8fd9\u4e2a\u5b57\u7b26\u88ab\u4eceJVM\u5185\u90e8\u8f6c\u79fb\u5230\u5916\u90e8\u65f6\uff08\u4f8b\u5982\u5b58\u5165\u6587\u4ef6\u7cfb\u7edf\u4e2d\uff09\uff0c\u9700\u8981\u8fdb\u884c\u7f16\u7801\u8f6c\u6362\u3002\u6240\u4ee5Java\u4e2d\u6709\u5b57\u8282\u6d41\u548c\u5b57\u7b26\u6d41\uff0c\u4ee5\u53ca\u5728\u5b57\u7b26\u6d41\u548c\u5b57\u8282\u6d41\u4e4b\u95f4\u8fdb\u884c\u8f6c\u6362\u7684\u8f6c\u6362\u6d41\uff0c\u5982InputStreamReader\u548cOutputStreamReader\uff0c\u8fd9\u4e24\u4e2a\u7c7b\u662f\u5b57\u8282\u6d41\u548c\u5b57\u7b26\u6d41\u4e4b\u95f4\u7684\u9002\u914d\u5668\u7c7b\uff0c\u627f\u62c5\u4e86\u7f16\u7801\u8f6c\u6362\u7684\u4efb\u52a1\uff1b\u5bf9\u4e8eC\u7a0b\u5e8f\u5458\u6765\u8bf4\uff0c\u8981\u5b8c\u6210\u8fd9\u6837\u7684\u7f16\u7801\u8f6c\u6362\u6050\u6015\u8981\u4f9d\u8d56\u4e8eunion\uff08\u8054\u5408\u4f53/\u5171\u7528\u4f53\uff09\u5171\u4eab\u5185\u5b58\u7684\u7279\u5f81\u6765\u5b9e\u73b0\u4e86\u3002\n23\u3001\u62bd\u8c61\u7c7b\uff08abstract class\uff09\u548c\u63a5\u53e3\uff08interface\uff09\u6709\u4ec0\u4e48\u5f02\u540c\uff1f\n\u7b54\uff1a\u62bd\u8c61\u7c7b\u548c\u63a5\u53e3\u90fd\u4e0d\u80fd\u591f\u5b9e\u4f8b\u5316\uff0c\u4f46\u53ef\u4ee5\u5b9a\u4e49\u62bd\u8c61\u7c7b\u548c\u63a5\u53e3\u7c7b\u578b\u7684\u5f15\u7528\u3002\u4e00\u4e2a\u7c7b\u5982\u679c\u7ee7\u627f\u4e86\u67d0\u4e2a\u62bd\u8c61\u7c7b\u6216\u8005\u5b9e\u73b0\u4e86\u67d0\u4e2a\u63a5\u53e3\u90fd\u9700\u8981\u5bf9\u5176\u4e2d\u7684\u62bd\u8c61\u65b9\u6cd5\u5168\u90e8\u8fdb\u884c\u5b9e\u73b0\uff0c\u5426\u5219\u8be5\u7c7b\u4ecd\u7136\u9700\u8981\u88ab\u58f0\u660e\u4e3a\u62bd\u8c61\u7c7b\u3002\n\u63a5\u53e3\u6bd4\u62bd\u8c61\u7c7b\u66f4\u52a0\u62bd\u8c61\uff0c\u56e0\u4e3a\u62bd\u8c61\u7c7b\u4e2d\u53ef\u4ee5\u5b9a\u4e49\u6784\u9020\u5668\uff0c\u53ef\u4ee5\u6709\u62bd\u8c61\u65b9\u6cd5\u548c\u5177\u4f53\u65b9\u6cd5\uff0c\u800c\u63a5\u53e3\u4e2d\u4e0d\u80fd\u5b9a\u4e49\u6784\u9020\u5668\u800c\u4e14\u5176\u4e2d\u7684\u65b9\u6cd5\u5168\u90e8\u90fd\u662f\u62bd\u8c61\u65b9\u6cd5\u3002\n\u62bd\u8c61\u7c7b\u4e2d\u7684\u6210\u5458\u53ef\u4ee5\u662fprivate\u3001\u9ed8\u8ba4\u3001protected\u3001public\u7684\uff0c\u800c\u63a5\u53e3\u4e2d\u7684\u6210\u5458\u5168\u90fd\u662fpublic\u7684\u3002\u62bd\u8c61\u7c7b\u4e2d\u53ef\u4ee5\u5b9a\u4e49\u6210\u5458\u53d8\u91cf\uff0c\u800c\u63a5\u53e3\u4e2d\u5b9a\u4e49\u7684\u6210\u5458\u53d8\u91cf\u5b9e\u9645\u4e0a\u90fd\u662f\u5e38\u91cf\u3002\n\u6709\u62bd\u8c61\u65b9\u6cd5\u7684\u7c7b\u5fc5\u987b\u88ab\u58f0\u660e\u4e3a\u62bd\u8c61\u7c7b\uff0c\u800c\u62bd\u8c61\u7c7b\u672a\u5fc5\u8981\u6709\u62bd\u8c61\u65b9\u6cd5\u3002\n24\u3001\u9759\u6001\u5d4c\u5957\u7c7b(Static Nested Class)\u548c\u5185\u90e8\u7c7b\uff08Inner Class\uff09\u7684\u4e0d\u540c\uff1f\n\u7b54\uff1aStatic Nested Class\u662f\u88ab\u58f0\u660e\u4e3a\u9759\u6001\uff08static\uff09\u7684\u5185\u90e8\u7c7b\uff0c\u5b83\u53ef\u4ee5\u4e0d\u4f9d\u8d56\u4e8e\u5916\u90e8\u7c7b\u5b9e\u4f8b\u88ab\u5b9e\u4f8b\u5316\u3002\u800c\u901a\u5e38\u7684\u5185\u90e8\u7c7b\u9700\u8981\u5728\u5916\u90e8\u7c7b\u5b9e\u4f8b\u5316\u540e\u624d\u80fd\u5b9e\u4f8b\u5316\uff0c\u5176\u8bed\u6cd5\u770b\u8d77\u6765\u633a\u8be1\u5f02\u7684\uff0c\u5982\u4e0b\u6240\u793a\u3002\n\n/**\n    * \u6251\u514b\u7c7b\uff08\u4e00\u526f\u6251\u514b\uff09\n    * @author \u9a86\u660a\n    *\n    */\npublic class Poker {\n    private static String[] suites = {\"\u9ed1\u6843\", \"\u7ea2\u6843\", \"\u8349\u82b1\", \"\u65b9\u5757\"};\n    private static int[] faces = {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13};\n\n    private Card[] cards;\n\n    /**\n        * \u6784\u9020\u5668\n        * \n        */\n    public Poker() {\n        cards = new Card[52];\n        for(int i = 0; i &lt; suites.length; i++) {\n            for(int j = 0; j &lt; faces.length; j++) {\n                cards[i * 13 + j] = new Card(suites[i], faces[j]);\n            }\n        }\n    }\n\n    /**\n        * \u6d17\u724c \uff08\u968f\u673a\u4e71\u5e8f\uff09\n        * \n        */\n    public void shuffle() {\n        for(int i = 0, len = cards.length; i &lt; len; i++) {\n            int index = (int) (Math.random() * len);\n            Card temp = cards[index];\n            cards[index] = cards[i];\n            cards[i] = temp;\n        }\n    }\n\n    /**\n        * \u53d1\u724c\n        * @param index \u53d1\u724c\u7684\u4f4d\u7f6e\n        * \n        */\n    public Card deal(int index) {\n        return cards[index];\n    }\n\n    /**\n        * \u5361\u7247\u7c7b\uff08\u4e00\u5f20\u6251\u514b\uff09\n        * [\u5185\u90e8\u7c7b]\n        * @author \u9a86\u660a\n        *\n        */\n    public class Card {\n        private String suite;   // \u82b1\u8272\n        private int face;       // \u70b9\u6570\n\n        public Card(String suite, int face) {\n            this.suite = suite;\n            this.face = face;\n        }\n\n        @Override\n        public String toString() {\n            String faceStr = \"\";\n            switch(face) {\n            case 1: faceStr = \"A\"; break;\n            case 11: faceStr = \"J\"; break;\n            case 12: faceStr = \"Q\"; break;\n            case 13: faceStr = \"K\"; break;\n            default: faceStr = String.valueOf(face);\n            }\n            return suite + faceStr;\n        }\n    }\n}\n\u6d4b\u8bd5\u4ee3\u7801\uff1a\n\nclass PokerTest {\n\n    public static void main(String[] args) {\n        Poker poker = new Poker();\n        poker.shuffle();                // \u6d17\u724c\n        Poker.Card c1 = poker.deal(0);  // \u53d1\u7b2c\u4e00\u5f20\u724c\n        // \u5bf9\u4e8e\u975e\u9759\u6001\u5185\u90e8\u7c7bCard\n        // \u53ea\u6709\u901a\u8fc7\u5176\u5916\u90e8\u7c7bPoker\u5bf9\u8c61\u624d\u80fd\u521b\u5efaCard\u5bf9\u8c61\n        Poker.Card c2 = poker.new Card(\"\u7ea2\u5fc3\", 1);    // \u81ea\u5df1\u521b\u5efa\u4e00\u5f20\u724c\n\n        System.out.println(c1);     // \u6d17\u724c\u540e\u7684\u7b2c\u4e00\u5f20\n        System.out.println(c2);     // \u6253\u5370: \u7ea2\u5fc3A\n    }\n}\n\u9762\u8bd5\u9898 - \u4e0b\u9762\u7684\u4ee3\u7801\u54ea\u4e9b\u5730\u65b9\u4f1a\u4ea7\u751f\u7f16\u8bd1\u9519\u8bef\uff1f\n\nclass Outer {\n\n    class Inner {}\n\n    public static void foo() { new Inner(); }\n\n    public void bar() { new Inner(); }\n\n    public static void main(String[] args) {\n        new Inner();\n    }\n}\n\u6ce8\u610f\uff1aJava\u4e2d\u975e\u9759\u6001\u5185\u90e8\u7c7b\u5bf9\u8c61\u7684\u521b\u5efa\u8981\u4f9d\u8d56\u5176\u5916\u90e8\u7c7b\u5bf9\u8c61\uff0c\u4e0a\u9762\u7684\u9762\u8bd5\u9898\u4e2dfoo\u548cmain\u65b9\u6cd5\u90fd\u662f\u9759\u6001\u65b9\u6cd5\uff0c\u9759\u6001\u65b9\u6cd5\u4e2d\u6ca1\u6709this\uff0c\u4e5f\u5c31\u662f\u8bf4\u6ca1\u6709\u6240\u8c13\u7684\u5916\u90e8\u7c7b\u5bf9\u8c61\uff0c\u56e0\u6b64\u65e0\u6cd5\u521b\u5efa\u5185\u90e8\u7c7b\u5bf9\u8c61\uff0c\u5982\u679c\u8981\u5728\u9759\u6001\u65b9\u6cd5\u4e2d\u521b\u5efa\u5185\u90e8\u7c7b\u5bf9\u8c61\uff0c\u53ef\u4ee5\u8fd9\u6837\u505a\uff1a\n\n    new Outer().new Inner();\n`\n25\u3001Java \u4e2d\u4f1a\u5b58\u5728\u5185\u5b58\u6cc4\u6f0f\u5417\uff0c\u8bf7\u7b80\u5355\u63cf\u8ff0\u3002\n\u7b54\uff1a\u7406\u8bba\u4e0aJava\u56e0\u4e3a\u6709\u5783\u573e\u56de\u6536\u673a\u5236\uff08GC\uff09\u4e0d\u4f1a\u5b58\u5728\u5185\u5b58\u6cc4\u9732\u95ee\u9898\uff08\u8fd9\u4e5f\u662fJava\u88ab\u5e7f\u6cdb\u4f7f\u7528\u4e8e\u670d\u52a1\u5668\u7aef\u7f16\u7a0b\u7684\u4e00\u4e2a\u91cd\u8981\u539f\u56e0\uff09\uff1b\u7136\u800c\u5728\u5b9e\u9645\u5f00\u53d1\u4e2d\uff0c\u53ef\u80fd\u4f1a\u5b58\u5728\u65e0\u7528\u4f46\u53ef\u8fbe\u7684\u5bf9\u8c61\uff0c\u8fd9\u4e9b\u5bf9\u8c61\u4e0d\u80fd\u88abGC\u56de\u6536\uff0c\u56e0\u6b64\u4e5f\u4f1a\u5bfc\u81f4\u5185\u5b58\u6cc4\u9732\u7684\u53d1\u751f\u3002\u4f8b\u5982hibernate\u7684Session\uff08\u4e00\u7ea7\u7f13\u5b58\uff09\u4e2d\u7684\u5bf9\u8c61\u5c5e\u4e8e\u6301\u4e45\u6001\uff0c\u5783\u573e\u56de\u6536\u5668\u662f\u4e0d\u4f1a\u56de\u6536\u8fd9\u4e9b\u5bf9\u8c61\u7684\uff0c\u7136\u800c\u8fd9\u4e9b\u5bf9\u8c61\u4e2d\u53ef\u80fd\u5b58\u5728\u65e0\u7528\u7684\u5783\u573e\u5bf9\u8c61\uff0c\u5982\u679c\u4e0d\u53ca\u65f6\u5173\u95ed\uff08close\uff09\u6216\u6e05\u7a7a\uff08flush\uff09\u4e00\u7ea7\u7f13\u5b58\u5c31\u53ef\u80fd\u5bfc\u81f4\u5185\u5b58\u6cc4\u9732\u3002\n\u4e0b\u9762\u4f8b\u5b50\u4e2d\u7684\u4ee3\u7801\u4e5f\u4f1a\u5bfc\u81f4\u5185\u5b58\u6cc4\u9732\u3002\n\n    import java.util.Arrays;\n    import java.util.EmptyStackException;\n\n    public class MyStack&lt;T&gt; {\n        private T[] elements;\n        private int size = 0;\n\n        private static final int INIT_CAPACITY = 16;\n\n        public MyStack() {\n            elements = (T[]) new Object[INIT_CAPACITY];\n        }\n\n        public void push(T elem) {\n            ensureCapacity();\n            elements[size++] = elem;\n        }\n\n        public T pop() {\n            if(size == 0) \n                throw new EmptyStackException();\n            return elements[--size];\n        }\n\n        private void ensureCapacity() {\n            if(elements.length == size) {\n                elements = Arrays.copyOf(elements, 2 * size + 1);\n            }\n        }\n    }\n\u4e0a\u9762\u7684\u4ee3\u7801\u5b9e\u73b0\u4e86\u4e00\u4e2a\u6808\uff08\u5148\u8fdb\u540e\u51fa\uff08FILO\uff09\uff09\u7ed3\u6784\uff0c\u4e4d\u770b\u4e4b\u4e0b\u4f3c\u4e4e\u6ca1\u6709\u4ec0\u4e48\u660e\u663e\u7684\u95ee\u9898\uff0c\u5b83\u751a\u81f3\u53ef\u4ee5\u901a\u8fc7\u4f60\u7f16\u5199\u7684\u5404\u79cd\u5355\u5143\u6d4b\u8bd5\u3002\u7136\u800c\u5176\u4e2d\u7684pop\u65b9\u6cd5\u5374\u5b58\u5728\u5185\u5b58\u6cc4\u9732\u7684\u95ee\u9898\uff0c\u5f53\u6211\u4eec\u7528pop\u65b9\u6cd5\u5f39\u51fa\u6808\u4e2d\u7684\u5bf9\u8c61\u65f6\uff0c\u8be5\u5bf9\u8c61\u4e0d\u4f1a\u88ab\u5f53\u4f5c\u5783\u573e\u56de\u6536\uff0c\u5373\u4f7f\u4f7f\u7528\u6808\u7684\u7a0b\u5e8f\u4e0d\u518d\u5f15\u7528\u8fd9\u4e9b\u5bf9\u8c61\uff0c\u56e0\u4e3a\u6808\u5185\u90e8\u7ef4\u62a4\u7740\u5bf9\u8fd9\u4e9b\u5bf9\u8c61\u7684\u8fc7\u671f\u5f15\u7528\uff08obsolete reference\uff09\u3002\u5728\u652f\u6301\u5783\u573e\u56de\u6536\u7684\u8bed\u8a00\u4e2d\uff0c\u5185\u5b58\u6cc4\u9732\u662f\u5f88\u9690\u853d\u7684\uff0c\u8fd9\u79cd\u5185\u5b58\u6cc4\u9732\u5176\u5b9e\u5c31\u662f\u65e0\u610f\u8bc6\u7684\u5bf9\u8c61\u4fdd\u6301\u3002\u5982\u679c\u4e00\u4e2a\u5bf9\u8c61\u5f15\u7528\u88ab\u65e0\u610f\u8bc6\u7684\u4fdd\u7559\u8d77\u6765\u4e86\uff0c\u90a3\u4e48\u5783\u573e\u56de\u6536\u5668\u4e0d\u4f1a\u5904\u7406\u8fd9\u4e2a\u5bf9\u8c61\uff0c\u4e5f\u4e0d\u4f1a\u5904\u7406\u8be5\u5bf9\u8c61\u5f15\u7528\u7684\u5176\u4ed6\u5bf9\u8c61\uff0c\u5373\u4f7f\u8fd9\u6837\u7684\u5bf9\u8c61\u53ea\u6709\u5c11\u6570\u51e0\u4e2a\uff0c\u4e5f\u53ef\u80fd\u4f1a\u5bfc\u81f4\u5f88\u591a\u7684\u5bf9\u8c61\u88ab\u6392\u9664\u5728\u5783\u573e\u56de\u6536\u4e4b\u5916\uff0c\u4ece\u800c\u5bf9\u6027\u80fd\u9020\u6210\u91cd\u5927\u5f71\u54cd\uff0c\u6781\u7aef\u60c5\u51b5\u4e0b\u4f1a\u5f15\u53d1Disk Paging\uff08\u7269\u7406\u5185\u5b58\u4e0e\u786c\u76d8\u7684\u865a\u62df\u5185\u5b58\u4ea4\u6362\u6570\u636e\uff09\uff0c\u751a\u81f3\u9020\u6210OutOfMemoryError\u3002\n26\u3001\u62bd\u8c61\u7684\uff08abstract\uff09\u65b9\u6cd5\u662f\u5426\u53ef\u540c\u65f6\u662f\u9759\u6001\u7684\uff08static\uff09,\u662f\u5426\u53ef\u540c\u65f6\u662f\u672c\u5730\u65b9\u6cd5\uff08native\uff09\uff0c\u662f\u5426\u53ef\u540c\u65f6\u88absynchronized\u4fee\u9970\uff1f\n\u7b54\uff1a\u90fd\u4e0d\u80fd\u3002\u62bd\u8c61\u65b9\u6cd5\u9700\u8981\u5b50\u7c7b\u91cd\u5199\uff0c\u800c\u9759\u6001\u7684\u65b9\u6cd5\u662f\u65e0\u6cd5\u88ab\u91cd\u5199\u7684\uff0c\u56e0\u6b64\u4e8c\u8005\u662f\u77db\u76fe\u7684\u3002\n\u672c\u5730\u65b9\u6cd5\u662f\u7531\u672c\u5730\u4ee3\u7801\uff08\u5982C\u4ee3\u7801\uff09\u5b9e\u73b0\u7684\u65b9\u6cd5\uff0c\u800c\u62bd\u8c61\u65b9\u6cd5\u662f\u6ca1\u6709\u5b9e\u73b0\u7684\uff0c\u4e5f\u662f\u77db\u76fe\u7684\u3002\nsynchronized\u548c\u65b9\u6cd5\u7684\u5b9e\u73b0\u7ec6\u8282\u6709\u5173\uff0c\u62bd\u8c61\u65b9\u6cd5\u4e0d\u6d89\u53ca\u5b9e\u73b0\u7ec6\u8282\uff0c\u56e0\u6b64\u4e5f\u662f\u76f8\u4e92\u77db\u76fe\u7684\u3002\n27\u3001\u9610\u8ff0\u9759\u6001\u53d8\u91cf\u548c\u5b9e\u4f8b\u53d8\u91cf\u7684\u533a\u522b\u3002\n\u7b54\uff1a\u9759\u6001\u53d8\u91cf\u662f\u88abstatic\u4fee\u9970\u7b26\u4fee\u9970\u7684\u53d8\u91cf\uff0c\u4e5f\u79f0\u4e3a\u7c7b\u53d8\u91cf\uff0c\u5b83\u5c5e\u4e8e\u7c7b\uff0c\u4e0d\u5c5e\u4e8e\u7c7b\u7684\u4efb\u4f55\u4e00\u4e2a\u5bf9\u8c61\uff0c\u4e00\u4e2a\u7c7b\u4e0d\u7ba1\u521b\u5efa\u591a\u5c11\u4e2a\u5bf9\u8c61\uff0c\u9759\u6001\u53d8\u91cf\u5728\u5185\u5b58\u4e2d\u6709\u4e14\u4ec5\u6709\u4e00\u4e2a\u62f7\u8d1d\uff1b\u5b9e\u4f8b\u53d8\u91cf\u5fc5\u987b\u4f9d\u5b58\u4e8e\u67d0\u4e00\u5b9e\u4f8b\uff0c\u9700\u8981\u5148\u521b\u5efa\u5bf9\u8c61\u7136\u540e\u901a\u8fc7\u5bf9\u8c61\u624d\u80fd\u8bbf\u95ee\u5230\u5b83\u3002\u9759\u6001\u53d8\u91cf\u53ef\u4ee5\u5b9e\u73b0\u8ba9\u591a\u4e2a\u5bf9\u8c61\u5171\u4eab\u5185\u5b58\u3002\n\u8865\u5145\uff1a\u5728Java\u5f00\u53d1\u4e2d\uff0c\u4e0a\u4e0b\u6587\u7c7b\u548c\u5de5\u5177\u7c7b\u4e2d\u901a\u5e38\u4f1a\u6709\u5927\u91cf\u7684\u9759\u6001\u6210\u5458\u3002\n28\u3001\u662f\u5426\u53ef\u4ee5\u4ece\u4e00\u4e2a\u9759\u6001\uff08static\uff09\u65b9\u6cd5\u5185\u90e8\u53d1\u51fa\u5bf9\u975e\u9759\u6001\uff08non-static\uff09\u65b9\u6cd5\u7684\u8c03\u7528\uff1f\n\u7b54\uff1a\u4e0d\u53ef\u4ee5\uff0c\u9759\u6001\u65b9\u6cd5\u53ea\u80fd\u8bbf\u95ee\u9759\u6001\u6210\u5458\uff0c\u56e0\u4e3a\u975e\u9759\u6001\u65b9\u6cd5\u7684\u8c03\u7528\u8981\u5148\u521b\u5efa\u5bf9\u8c61\uff0c\u5728\u8c03\u7528\u9759\u6001\u65b9\u6cd5\u65f6\u53ef\u80fd\u5bf9\u8c61\u5e76\u6ca1\u6709\u88ab\u521d\u59cb\u5316\u3002\n29\u3001\u5982\u4f55\u5b9e\u73b0\u5bf9\u8c61\u514b\u9686\uff1f\n\u7b54\uff1a\u6709\u4e24\u79cd\u65b9\u5f0f\uff1a\u2003\u2003\n1). \u5b9e\u73b0Cloneable\u63a5\u53e3\u5e76\u91cd\u5199Object\u7c7b\u4e2d\u7684clone()\u65b9\u6cd5\uff1b\u2003\u2003\n2). \u5b9e\u73b0Serializable\u63a5\u53e3\uff0c\u901a\u8fc7\u5bf9\u8c61\u7684\u5e8f\u5217\u5316\u548c\u53cd\u5e8f\u5217\u5316\u5b9e\u73b0\u514b\u9686\uff0c\u53ef\u4ee5\u5b9e\u73b0\u771f\u6b63\u7684\u6df1\u5ea6\u514b\u9686\uff0c\u4ee3\u7801\u5982\u4e0b\u3002\n\n    import java.io.ByteArrayInputStream;\n    import java.io.ByteArrayOutputStream;\n    import java.io.ObjectInputStream;\n    import java.io.ObjectOutputStream;\n    import java.io.Serializable;\n\n    public class MyUtil {\n\n        private MyUtil() {\n            throw new AssertionError();\n        }\n\n        @SuppressWarnings(\"unchecked\")\n        public static &lt;T extends Serializable&gt; T clone(T obj) throws Exception {\n            ByteArrayOutputStream bout = new ByteArrayOutputStream();\n            ObjectOutputStream oos = new ObjectOutputStream(bout);\n            oos.writeObject(obj);\n\n            ByteArrayInputStream bin = new ByteArrayInputStream(bout.toByteArray());\n            ObjectInputStream ois = new ObjectInputStream(bin);\n            return (T) ois.readObject();\n\n            // \u8bf4\u660e\uff1a\u8c03\u7528ByteArrayInputStream\u6216ByteArrayOutputStream\u5bf9\u8c61\u7684close\u65b9\u6cd5\u6ca1\u6709\u4efb\u4f55\u610f\u4e49\n            // \u8fd9\u4e24\u4e2a\u57fa\u4e8e\u5185\u5b58\u7684\u6d41\u53ea\u8981\u5783\u573e\u56de\u6536\u5668\u6e05\u7406\u5bf9\u8c61\u5c31\u80fd\u591f\u91ca\u653e\u8d44\u6e90\uff0c\u8fd9\u4e00\u70b9\u4e0d\u540c\u4e8e\u5bf9\u5916\u90e8\u8d44\u6e90\uff08\u5982\u6587\u4ef6\u6d41\uff09\u7684\u91ca\u653e\n        }\n    }\n\u4e0b\u9762\u662f\u6d4b\u8bd5\u4ee3\u7801\uff1a\n\n    import java.io.Serializable;\n\n    /**\n     * \u4eba\u7c7b\n     * @author \u9a86\u660a\n     *\n     */\n    class Person implements Serializable {\n        private static final long serialVersionUID = -9102017020286042305L;\n\n        private String name;    // \u59d3\u540d\n        private int age;        // \u5e74\u9f84\n        private Car car;        // \u5ea7\u9a7e\n\n        public Person(String name, int age, Car car) {\n            this.name = name;\n            this.age = age;\n            this.car = car;\n        }\n\n        public String getName() {\n            return name;\n        }\n\n        public void setName(String name) {\n            this.name = name;\n        }\n\n        public int getAge() {\n            return age;\n        }\n\n        public void setAge(int age) {\n            this.age = age;\n        }\n\n        public Car getCar() {\n            return car;\n        }\n\n        public void setCar(Car car) {\n            this.car = car;\n        }\n\n        @Override\n        public String toString() {\n            return \"Person [name=\" + name + \", age=\" + age + \", car=\" + car + \"]\";\n        }\n\n    }\n\n    /**\n     * \u5c0f\u6c7d\u8f66\u7c7b\n     * @author \u9a86\u660a\n     *\n     */\n    class Car implements Serializable {\n        private static final long serialVersionUID = -5713945027627603702L;\n\n        private String brand;       // \u54c1\u724c\n        private int maxSpeed;       // \u6700\u9ad8\u65f6\u901f\n\n        public Car(String brand, int maxSpeed) {\n            this.brand = brand;\n            this.maxSpeed = maxSpeed;\n        }\n\n        public String getBrand() {\n            return brand;\n        }\n\n        public void setBrand(String brand) {\n            this.brand = brand;\n        }\n\n        public int getMaxSpeed() {\n            return maxSpeed;\n        }\n\n        public void setMaxSpeed(int maxSpeed) {\n            this.maxSpeed = maxSpeed;\n        }\n\n        @Override\n        public String toString() {\n            return \"Car [brand=\" + brand + \", maxSpeed=\" + maxSpeed + \"]\";\n        }\n\n    }\n\n    class CloneTest {\n\n        public static void main(String[] args) {\n            try {\n                Person p1 = new Person(\"Hao LUO\", 33, new Car(\"Benz\", 300));\n                Person p2 = MyUtil.clone(p1);   // \u6df1\u5ea6\u514b\u9686\n                p2.getCar().setBrand(\"BYD\");\n                // \u4fee\u6539\u514b\u9686\u7684Person\u5bf9\u8c61p2\u5173\u8054\u7684\u6c7d\u8f66\u5bf9\u8c61\u7684\u54c1\u724c\u5c5e\u6027\n                // \u539f\u6765\u7684Person\u5bf9\u8c61p1\u5173\u8054\u7684\u6c7d\u8f66\u4e0d\u4f1a\u53d7\u5230\u4efb\u4f55\u5f71\u54cd\n                // \u56e0\u4e3a\u5728\u514b\u9686Person\u5bf9\u8c61\u65f6\u5176\u5173\u8054\u7684\u6c7d\u8f66\u5bf9\u8c61\u4e5f\u88ab\u514b\u9686\u4e86\n                System.out.println(p1);\n            } catch (Exception e) {\n                e.printStackTrace();\n            }\n        }\n    }\n\u6ce8\u610f\uff1a\u57fa\u4e8e\u5e8f\u5217\u5316\u548c\u53cd\u5e8f\u5217\u5316\u5b9e\u73b0\u7684\u514b\u9686\u4e0d\u4ec5\u4ec5\u662f\u6df1\u5ea6\u514b\u9686\uff0c\u66f4\u91cd\u8981\u7684\u662f\u901a\u8fc7\u6cdb\u578b\u9650\u5b9a\uff0c\u53ef\u4ee5\u68c0\u67e5\u51fa\u8981\u514b\u9686\u7684\u5bf9\u8c61\u662f\u5426\u652f\u6301\u5e8f\u5217\u5316\uff0c\u8fd9\u9879\u68c0\u67e5\u662f\u7f16\u8bd1\u5668\u5b8c\u6210\u7684\uff0c\u4e0d\u662f\u5728\u8fd0\u884c\u65f6\u629b\u51fa\u5f02\u5e38\uff0c\u8fd9\u79cd\u662f\u65b9\u6848\u660e\u663e\u4f18\u4e8e\u4f7f\u7528Object\u7c7b\u7684clone\u65b9\u6cd5\u514b\u9686\u5bf9\u8c61\u3002\u8ba9\u95ee\u9898\u5728\u7f16\u8bd1\u7684\u65f6\u5019\u66b4\u9732\u51fa\u6765\u603b\u662f\u597d\u8fc7\u628a\u95ee\u9898\u7559\u5230\u8fd0\u884c\u65f6\u3002\n30\u3001GC\u662f\u4ec0\u4e48\uff1f\u4e3a\u4ec0\u4e48\u8981\u6709GC\uff1f\n\u7b54\uff1aGC\u662f\u5783\u573e\u6536\u96c6\u7684\u610f\u601d\uff0c\u5185\u5b58\u5904\u7406\u662f\u7f16\u7a0b\u4eba\u5458\u5bb9\u6613\u51fa\u73b0\u95ee\u9898\u7684\u5730\u65b9\uff0c\u5fd8\u8bb0\u6216\u8005\u9519\u8bef\u7684\u5185\u5b58\u56de\u6536\u4f1a\u5bfc\u81f4\u7a0b\u5e8f\u6216\u7cfb\u7edf\u7684\u4e0d\u7a33\u5b9a\u751a\u81f3\u5d29\u6e83\uff0cJava\u63d0\u4f9b\u7684GC\u529f\u80fd\u53ef\u4ee5\u81ea\u52a8\u76d1\u6d4b\u5bf9\u8c61\u662f\u5426\u8d85\u8fc7\u4f5c\u7528\u57df\u4ece\u800c\u8fbe\u5230\u81ea\u52a8\u56de\u6536\u5185\u5b58\u7684\u76ee\u7684\uff0cJava\u8bed\u8a00\u6ca1\u6709\u63d0\u4f9b\u91ca\u653e\u5df2\u5206\u914d\u5185\u5b58\u7684\u663e\u793a\u64cd\u4f5c\u65b9\u6cd5\u3002\nJava\u7a0b\u5e8f\u5458\u4e0d\u7528\u62c5\u5fc3\u5185\u5b58\u7ba1\u7406\uff0c\u56e0\u4e3a\u5783\u573e\u6536\u96c6\u5668\u4f1a\u81ea\u52a8\u8fdb\u884c\u7ba1\u7406\u3002\u8981\u8bf7\u6c42\u5783\u573e\u6536\u96c6\uff0c\u53ef\u4ee5\u8c03\u7528\u4e0b\u9762\u7684\u65b9\u6cd5\u4e4b\u4e00\uff1aSystem.gc() \u6216Runtime.getRuntime().gc() \uff0c\u4f46JVM\u53ef\u4ee5\u5c4f\u853d\u6389\u663e\u793a\u7684\u5783\u573e\u56de\u6536\u8c03\u7528\u3002\u5783\u573e\u56de\u6536\u53ef\u4ee5\u6709\u6548\u7684\u9632\u6b62\u5185\u5b58\u6cc4\u9732\uff0c\u6709\u6548\u7684\u4f7f\u7528\u53ef\u4ee5\u4f7f\u7528\u7684\u5185\u5b58\u3002\u5783\u573e\u56de\u6536\u5668\u901a\u5e38\u662f\u4f5c\u4e3a\u4e00\u4e2a\u5355\u72ec\u7684\u4f4e\u4f18\u5148\u7ea7\u7684\u7ebf\u7a0b\u8fd0\u884c\uff0c\u4e0d\u53ef\u9884\u77e5\u7684\u60c5\u51b5\u4e0b\u5bf9\u5185\u5b58\u5806\u4e2d\u5df2\u7ecf\u6b7b\u4ea1\u7684\u6216\u8005\u957f\u65f6\u95f4\u6ca1\u6709\u4f7f\u7528\u7684\u5bf9\u8c61\u8fdb\u884c\u6e05\u9664\u548c\u56de\u6536\uff0c\u7a0b\u5e8f\u5458\u4e0d\u80fd\u5b9e\u65f6\u7684\u8c03\u7528\u5783\u573e\u56de\u6536\u5668\u5bf9\u67d0\u4e2a\u5bf9\u8c61\u6216\u6240\u6709\u5bf9\u8c61\u8fdb\u884c\u5783\u573e\u56de\u6536\u3002\u5728Java\u8bde\u751f\u521d\u671f\uff0c\u5783\u573e\u56de\u6536\u662fJava\u6700\u5927\u7684\u4eae\u70b9\u4e4b\u4e00\uff0c\u56e0\u4e3a\u670d\u52a1\u5668\u7aef\u7684\u7f16\u7a0b\u9700\u8981\u6709\u6548\u7684\u9632\u6b62\u5185\u5b58\u6cc4\u9732\u95ee\u9898\uff0c\u7136\u800c\u65f6\u8fc7\u5883\u8fc1\uff0c\u5982\u4ecaJava\u7684\u5783\u573e\u56de\u6536\u673a\u5236\u5df2\u7ecf\u6210\u4e3a\u88ab\u8bdf\u75c5\u7684\u4e1c\u897f\u3002\u79fb\u52a8\u667a\u80fd\u7ec8\u7aef\u7528\u6237\u901a\u5e38\u89c9\u5f97iOS\u7684\u7cfb\u7edf\u6bd4Android\u7cfb\u7edf\u6709\u66f4\u597d\u7684\u7528\u6237\u4f53\u9a8c\uff0c\u5176\u4e2d\u4e00\u4e2a\u6df1\u5c42\u6b21\u7684\u539f\u56e0\u5c31\u5728\u4e8eandroid\u7cfb\u7edf\u4e2d\u5783\u573e\u56de\u6536\u7684\u4e0d\u53ef\u9884\u77e5\u6027\u3002\n\u8865\u5145\uff1a\u5783\u573e\u56de\u6536\u673a\u5236\u6709\u5f88\u591a\u79cd\uff0c\u5305\u62ec\uff1a\u5206\u4ee3\u590d\u5236\u5783\u573e\u56de\u6536\u3001\u6807\u8bb0\u5783\u573e\u56de\u6536\u3001\u589e\u91cf\u5783\u573e\u56de\u6536\u7b49\u65b9\u5f0f\u3002\n\u6807\u51c6\u7684Java\u8fdb\u7a0b\u65e2\u6709\u6808\u53c8\u6709\u5806\u3002\u6808\u4fdd\u5b58\u4e86\u539f\u59cb\u578b\u5c40\u90e8\u53d8\u91cf\uff0c\u5806\u4fdd\u5b58\u4e86\u8981\u521b\u5efa\u7684\u5bf9\u8c61\u3002Java\u5e73\u53f0\u5bf9\u5806\u5185\u5b58\u56de\u6536\u548c\u518d\u5229\u7528\u7684\u57fa\u672c\u7b97\u6cd5\u88ab\u79f0\u4e3a\u6807\u8bb0\u548c\u6e05\u9664\uff0c\u4f46\u662fJava\u5bf9\u5176\u8fdb\u884c\u4e86\u6539\u8fdb\uff0c\u91c7\u7528\u201c\u5206\u4ee3\u5f0f\u5783\u573e\u6536\u96c6\u201d\u3002\n\u8fd9\u79cd\u65b9\u6cd5\u4f1a\u8ddfJava\u5bf9\u8c61\u7684\u751f\u547d\u5468\u671f\u5c06\u5806\u5185\u5b58\u5212\u5206\u4e3a\u4e0d\u540c\u7684\u533a\u57df\uff0c\u5728\u5783\u573e\u6536\u96c6\u8fc7\u7a0b\u4e2d\uff0c\u53ef\u80fd\u4f1a\u5c06\u5bf9\u8c61\u79fb\u52a8\u5230\u4e0d\u540c\u533a\u57df\uff1a- \u4f0a\u7538\u56ed\uff08Eden\uff09\uff1a\u8fd9\u662f\u5bf9\u8c61\u6700\u521d\u8bde\u751f\u7684\u533a\u57df\uff0c\u5e76\u4e14\u5bf9\u5927\u591a\u6570\u5bf9\u8c61\u6765\u8bf4\uff0c\u8fd9\u91cc\u662f\u5b83\u4eec\u552f\u4e00\u5b58\u5728\u8fc7\u7684\u533a\u57df\u3002- \u5e78\u5b58\u8005\u4e50\u56ed\uff08Survivor\uff09\uff1a\u4ece\u4f0a\u7538\u56ed\u5e78\u5b58\u4e0b\u6765\u7684\u5bf9\u8c61\u4f1a\u88ab\u632a\u5230\u8fd9\u91cc\u3002- \u7ec8\u8eab\u9890\u517b\u56ed\uff08Tenured\uff09\uff1a\u8fd9\u662f\u8db3\u591f\u8001\u7684\u5e78\u5b58\u5bf9\u8c61\u7684\u5f52\u5bbf\u3002\u5e74\u8f7b\u4ee3\u6536\u96c6\uff08Minor-GC\uff09\u8fc7\u7a0b\u662f\u4e0d\u4f1a\u89e6\u53ca\u8fd9\u4e2a\u5730\u65b9\u7684\u3002\u5f53\u5e74\u8f7b\u4ee3\u6536\u96c6\u4e0d\u80fd\u628a\u5bf9\u8c61\u653e\u8fdb\u7ec8\u8eab\u9890\u517b\u56ed\u65f6\uff0c\u5c31\u4f1a\u89e6\u53d1\u4e00\u6b21\u5b8c\u5168\u6536\u96c6\uff08Major-GC\uff09\uff0c\u8fd9\u91cc\u53ef\u80fd\u8fd8\u4f1a\u7275\u626f\u5230\u538b\u7f29\uff0c\u4ee5\u4fbf\u4e3a\u5927\u5bf9\u8c61\u817e\u51fa\u8db3\u591f\u7684\u7a7a\u95f4\u3002\n\u4e0e\u5783\u573e\u56de\u6536\u76f8\u5173\u7684JVM\u53c2\u6570\uff1a\n-Xms / -Xmx \u2014 \u5806\u7684\u521d\u59cb\u5927\u5c0f / \u5806\u7684\u6700\u5927\u5927\u5c0f\n-Xmn \u2014 \u5806\u4e2d\u5e74\u8f7b\u4ee3\u7684\u5927\u5c0f\n-XX:-DisableExplicitGC \u2014 \u8ba9System.gc()\u4e0d\u4ea7\u751f\u4efb\u4f55\u4f5c\u7528\n-XX:+PrintGCDetails \u2014 \u6253\u5370GC\u7684\u7ec6\u8282\n-XX:+PrintGCDateStamps \u2014 \u6253\u5370GC\u64cd\u4f5c\u7684\u65f6\u95f4\u6233\n-XX:NewSize / XX:MaxNewSize \u2014 \u8bbe\u7f6e\u65b0\u751f\u4ee3\u5927\u5c0f/\u65b0\u751f\u4ee3\u6700\u5927\u5927\u5c0f\n-XX:NewRatio \u2014 \u53ef\u4ee5\u8bbe\u7f6e\u8001\u751f\u4ee3\u548c\u65b0\u751f\u4ee3\u7684\u6bd4\u4f8b\n-XX:PrintTenuringDistribution \u2014 \u8bbe\u7f6e\u6bcf\u6b21\u65b0\u751f\u4ee3GC\u540e\u8f93\u51fa\u5e78\u5b58\u8005\u4e50\u56ed\u4e2d\u5bf9\u8c61\u5e74\u9f84\u7684\u5206\u5e03\n-XX:InitialTenuringThreshold / -XX:MaxTenuringThreshold\uff1a\u8bbe\u7f6e\u8001\u5e74\u4ee3\u9600\u503c\u7684\u521d\u59cb\u503c\u548c\u6700\u5927\u503c\n-XX:TargetSurvivorRatio\uff1a\u8bbe\u7f6e\u5e78\u5b58\u533a\u7684\u76ee\u6807\u4f7f\u7528\u7387\n31\u3001String s = new String(\"xyz\");\u521b\u5efa\u4e86\u51e0\u4e2a\u5b57\u7b26\u4e32\u5bf9\u8c61\uff1f\n\u7b54\uff1a\u4e24\u4e2a\u5bf9\u8c61\uff0c\u4e00\u4e2a\u662f\u9759\u6001\u533a\u7684\"xyz\"\uff0c\u4e00\u4e2a\u662f\u7528new\u521b\u5efa\u5728\u5806\u4e0a\u7684\u5bf9\u8c61\u3002\n32\u3001\u63a5\u53e3\u662f\u5426\u53ef\u7ee7\u627f\uff08extends\uff09\u63a5\u53e3\uff1f\u62bd\u8c61\u7c7b\u662f\u5426\u53ef\u5b9e\u73b0\uff08implements\uff09\u63a5\u53e3\uff1f\u62bd\u8c61\u7c7b\u662f\u5426\u53ef\u7ee7\u627f\u5177\u4f53\u7c7b\uff08concrete class\uff09\uff1f\n\u7b54\uff1a\u63a5\u53e3\u53ef\u4ee5\u7ee7\u627f\u63a5\u53e3\uff0c\u800c\u4e14\u652f\u6301\u591a\u91cd\u7ee7\u627f\u3002\u62bd\u8c61\u7c7b\u53ef\u4ee5\u5b9e\u73b0(implements)\u63a5\u53e3\uff0c\u62bd\u8c61\u7c7b\u53ef\u7ee7\u627f\u5177\u4f53\u7c7b\u4e5f\u53ef\u4ee5\u7ee7\u627f\u62bd\u8c61\u7c7b\u3002\n33\u3001\u4e00\u4e2a\".java\"\u6e90\u6587\u4ef6\u4e2d\u662f\u5426\u53ef\u4ee5\u5305\u542b\u591a\u4e2a\u7c7b\uff08\u4e0d\u662f\u5185\u90e8\u7c7b\uff09\uff1f\u6709\u4ec0\u4e48\u9650\u5236\uff1f\n\u7b54\uff1a\u53ef\u4ee5\uff0c\u4f46\u4e00\u4e2a\u6e90\u6587\u4ef6\u4e2d\u6700\u591a\u53ea\u80fd\u6709\u4e00\u4e2a\u516c\u5f00\u7c7b\uff08public class\uff09\u800c\u4e14\u6587\u4ef6\u540d\u5fc5\u987b\u548c\u516c\u5f00\u7c7b\u7684\u7c7b\u540d\u5b8c\u5168\u4fdd\u6301\u4e00\u81f4\u3002\n34\u3001Anonymous Inner Class(\u533f\u540d\u5185\u90e8\u7c7b)\u662f\u5426\u53ef\u4ee5\u7ee7\u627f\u5176\u5b83\u7c7b\uff1f\u662f\u5426\u53ef\u4ee5\u5b9e\u73b0\u63a5\u53e3\uff1f\n\u7b54\uff1a\u53ef\u4ee5\u7ee7\u627f\u5176\u4ed6\u7c7b\u6216\u5b9e\u73b0\u5176\u4ed6\u63a5\u53e3\uff0c\u5728Swing\u7f16\u7a0b\u548cAndroid\u5f00\u53d1\u4e2d\u5e38\u7528\u6b64\u65b9\u5f0f\u6765\u5b9e\u73b0\u4e8b\u4ef6\u76d1\u542c\u548c\u56de\u8c03\u3002\n35\u3001\u5185\u90e8\u7c7b\u53ef\u4ee5\u5f15\u7528\u5b83\u7684\u5305\u542b\u7c7b\uff08\u5916\u90e8\u7c7b\uff09\u7684\u6210\u5458\u5417\uff1f\u6709\u6ca1\u6709\u4ec0\u4e48\u9650\u5236\uff1f\n\u7b54\uff1a\u4e00\u4e2a\u5185\u90e8\u7c7b\u5bf9\u8c61\u53ef\u4ee5\u8bbf\u95ee\u521b\u5efa\u5b83\u7684\u5916\u90e8\u7c7b\u5bf9\u8c61\u7684\u6210\u5458\uff0c\u5305\u62ec\u79c1\u6709\u6210\u5458\u3002\n36\u3001Java \u4e2d\u7684final\u5173\u952e\u5b57\u6709\u54ea\u4e9b\u7528\u6cd5\uff1f\n\u7b54\uff1a(1)\u4fee\u9970\u7c7b\uff1a\u8868\u793a\u8be5\u7c7b\u4e0d\u80fd\u88ab\u7ee7\u627f\uff1b(2)\u4fee\u9970\u65b9\u6cd5\uff1a\u8868\u793a\u65b9\u6cd5\u4e0d\u80fd\u88ab\u91cd\u5199\uff1b(3)\u4fee\u9970\u53d8\u91cf\uff1a\u8868\u793a\u53d8\u91cf\u53ea\u80fd\u4e00\u6b21\u8d4b\u503c\u4ee5\u540e\u503c\u4e0d\u80fd\u88ab\u4fee\u6539\uff08\u5e38\u91cf\uff09\u3002\n37\u3001\u6307\u51fa\u4e0b\u9762\u7a0b\u5e8f\u7684\u8fd0\u884c\u7ed3\u679c\u3002\n\n    class A {\n\n        static {\n            System.out.print(\"1\");\n        }\n\n        public A() {\n            System.out.print(\"2\");\n        }\n    }\n\n    class B extends A{\n\n        static {\n            System.out.print(\"a\");\n        }\n\n        public B() {\n            System.out.print(\"b\");\n        }\n    }\n\n    public class Hello {\n\n        public static void main(String[] args) {\n            A ab = new B();\n            ab = new B();\n        }\n\n    }\n\u7b54\uff1a\u6267\u884c\u7ed3\u679c\uff1a1a2b2b\u3002\n\u521b\u5efa\u5bf9\u8c61\u65f6\u6784\u9020\u5668\u7684\u8c03\u7528\u987a\u5e8f\u662f\uff1a\u5148\u521d\u59cb\u5316\u9759\u6001\u6210\u5458\uff0c\u7136\u540e\u8c03\u7528\u7236\u7c7b\u6784\u9020\u5668\uff0c\u518d\u521d\u59cb\u5316\u975e\u9759\u6001\u6210\u5458\uff0c\u6700\u540e\u8c03\u7528\u81ea\u8eab\u6784\u9020\u5668\u3002\n\u63d0\u793a\uff1a\u5982\u679c\u4e0d\u80fd\u7ed9\u51fa\u6b64\u9898\u7684\u6b63\u786e\u7b54\u6848\uff0c\u8bf4\u660e\u4e4b\u524d\u7b2c21\u9898Java\u7c7b\u52a0\u8f7d\u673a\u5236\u8fd8\u6ca1\u6709\u5b8c\u5168\u7406\u89e3\uff0c\u8d76\u7d27\u518d\u770b\u770b\u5427\u3002\n38\u3001\u6570\u636e\u7c7b\u578b\u4e4b\u95f4\u7684\u8f6c\u6362\uff1a - \u5982\u4f55\u5c06\u5b57\u7b26\u4e32\u8f6c\u6362\u4e3a\u57fa\u672c\u6570\u636e\u7c7b\u578b\uff1f - \u5982\u4f55\u5c06\u57fa\u672c\u6570\u636e\u7c7b\u578b\u8f6c\u6362\u4e3a\u5b57\u7b26\u4e32\uff1f\n\u7b54\uff1a- \u8c03\u7528\u57fa\u672c\u6570\u636e\u7c7b\u578b\u5bf9\u5e94\u7684\u5305\u88c5\u7c7b\u4e2d\u7684\u65b9\u6cd5parseXXX(String)\u6216valueOf(String)\u5373\u53ef\u8fd4\u56de\u76f8\u5e94\u57fa\u672c\u7c7b\u578b\uff1b- \u4e00\u79cd\u65b9\u6cd5\u662f\u5c06\u57fa\u672c\u6570\u636e\u7c7b\u578b\u4e0e\u7a7a\u5b57\u7b26\u4e32\uff08\"\"\uff09\u8fde\u63a5\uff08+\uff09\u5373\u53ef\u83b7\u5f97\u5176\u6240\u5bf9\u5e94\u7684\u5b57\u7b26\u4e32\uff1b\u53e6\u4e00\u79cd\u65b9\u6cd5\u662f\u8c03\u7528String \u7c7b\u4e2d\u7684valueOf()\u65b9\u6cd5\u8fd4\u56de\u76f8\u5e94\u5b57\u7b26\u4e32\n39\u3001\u5982\u4f55\u5b9e\u73b0\u5b57\u7b26\u4e32\u7684\u53cd\u8f6c\u53ca\u66ff\u6362\uff1f\n\u7b54\uff1a\u65b9\u6cd5\u5f88\u591a\uff0c\u53ef\u4ee5\u81ea\u5df1\u5199\u5b9e\u73b0\u4e5f\u53ef\u4ee5\u4f7f\u7528String\u6216StringBuffer/StringBuilder\u4e2d\u7684\u65b9\u6cd5\u3002\n\u6709\u4e00\u9053\u5f88\u5e38\u89c1\u7684\u9762\u8bd5\u9898\u662f\u7528\u9012\u5f52\u5b9e\u73b0\u5b57\u7b26\u4e32\u53cd\u8f6c\uff0c\u4ee3\u7801\u5982\u4e0b\u6240\u793a\uff1a\n\n        public static String reverse(String originStr) {\n            if(originStr == null || originStr.length() &lt;= 1) \n                return originStr;\n            return reverse(originStr.substring(1)) + originStr.charAt(0);\n        }\n40\u3001\u600e\u6837\u5c06GB2312\u7f16\u7801\u7684\u5b57\u7b26\u4e32\u8f6c\u6362\u4e3aISO-8859-1\u7f16\u7801\u7684\u5b57\u7b26\u4e32\uff1f\n\u7b54\uff1a\u4ee3\u7801\u5982\u4e0b\u6240\u793a\uff1a\n\n    String s1 = \"\u4f60\u597d\";\n    String s2 = new String(s1.getBytes(\"GB2312\"), \"ISO-8859-1\");\n41\u3001\u65e5\u671f\u548c\u65f6\u95f4\uff1a - \u5982\u4f55\u53d6\u5f97\u5e74\u6708\u65e5\u3001\u5c0f\u65f6\u5206\u949f\u79d2\uff1f - \u5982\u4f55\u53d6\u5f97\u4ece1970\u5e741\u67081\u65e50\u65f60\u52060\u79d2\u5230\u73b0\u5728\u7684\u6beb\u79d2\u6570\uff1f - \u5982\u4f55\u53d6\u5f97\u67d0\u6708\u7684\u6700\u540e\u4e00\u5929\uff1f - \u5982\u4f55\u683c\u5f0f\u5316\u65e5\u671f\uff1f\n\u95ee\u98981\uff1a\u521b\u5efajava.util.Calendar \u5b9e\u4f8b\uff0c\u8c03\u7528\u5176get()\u65b9\u6cd5\u4f20\u5165\u4e0d\u540c\u7684\u53c2\u6570\u5373\u53ef\u83b7\u5f97\u53c2\u6570\u6240\u5bf9\u5e94\u7684\u503c\u3002\nJava 8\u4e2d\u53ef\u4ee5\u4f7f\u7528java.time.LocalDateTimel\u6765\u83b7\u53d6\uff0c\u4ee3\u7801\u5982\u4e0b\u6240\u793a\u3002\n\n    public class DateTimeTest {\n        public static void main(String[] args) {\n            Calendar cal = Calendar.getInstance();\n            System.out.println(cal.get(Calendar.YEAR));\n            System.out.println(cal.get(Calendar.MONTH));    // 0 - 11\n            System.out.println(cal.get(Calendar.DATE));\n            System.out.println(cal.get(Calendar.HOUR_OF_DAY));\n            System.out.println(cal.get(Calendar.MINUTE));\n            System.out.println(cal.get(Calendar.SECOND));\n\n            // Java 8\n            LocalDateTime dt = LocalDateTime.now();\n            System.out.println(dt.getYear());\n            System.out.println(dt.getMonthValue());     // 1 - 12\n            System.out.println(dt.getDayOfMonth());\n            System.out.println(dt.getHour());\n            System.out.println(dt.getMinute());\n            System.out.println(dt.getSecond());\n        }\n    }\n\u95ee\u98982\uff1a\u4ee5\u4e0b\u65b9\u6cd5\u5747\u53ef\u83b7\u5f97\u8be5\u6beb\u79d2\u6570\u3002\n\n    Calendar.getInstance().getTimeInMillis();\n    System.currentTimeMillis();\n    Clock.systemDefaultZone().millis(); // Java 8\n\u95ee\u98983\uff1a\u4ee3\u7801\u5982\u4e0b\u6240\u793a\u3002\n\n    Calendar time = Calendar.getInstance();\n    time.getActualMaximum(Calendar.DAY_OF_MONTH);\n\u95ee\u98984\uff1a\u5229\u7528java.text.DataFormat \u7684\u5b50\u7c7b\uff08\u5982SimpleDateFormat\u7c7b\uff09\u4e2d\u7684format(Date)\u65b9\u6cd5\u53ef\u5c06\u65e5\u671f\u683c\u5f0f\u5316\u3002Java 8\u4e2d\u53ef\u4ee5\u7528java.time.format.DateTimeFormatter\u6765\u683c\u5f0f\u5316\u65f6\u95f4\u65e5\u671f\uff0c\u4ee3\u7801\u5982\u4e0b\u6240\u793a\u3002\n\n    import java.text.SimpleDateFormat;\n    import java.time.LocalDate;\n    import java.time.format.DateTimeFormatter;\n    import java.util.Date;\n\n    class DateFormatTest {\n\n        public static void main(String[] args) {\n            SimpleDateFormat oldFormatter = new SimpleDateFormat(\"yyyy/MM/dd\");\n            Date date1 = new Date();\n            System.out.println(oldFormatter.format(date1));\n\n            // Java 8\n            DateTimeFormatter newFormatter = DateTimeFormatter.ofPattern(\"yyyy/MM/dd\");\n            LocalDate date2 = LocalDate.now();\n            System.out.println(date2.format(newFormatter));\n        }\n    }\n\u8865\u5145\uff1aJava\u7684\u65f6\u95f4\u65e5\u671fAPI\u4e00\u76f4\u4ee5\u6765\u90fd\u662f\u88ab\u8bdf\u75c5\u7684\u4e1c\u897f\uff0c\u4e3a\u4e86\u89e3\u51b3\u8fd9\u4e00\u95ee\u9898\uff0cJava 8\u4e2d\u5f15\u5165\u4e86\u65b0\u7684\u65f6\u95f4\u65e5\u671fAPI\uff0c\u5176\u4e2d\u5305\u62ecLocalDate\u3001LocalTime\u3001LocalDateTime\u3001Clock\u3001Instant\u7b49\u7c7b\uff0c\u8fd9\u4e9b\u7684\u7c7b\u7684\u8bbe\u8ba1\u90fd\u4f7f\u7528\u4e86\u4e0d\u53d8\u6a21\u5f0f\uff0c\u56e0\u6b64\u662f\u7ebf\u7a0b\u5b89\u5168\u7684\u8bbe\u8ba1\u3002\u5982\u679c\u4e0d\u7406\u89e3\u8fd9\u4e9b\u5185\u5bb9\uff0c\u53ef\u4ee5\u53c2\u8003\u6211\u7684\u53e6\u4e00\u7bc7\u6587\u7ae0\u300a\u5173\u4e8eJava\u5e76\u53d1\u7f16\u7a0b\u7684\u603b\u7ed3\u548c\u601d\u8003\u300b\u3002\n42\u3001\u6253\u5370\u6628\u5929\u7684\u5f53\u524d\u65f6\u523b\u3002\n\n    import java.util.Calendar;\n\n    class YesterdayCurrent {\n        public static void main(String[] args){\n            Calendar cal = Calendar.getInstance();\n            cal.add(Calendar.DATE, -1);\n            System.out.println(cal.getTime());\n        }\n    }\n\u5728Java 8\u4e2d\uff0c\u53ef\u4ee5\u7528\u4e0b\u9762\u7684\u4ee3\u7801\u5b9e\u73b0\u76f8\u540c\u7684\u529f\u80fd\u3002\n\n    import java.time.LocalDateTime;\n\n    class YesterdayCurrent {\n\n        public static void main(String[] args) {\n            LocalDateTime today = LocalDateTime.now();\n            LocalDateTime yesterday = today.minusDays(1);\n\n            System.out.println(yesterday);\n        }\n    }\n43\u3001\u6bd4\u8f83\u4e00\u4e0bJava\u548cJavaSciprt\u3002\n\u7b54\uff1aJavaScript \u4e0eJava\u662f\u4e24\u4e2a\u516c\u53f8\u5f00\u53d1\u7684\u4e0d\u540c\u7684\u4e24\u4e2a\u4ea7\u54c1\u3002Java \u662f\u539fSun Microsystems\u516c\u53f8\u63a8\u51fa\u7684\u9762\u5411\u5bf9\u8c61\u7684\u7a0b\u5e8f\u8bbe\u8ba1\u8bed\u8a00\uff0c\u7279\u522b\u9002\u5408\u4e8e\u4e92\u8054\u7f51\u5e94\u7528\u7a0b\u5e8f\u5f00\u53d1\uff1b\u800cJavaScript\u662fNetscape\u516c\u53f8\u7684\u4ea7\u54c1\uff0c\u4e3a\u4e86\u6269\u5c55Netscape\u6d4f\u89c8\u5668\u7684\u529f\u80fd\u800c\u5f00\u53d1\u7684\u4e00\u79cd\u53ef\u4ee5\u5d4c\u5165Web\u9875\u9762\u4e2d\u8fd0\u884c\u7684\u57fa\u4e8e\u5bf9\u8c61\u548c\u4e8b\u4ef6\u9a71\u52a8\u7684\u89e3\u91ca\u6027\u8bed\u8a00\u3002\nJavaScript\u7684\u524d\u8eab\u662fLiveScript\uff1b\u800cJava\u7684\u524d\u8eab\u662fOak\u8bed\u8a00\u3002\n\u4e0b\u9762\u5bf9\u4e24\u79cd\u8bed\u8a00\u95f4\u7684\u5f02\u540c\u4f5c\u5982\u4e0b\u6bd4\u8f83\uff1a\n\n\u57fa\u4e8e\u5bf9\u8c61\u548c\u9762\u5411\u5bf9\u8c61\uff1aJava\u662f\u4e00\u79cd\u771f\u6b63\u7684\u9762\u5411\u5bf9\u8c61\u7684\u8bed\u8a00\uff0c\u5373\u4f7f\u662f\u5f00\u53d1\u7b80\u5355\u7684\u7a0b\u5e8f\uff0c\u5fc5\u987b\u8bbe\u8ba1\u5bf9\u8c61\uff1bJavaScript\u662f\u79cd\u811a\u672c\u8bed\u8a00\uff0c\u5b83\u53ef\u4ee5\u7528\u6765\u5236\u4f5c\u4e0e\u7f51\u7edc\u65e0\u5173\u7684\uff0c\u4e0e\u7528\u6237\u4ea4\u4e92\u4f5c\u7528\u7684\u590d\u6742\u8f6f\u4ef6\u3002\u5b83\u662f\u4e00\u79cd\u57fa\u4e8e\u5bf9\u8c61\uff08Object-Based\uff09\u548c\u4e8b\u4ef6\u9a71\u52a8\uff08Event-Driven\uff09\u7684\u7f16\u7a0b\u8bed\u8a00\uff0c\u56e0\u800c\u5b83\u672c\u8eab\u63d0\u4f9b\u4e86\u975e\u5e38\u4e30\u5bcc\u7684\u5185\u90e8\u5bf9\u8c61\u4f9b\u8bbe\u8ba1\u4eba\u5458\u4f7f\u7528\u3002\n\n\u89e3\u91ca\u548c\u7f16\u8bd1\uff1aJava\u7684\u6e90\u4ee3\u7801\u5728\u6267\u884c\u4e4b\u524d\uff0c\u5fc5\u987b\u7ecf\u8fc7\u7f16\u8bd1\u3002JavaScript\u662f\u4e00\u79cd\u89e3\u91ca\u6027\u7f16\u7a0b\u8bed\u8a00\uff0c\u5176\u6e90\u4ee3\u7801\u4e0d\u9700\u7ecf\u8fc7\u7f16\u8bd1\uff0c\u7531\u6d4f\u89c8\u5668\u89e3\u91ca\u6267\u884c\u3002\uff08\u76ee\u524d\u7684\u6d4f\u89c8\u5668\u51e0\u4e4e\u90fd\u4f7f\u7528\u4e86JIT\uff08\u5373\u65f6\u7f16\u8bd1\uff09\u6280\u672f\u6765\u63d0\u5347JavaScript\u7684\u8fd0\u884c\u6548\u7387\uff09\n\n\u5f3a\u7c7b\u578b\u53d8\u91cf\u548c\u7c7b\u578b\u5f31\u53d8\u91cf\uff1aJava\u91c7\u7528\u5f3a\u7c7b\u578b\u53d8\u91cf\u68c0\u67e5\uff0c\u5373\u6240\u6709\u53d8\u91cf\u5728\u7f16\u8bd1\u4e4b\u524d\u5fc5\u987b\u4f5c\u58f0\u660e\uff1bJavaScript\u4e2d\u53d8\u91cf\u662f\u5f31\u7c7b\u578b\u7684\uff0c\u751a\u81f3\u5728\u4f7f\u7528\u53d8\u91cf\u524d\u53ef\u4ee5\u4e0d\u4f5c\u58f0\u660e\uff0cJavaScript\u7684\u89e3\u91ca\u5668\u5728\u8fd0\u884c\u65f6\u68c0\u67e5\u63a8\u65ad\u5176\u6570\u636e\u7c7b\u578b\u3002\n\n\u4ee3\u7801\u683c\u5f0f\u4e0d\u4e00\u6837\u3002\n\n\n\u8865\u5145\uff1a\u4e0a\u9762\u5217\u51fa\u7684\u56db\u70b9\u662f\u7f51\u4e0a\u6d41\u4f20\u7684\u6240\u8c13\u7684\u6807\u51c6\u7b54\u6848\u3002\u5176\u5b9eJava\u548cJavaScript\u6700\u91cd\u8981\u7684\u533a\u522b\u662f\u4e00\u4e2a\u662f\u9759\u6001\u8bed\u8a00\uff0c\u4e00\u4e2a\u662f\u52a8\u6001\u8bed\u8a00\u3002\u76ee\u524d\u7684\u7f16\u7a0b\u8bed\u8a00\u7684\u53d1\u5c55\u8d8b\u52bf\u662f\u51fd\u6570\u5f0f\u8bed\u8a00\u548c\u52a8\u6001\u8bed\u8a00\u3002\u5728Java\u4e2d\u7c7b\uff08class\uff09\u662f\u4e00\u7b49\u516c\u6c11\uff0c\u800cJavaScript\u4e2d\u51fd\u6570\uff08function\uff09\u662f\u4e00\u7b49\u516c\u6c11\uff0c\u56e0\u6b64JavaScript\u652f\u6301\u51fd\u6570\u5f0f\u7f16\u7a0b\uff0c\u53ef\u4ee5\u4f7f\u7528Lambda\u51fd\u6570\u548c\u95ed\u5305\uff08closure\uff09\uff0c\u5f53\u7136Java 8\u4e5f\u5f00\u59cb\u652f\u6301\u51fd\u6570\u5f0f\u7f16\u7a0b\uff0c\u63d0\u4f9b\u4e86\u5bf9Lambda\u8868\u8fbe\u5f0f\u4ee5\u53ca\u51fd\u6570\u5f0f\u63a5\u53e3\u7684\u652f\u6301\u3002\u5bf9\u4e8e\u8fd9\u7c7b\u95ee\u9898\uff0c\u5728\u9762\u8bd5\u7684\u65f6\u5019\u6700\u597d\u8fd8\u662f\u7528\u81ea\u5df1\u7684\u8bed\u8a00\u56de\u7b54\u4f1a\u66f4\u52a0\u9760\u8c31\uff0c\u4e0d\u8981\u80cc\u7f51\u4e0a\u6240\u8c13\u7684\u6807\u51c6\u7b54\u6848\u3002\n44\u3001\u4ec0\u4e48\u65f6\u5019\u7528\u65ad\u8a00\uff08assert\uff09\uff1f\n\u7b54\uff1a\u65ad\u8a00\u5728\u8f6f\u4ef6\u5f00\u53d1\u4e2d\u662f\u4e00\u79cd\u5e38\u7528\u7684\u8c03\u8bd5\u65b9\u5f0f\uff0c\u5f88\u591a\u5f00\u53d1\u8bed\u8a00\u4e2d\u90fd\u652f\u6301\u8fd9\u79cd\u673a\u5236\u3002\u4e00\u822c\u6765\u8bf4\uff0c\u65ad\u8a00\u7528\u4e8e\u4fdd\u8bc1\u7a0b\u5e8f\u6700\u57fa\u672c\u3001\u5173\u952e\u7684\u6b63\u786e\u6027\u3002\u65ad\u8a00\u68c0\u67e5\u901a\u5e38\u5728\u5f00\u53d1\u548c\u6d4b\u8bd5\u65f6\u5f00\u542f\u3002\u4e3a\u4e86\u4fdd\u8bc1\u7a0b\u5e8f\u7684\u6267\u884c\u6548\u7387\uff0c\u5728\u8f6f\u4ef6\u53d1\u5e03\u540e\u65ad\u8a00\u68c0\u67e5\u901a\u5e38\u662f\u5173\u95ed\u7684\u3002\u65ad\u8a00\u662f\u4e00\u4e2a\u5305\u542b\u5e03\u5c14\u8868\u8fbe\u5f0f\u7684\u8bed\u53e5\uff0c\u5728\u6267\u884c\u8fd9\u4e2a\u8bed\u53e5\u65f6\u5047\u5b9a\u8be5\u8868\u8fbe\u5f0f\u4e3atrue\uff1b\u5982\u679c\u8868\u8fbe\u5f0f\u7684\u503c\u4e3afalse\uff0c\u90a3\u4e48\u7cfb\u7edf\u4f1a\u62a5\u544a\u4e00\u4e2aAssertionError\u3002\u65ad\u8a00\u7684\u4f7f\u7528\u5982\u4e0b\u9762\u7684\u4ee3\u7801\u6240\u793a\uff1a\n\n    assert(a &gt; 0); // throws an AssertionError if a &lt;= 0\n\u65ad\u8a00\u53ef\u4ee5\u6709\u4e24\u79cd\u5f62\u5f0f\uff1a\n\nassert Expression1;\nassert Expression1 : Expression2 ;\nExpression1 \u5e94\u8be5\u603b\u662f\u4ea7\u751f\u4e00\u4e2a\u5e03\u5c14\u503c\u3002\nExpression2 \u53ef\u4ee5\u662f\u5f97\u51fa\u4e00\u4e2a\u503c\u7684\u4efb\u610f\u8868\u8fbe\u5f0f\uff1b\u8fd9\u4e2a\u503c\u7528\u4e8e\u751f\u6210\u663e\u793a\u66f4\u591a\u8c03\u8bd5\u4fe1\u606f\u7684\u5b57\u7b26\u4e32\u6d88\u606f\u3002\n\u8981\u5728\u8fd0\u884c\u65f6\u542f\u7528\u65ad\u8a00\uff0c\u53ef\u4ee5\u5728\u542f\u52a8JVM\u65f6\u4f7f\u7528-enableassertions\u6216\u8005-ea\u6807\u8bb0\u3002\u8981\u5728\u8fd0\u884c\u65f6\u9009\u62e9\u7981\u7528\u65ad\u8a00\uff0c\u53ef\u4ee5\u5728\u542f\u52a8JVM\u65f6\u4f7f\u7528-da\u6216\u8005-disableassertions\u6807\u8bb0\u3002\u8981\u5728\u7cfb\u7edf\u7c7b\u4e2d\u542f\u7528\u6216\u7981\u7528\u65ad\u8a00\uff0c\u53ef\u4f7f\u7528-esa\u6216-dsa\u6807\u8bb0\u3002\u8fd8\u53ef\u4ee5\u5728\u5305\u7684\u57fa\u7840\u4e0a\u542f\u7528\u6216\u8005\u7981\u7528\u65ad\u8a00\u3002\n\u6ce8\u610f\uff1a\u65ad\u8a00\u4e0d\u5e94\u8be5\u4ee5\u4efb\u4f55\u65b9\u5f0f\u6539\u53d8\u7a0b\u5e8f\u7684\u72b6\u6001\u3002\u7b80\u5355\u7684\u8bf4\uff0c\u5982\u679c\u5e0c\u671b\u5728\u4e0d\u6ee1\u8db3\u67d0\u4e9b\u6761\u4ef6\u65f6\u963b\u6b62\u4ee3\u7801\u7684\u6267\u884c\uff0c\u5c31\u53ef\u4ee5\u8003\u8651\u7528\u65ad\u8a00\u6765\u963b\u6b62\u5b83\u3002\n45\u3001Error\u548cException\u6709\u4ec0\u4e48\u533a\u522b\uff1f\n\u7b54\uff1aError\u8868\u793a\u7cfb\u7edf\u7ea7\u7684\u9519\u8bef\u548c\u7a0b\u5e8f\u4e0d\u5fc5\u5904\u7406\u7684\u5f02\u5e38\uff0c\u662f\u6062\u590d\u4e0d\u662f\u4e0d\u53ef\u80fd\u4f46\u5f88\u56f0\u96be\u7684\u60c5\u51b5\u4e0b\u7684\u4e00\u79cd\u4e25\u91cd\u95ee\u9898\uff1b\u6bd4\u5982\u5185\u5b58\u6ea2\u51fa\uff0c\u4e0d\u53ef\u80fd\u6307\u671b\u7a0b\u5e8f\u80fd\u5904\u7406\u8fd9\u6837\u7684\u60c5\u51b5\uff1bException\u8868\u793a\u9700\u8981\u6355\u6349\u6216\u8005\u9700\u8981\u7a0b\u5e8f\u8fdb\u884c\u5904\u7406\u7684\u5f02\u5e38\uff0c\u662f\u4e00\u79cd\u8bbe\u8ba1\u6216\u5b9e\u73b0\u95ee\u9898\uff1b\u4e5f\u5c31\u662f\u8bf4\uff0c\u5b83\u8868\u793a\u5982\u679c\u7a0b\u5e8f\u8fd0\u884c\u6b63\u5e38\uff0c\u4ece\u4e0d\u4f1a\u53d1\u751f\u7684\u60c5\u51b5\u3002\n\u9762\u8bd5\u9898\uff1a2005\u5e74\u6469\u6258\u7f57\u62c9\u7684\u9762\u8bd5\u4e2d\u66fe\u7ecf\u95ee\u8fc7\u8fd9\u4e48\u4e00\u4e2a\u95ee\u9898\u201cIf a process reports a stack overflow run-time error, what\u2019s the most possible cause?\u201d\uff0c\u7ed9\u4e86\u56db\u4e2a\u9009\u9879a. lack of memory; b. write on an invalid memory space; c. recursive function calling; d. array index out of boundary. Java\u7a0b\u5e8f\u5728\u8fd0\u884c\u65f6\u4e5f\u53ef\u80fd\u4f1a\u906d\u9047StackOverflowError\uff0c\u8fd9\u662f\u4e00\u4e2a\u65e0\u6cd5\u6062\u590d\u7684\u9519\u8bef\uff0c\u53ea\u80fd\u91cd\u65b0\u4fee\u6539\u4ee3\u7801\u4e86\uff0c\u8fd9\u4e2a\u9762\u8bd5\u9898\u7684\u7b54\u6848\u662fc\u3002\u5982\u679c\u5199\u4e86\u4e0d\u80fd\u8fc5\u901f\u6536\u655b\u7684\u9012\u5f52\uff0c\u5219\u5f88\u6709\u53ef\u80fd\u5f15\u53d1\u6808\u6ea2\u51fa\u7684\u9519\u8bef\uff0c\u5982\u4e0b\u6240\u793a\uff1a\n\n    class StackOverflowErrorTest {\n\n        public static void main(String[] args) {\n            main(null);\n        }\n    }\n\u63d0\u793a\uff1a\u7528\u9012\u5f52\u7f16\u5199\u7a0b\u5e8f\u65f6\u4e00\u5b9a\u8981\u7262\u8bb0\u4e24\u70b9\uff1a1. \u9012\u5f52\u516c\u5f0f\uff1b2. \u6536\u655b\u6761\u4ef6\uff08\u4ec0\u4e48\u65f6\u5019\u5c31\u4e0d\u518d\u7ee7\u7eed\u9012\u5f52\uff09\u3002\n46\u3001try{}\u91cc\u6709\u4e00\u4e2areturn\u8bed\u53e5\uff0c\u90a3\u4e48\u7d27\u8ddf\u5728\u8fd9\u4e2atry\u540e\u7684finally{}\u91cc\u7684\u4ee3\u7801\u4f1a\u4e0d\u4f1a\u88ab\u6267\u884c\uff0c\u4ec0\u4e48\u65f6\u5019\u88ab\u6267\u884c\uff0c\u5728return\u524d\u8fd8\u662f\u540e?\n\u7b54\uff1a\u4f1a\u6267\u884c\uff0c\u5728\u65b9\u6cd5\u8fd4\u56de\u8c03\u7528\u8005\u524d\u6267\u884c\u3002\n\u6ce8\u610f\uff1a\u5728finally\u4e2d\u6539\u53d8\u8fd4\u56de\u503c\u7684\u505a\u6cd5\u662f\u4e0d\u597d\u7684\uff0c\u56e0\u4e3a\u5982\u679c\u5b58\u5728finally\u4ee3\u7801\u5757\uff0ctry\u4e2d\u7684return\u8bed\u53e5\u4e0d\u4f1a\u7acb\u9a6c\u8fd4\u56de\u8c03\u7528\u8005\uff0c\u800c\u662f\u8bb0\u5f55\u4e0b\u8fd4\u56de\u503c\u5f85finally\u4ee3\u7801\u5757\u6267\u884c\u5b8c\u6bd5\u4e4b\u540e\u518d\u5411\u8c03\u7528\u8005\u8fd4\u56de\u5176\u503c\uff0c\u7136\u540e\u5982\u679c\u5728finally\u4e2d\u4fee\u6539\u4e86\u8fd4\u56de\u503c\uff0c\u5c31\u4f1a\u8fd4\u56de\u4fee\u6539\u540e\u7684\u503c\u3002\u663e\u7136\uff0c\u5728finally\u4e2d\u8fd4\u56de\u6216\u8005\u4fee\u6539\u8fd4\u56de\u503c\u4f1a\u5bf9\u7a0b\u5e8f\u9020\u6210\u5f88\u5927\u7684\u56f0\u6270\uff0cC#\u4e2d\u76f4\u63a5\u7528\u7f16\u8bd1\u9519\u8bef\u7684\u65b9\u5f0f\u6765\u963b\u6b62\u7a0b\u5e8f\u5458\u5e72\u8fd9\u79cd\u9f8c\u9f8a\u7684\u4e8b\u60c5\uff0cJava\u4e2d\u4e5f\u53ef\u4ee5\u901a\u8fc7\u63d0\u5347\u7f16\u8bd1\u5668\u7684\u8bed\u6cd5\u68c0\u67e5\u7ea7\u522b\u6765\u4ea7\u751f\u8b66\u544a\u6216\u9519\u8bef\uff0cEclipse\u4e2d\u53ef\u4ee5\u5728\u5982\u56fe\u6240\u793a\u7684\u5730\u65b9\u8fdb\u884c\u8bbe\u7f6e\uff0c\u5f3a\u70c8\u5efa\u8bae\u5c06\u6b64\u9879\u8bbe\u7f6e\u4e3a\u7f16\u8bd1\u9519\u8bef\u3002\njava-intelview-1-001\n47\u3001Java\u8bed\u8a00\u5982\u4f55\u8fdb\u884c\u5f02\u5e38\u5904\u7406\uff0c\u5173\u952e\u5b57\uff1athrows\u3001throw\u3001try\u3001catch\u3001finally\u5206\u522b\u5982\u4f55\u4f7f\u7528\uff1f\n\u7b54\uff1aJava\u901a\u8fc7\u9762\u5411\u5bf9\u8c61\u7684\u65b9\u6cd5\u8fdb\u884c\u5f02\u5e38\u5904\u7406\uff0c\u628a\u5404\u79cd\u4e0d\u540c\u7684\u5f02\u5e38\u8fdb\u884c\u5206\u7c7b\uff0c\u5e76\u63d0\u4f9b\u4e86\u826f\u597d\u7684\u63a5\u53e3\u3002\n\u5728Java\u4e2d\uff0c\u6bcf\u4e2a\u5f02\u5e38\u90fd\u662f\u4e00\u4e2a\u5bf9\u8c61\uff0c\u5b83\u662fThrowable\u7c7b\u6216\u5176\u5b50\u7c7b\u7684\u5b9e\u4f8b\u3002\u5f53\u4e00\u4e2a\u65b9\u6cd5\u51fa\u73b0\u5f02\u5e38\u540e\u4fbf\u629b\u51fa\u4e00\u4e2a\u5f02\u5e38\u5bf9\u8c61\uff0c\u8be5\u5bf9\u8c61\u4e2d\u5305\u542b\u6709\u5f02\u5e38\u4fe1\u606f\uff0c\u8c03\u7528\u8fd9\u4e2a\u5bf9\u8c61\u7684\u65b9\u6cd5\u53ef\u4ee5\u6355\u83b7\u5230\u8fd9\u4e2a\u5f02\u5e38\u5e76\u53ef\u4ee5\u5bf9\u5176\u8fdb\u884c\u5904\u7406\u3002\nJava\u7684\u5f02\u5e38\u5904\u7406\u662f\u901a\u8fc75\u4e2a\u5173\u952e\u8bcd\u6765\u5b9e\u73b0\u7684\uff1atry\u3001catch\u3001throw\u3001throws\u548cfinally\u3002\n\u4e00\u822c\u60c5\u51b5\u4e0b\u662f\u7528try\u6765\u6267\u884c\u4e00\u6bb5\u7a0b\u5e8f\uff0c\u5982\u679c\u7cfb\u7edf\u4f1a\u629b\u51fa\uff08throw\uff09\u4e00\u4e2a\u5f02\u5e38\u5bf9\u8c61\uff0c\u53ef\u4ee5\u901a\u8fc7\u5b83\u7684\u7c7b\u578b\u6765\u6355\u83b7\uff08catch\uff09\u5b83\uff0c\u6216\u901a\u8fc7\u603b\u662f\u6267\u884c\u4ee3\u7801\u5757\uff08finally\uff09\u6765\u5904\u7406\uff1btry\u7528\u6765\u6307\u5b9a\u4e00\u5757\u9884\u9632\u6240\u6709\u5f02\u5e38\u7684\u7a0b\u5e8f\uff1bcatch\u5b50\u53e5\u7d27\u8ddf\u5728try\u5757\u540e\u9762\uff0c\u7528\u6765\u6307\u5b9a\u4f60\u60f3\u8981\u6355\u83b7\u7684\u5f02\u5e38\u7684\u7c7b\u578b\uff1bthrow\u8bed\u53e5\u7528\u6765\u660e\u786e\u5730\u629b\u51fa\u4e00\u4e2a\u5f02\u5e38\uff1bthrows\u7528\u6765\u58f0\u660e\u4e00\u4e2a\u65b9\u6cd5\u53ef\u80fd\u629b\u51fa\u7684\u5404\u79cd\u5f02\u5e38\uff08\u5f53\u7136\u58f0\u660e\u5f02\u5e38\u65f6\u5141\u8bb8\u65e0\u75c5\u547b\u541f\uff09\uff1bfinally\u4e3a\u786e\u4fdd\u4e00\u6bb5\u4ee3\u7801\u4e0d\u7ba1\u53d1\u751f\u4ec0\u4e48\u5f02\u5e38\u72b6\u51b5\u90fd\u8981\u88ab\u6267\u884c\uff1btry\u8bed\u53e5\u53ef\u4ee5\u5d4c\u5957\uff0c\u6bcf\u5f53\u9047\u5230\u4e00\u4e2atry\u8bed\u53e5\uff0c\u5f02\u5e38\u7684\u7ed3\u6784\u5c31\u4f1a\u88ab\u653e\u5165\u5f02\u5e38\u6808\u4e2d\uff0c\u76f4\u5230\u6240\u6709\u7684try\u8bed\u53e5\u90fd\u5b8c\u6210\u3002\u5982\u679c\u4e0b\u4e00\u7ea7\u7684try\u8bed\u53e5\u6ca1\u6709\u5bf9\u67d0\u79cd\u5f02\u5e38\u8fdb\u884c\u5904\u7406\uff0c\u5f02\u5e38\u6808\u5c31\u4f1a\u6267\u884c\u51fa\u6808\u64cd\u4f5c\uff0c\u76f4\u5230\u9047\u5230\u6709\u5904\u7406\u8fd9\u79cd\u5f02\u5e38\u7684try\u8bed\u53e5\u6216\u8005\u6700\u7ec8\u5c06\u5f02\u5e38\u629b\u7ed9JVM\u3002\n48\u3001\u8fd0\u884c\u65f6\u5f02\u5e38\u4e0e\u53d7\u68c0\u5f02\u5e38\u6709\u4f55\u5f02\u540c\uff1f\n\u7b54\uff1a\u5f02\u5e38\u8868\u793a\u7a0b\u5e8f\u8fd0\u884c\u8fc7\u7a0b\u4e2d\u53ef\u80fd\u51fa\u73b0\u7684\u975e\u6b63\u5e38\u72b6\u6001\uff0c\u8fd0\u884c\u65f6\u5f02\u5e38\u8868\u793a\u865a\u62df\u673a\u7684\u901a\u5e38\u64cd\u4f5c\u4e2d\u53ef\u80fd\u9047\u5230\u7684\u5f02\u5e38\uff0c\u662f\u4e00\u79cd\u5e38\u89c1\u8fd0\u884c\u9519\u8bef\uff0c\u53ea\u8981\u7a0b\u5e8f\u8bbe\u8ba1\u5f97\u6ca1\u6709\u95ee\u9898\u901a\u5e38\u5c31\u4e0d\u4f1a\u53d1\u751f\u3002\u53d7\u68c0\u5f02\u5e38\u8ddf\u7a0b\u5e8f\u8fd0\u884c\u7684\u4e0a\u4e0b\u6587\u73af\u5883\u6709\u5173\uff0c\u5373\u4f7f\u7a0b\u5e8f\u8bbe\u8ba1\u65e0\u8bef\uff0c\u4ecd\u7136\u53ef\u80fd\u56e0\u4f7f\u7528\u7684\u95ee\u9898\u800c\u5f15\u53d1\u3002\nJava\u7f16\u8bd1\u5668\u8981\u6c42\u65b9\u6cd5\u5fc5\u987b\u58f0\u660e\u629b\u51fa\u53ef\u80fd\u53d1\u751f\u7684\u53d7\u68c0\u5f02\u5e38\uff0c\u4f46\u662f\u5e76\u4e0d\u8981\u6c42\u5fc5\u987b\u58f0\u660e\u629b\u51fa\u672a\u88ab\u6355\u83b7\u7684\u8fd0\u884c\u65f6\u5f02\u5e38\u3002\u5f02\u5e38\u548c\u7ee7\u627f\u4e00\u6837\uff0c\u662f\u9762\u5411\u5bf9\u8c61\u7a0b\u5e8f\u8bbe\u8ba1\u4e2d\u7ecf\u5e38\u88ab\u6ee5\u7528\u7684\u4e1c\u897f\u3002\n\u5728 Effective Java\u4e2d\u5bf9\u5f02\u5e38\u7684\u4f7f\u7528\u7ed9\u51fa\u4e86\u4ee5\u4e0b\u6307\u5bfc\u539f\u5219\uff1a\n\n\u4e0d\u8981\u5c06\u5f02\u5e38\u5904\u7406\u7528\u4e8e\u6b63\u5e38\u7684\u63a7\u5236\u6d41\uff08\u8bbe\u8ba1\u826f\u597d\u7684API\u4e0d\u5e94\u8be5\u5f3a\u8feb\u5b83\u7684\u8c03\u7528\u8005\u4e3a\u4e86\u6b63\u5e38\u7684\u63a7\u5236\u6d41\u800c\u4f7f\u7528\u5f02\u5e38\uff09\n\n\u5bf9\u53ef\u4ee5\u6062\u590d\u7684\u60c5\u51b5\u4f7f\u7528\u53d7\u68c0\u5f02\u5e38\uff0c\u5bf9\u7f16\u7a0b\u9519\u8bef\u4f7f\u7528\u8fd0\u884c\u65f6\u5f02\u5e38\n\n\u907f\u514d\u4e0d\u5fc5\u8981\u7684\u4f7f\u7528\u53d7\u68c0\u5f02\u5e38\uff08\u53ef\u4ee5\u901a\u8fc7\u4e00\u4e9b\u72b6\u6001\u68c0\u6d4b\u624b\u6bb5\u6765\u907f\u514d\u5f02\u5e38\u7684\u53d1\u751f\uff09\n\n\u4f18\u5148\u4f7f\u7528\u6807\u51c6\u7684\u5f02\u5e38\n\n\u6bcf\u4e2a\u65b9\u6cd5\u629b\u51fa\u7684\u5f02\u5e38\u90fd\u8981\u6709\u6587\u6863\n\n\u4fdd\u6301\u5f02\u5e38\u7684\u539f\u5b50\u6027\n\n\u4e0d\u8981\u5728catch\u4e2d\u5ffd\u7565\u6389\u6355\u83b7\u5230\u7684\u5f02\u5e38\n\n\n49\u3001\u5217\u51fa\u4e00\u4e9b\u4f60\u5e38\u89c1\u7684\u8fd0\u884c\u65f6\u5f02\u5e38\uff1f\n\nArithmeticException\uff08\u7b97\u672f\u5f02\u5e38\uff09\n\nClassCastException \uff08\u7c7b\u8f6c\u6362\u5f02\u5e38\uff09\n\nIllegalArgumentException \uff08\u975e\u6cd5\u53c2\u6570\u5f02\u5e38\uff09\n\nIndexOutOfBoundsException \uff08\u4e0b\u6807\u8d8a\u754c\u5f02\u5e38\uff09\n\nNullPointerException \uff08\u7a7a\u6307\u9488\u5f02\u5e38\uff09\n\nSecurityException \uff08\u5b89\u5168\u5f02\u5e38\uff09\n\n\n50\u3001\u9610\u8ff0final\u3001finally\u3001finalize\u7684\u533a\u522b\u3002\n\uff081\uff09final\uff1a\n\u4fee\u9970\u7b26\uff08\u5173\u952e\u5b57\uff09\u6709\u4e09\u79cd\u7528\u6cd5\uff1a\n\u5982\u679c\u4e00\u4e2a\u7c7b\u88ab\u58f0\u660e\u4e3afinal\uff0c\u610f\u5473\u7740\u5b83\u4e0d\u80fd\u518d\u6d3e\u751f\u51fa\u65b0\u7684\u5b50\u7c7b\uff0c\u5373\u4e0d\u80fd\u88ab\u7ee7\u627f\uff0c\u56e0\u6b64\u5b83\u548cabstract\u662f\u53cd\u4e49\u8bcd\u3002\n\u5c06\u53d8\u91cf\u58f0\u660e\u4e3afinal\uff0c\u53ef\u4ee5\u4fdd\u8bc1\u5b83\u4eec\u5728\u4f7f\u7528\u4e2d\u4e0d\u88ab\u6539\u53d8\uff0c\u88ab\u58f0\u660e\u4e3afinal\u7684\u53d8\u91cf\u5fc5\u987b\u5728\u58f0\u660e\u65f6\u7ed9\u5b9a\u521d\u503c\uff0c\u800c\u5728\u4ee5\u540e\u7684\u5f15\u7528\u4e2d\u53ea\u80fd\u8bfb\u53d6\u4e0d\u53ef\u4fee\u6539\u3002\n\u88ab\u58f0\u660e\u4e3afinal\u7684\u65b9\u6cd5\u4e5f\u540c\u6837\u53ea\u80fd\u4f7f\u7528\uff0c\u4e0d\u80fd\u5728\u5b50\u7c7b\u4e2d\u88ab\u91cd\u5199\u3002\n\uff082\uff09finally\uff1a\n\u901a\u5e38\u653e\u5728try\u2026catch\u2026\u7684\u540e\u9762\u6784\u9020\u603b\u662f\u6267\u884c\u4ee3\u7801\u5757\uff0c\u8fd9\u5c31\u610f\u5473\u7740\u7a0b\u5e8f\u65e0\u8bba\u6b63\u5e38\u6267\u884c\u8fd8\u662f\u53d1\u751f\u5f02\u5e38\uff0c\u8fd9\u91cc\u7684\u4ee3\u7801\u53ea\u8981JVM\u4e0d\u5173\u95ed\u90fd\u80fd\u6267\u884c\uff0c\u53ef\u4ee5\u5c06\u91ca\u653e\u5916\u90e8\u8d44\u6e90\u7684\u4ee3\u7801\u5199\u5728finally\u5757\u4e2d\u3002\n\uff083\uff09finalize\uff1a\nObject\u7c7b\u4e2d\u5b9a\u4e49\u7684\u65b9\u6cd5\uff0cJava\u4e2d\u5141\u8bb8\u4f7f\u7528finalize()\u65b9\u6cd5\u5728\u5783\u573e\u6536\u96c6\u5668\u5c06\u5bf9\u8c61\u4ece\u5185\u5b58\u4e2d\u6e05\u9664\u51fa\u53bb\u4e4b\u524d\u505a\u5fc5\u8981\u7684\u6e05\u7406\u5de5\u4f5c\u3002\u8fd9\u4e2a\u65b9\u6cd5\u662f\u7531\u5783\u573e\u6536\u96c6\u5668\u5728\u9500\u6bc1\u5bf9\u8c61\u65f6\u8c03\u7528\u7684\uff0c\u901a\u8fc7\u91cd\u5199finalize()\u65b9\u6cd5\u53ef\u4ee5\u6574\u7406\u7cfb\u7edf\u8d44\u6e90\u6216\u8005\u6267\u884c\u5176\u4ed6\u6e05\u7406\u5de5\u4f5c\u3002\n51\u3001\u7c7bExampleA\u7ee7\u627fException\uff0c\u7c7bExampleB\u7ee7\u627fExampleA\u3002\u6709\u5982\u4e0b\u4ee3\u7801\u7247\u65ad\uff1a\n\n    try {\n        throw new ExampleB(\"b\")\n    } catch\uff08ExampleA e\uff09{\n        System.out.println(\"ExampleA\");\n    } catch\uff08Exception e\uff09{\n        System.out.println(\"Exception\");\n    }\n\u8bf7\u95ee\u6267\u884c\u6b64\u6bb5\u4ee3\u7801\u7684\u8f93\u51fa\u662f\u4ec0\u4e48\uff1f\n\u7b54\uff1a\u8f93\u51fa\uff1aExampleA\u3002\uff08\u6839\u636e\u91cc\u6c0f\u4ee3\u6362\u539f\u5219[\u80fd\u4f7f\u7528\u7236\u7c7b\u578b\u7684\u5730\u65b9\u4e00\u5b9a\u80fd\u4f7f\u7528\u5b50\u7c7b\u578b]\uff0c\u6293\u53d6ExampleA\u7c7b\u578b\u5f02\u5e38\u7684catch\u5757\u80fd\u591f\u6293\u4f4ftry\u5757\u4e2d\u629b\u51fa\u7684ExampleB\u7c7b\u578b\u7684\u5f02\u5e38\uff09\n\u9762\u8bd5\u9898 - \u8bf4\u51fa\u4e0b\u9762\u4ee3\u7801\u7684\u8fd0\u884c\u7ed3\u679c\u3002\uff08\u6b64\u9898\u7684\u51fa\u5904\u662f\u300aJava\u7f16\u7a0b\u601d\u60f3\u300b\u4e00\u4e66\uff09\n\n    class Annoyance extends Exception {}\n    class Sneeze extends Annoyance {}\n\n    class Human {\n\n        public static void main(String[] args) \n            throws Exception {\n            try {\n                try {\n                    throw new Sneeze();\n                } \n                catch ( Annoyance a ) {\n                    System.out.println(\"Caught Annoyance\");\n                    throw a;\n                }\n            } \n            catch ( Sneeze s ) {\n                System.out.println(\"Caught Sneeze\");\n                return ;\n            }\n            finally {\n                System.out.println(\"Hello World!\");\n            }\n        }\n    }\n52\u3001List\u3001Set\u3001Map\u662f\u5426\u7ee7\u627f\u81eaCollection\u63a5\u53e3\uff1f\n\u7b54\uff1aList\u3001Set \u662f\uff0cMap \u4e0d\u662f\u3002Map\u662f\u952e\u503c\u5bf9\u6620\u5c04\u5bb9\u5668\uff0c\u4e0eList\u548cSet\u6709\u660e\u663e\u7684\u533a\u522b\uff0c\u800cSet\u5b58\u50a8\u7684\u96f6\u6563\u7684\u5143\u7d20\u4e14\u4e0d\u5141\u8bb8\u6709\u91cd\u590d\u5143\u7d20\uff08\u6570\u5b66\u4e2d\u7684\u96c6\u5408\u4e5f\u662f\u5982\u6b64\uff09\uff0cList\u662f\u7ebf\u6027\u7ed3\u6784\u7684\u5bb9\u5668\uff0c\u9002\u7528\u4e8e\u6309\u6570\u503c\u7d22\u5f15\u8bbf\u95ee\u5143\u7d20\u7684\u60c5\u5f62\u3002\n53\u3001\u9610\u8ff0ArrayList\u3001Vector\u3001LinkedList\u7684\u5b58\u50a8\u6027\u80fd\u548c\u7279\u6027\u3002\n\u7b54\uff1aArrayList \u548cVector\u90fd\u662f\u4f7f\u7528\u6570\u7ec4\u65b9\u5f0f\u5b58\u50a8\u6570\u636e\uff0c\u6b64\u6570\u7ec4\u5143\u7d20\u6570\u5927\u4e8e\u5b9e\u9645\u5b58\u50a8\u7684\u6570\u636e\u4ee5\u4fbf\u589e\u52a0\u548c\u63d2\u5165\u5143\u7d20\uff0c\u5b83\u4eec\u90fd\u5141\u8bb8\u76f4\u63a5\u6309\u5e8f\u53f7\u7d22\u5f15\u5143\u7d20\uff0c\u4f46\u662f\u63d2\u5165\u5143\u7d20\u8981\u6d89\u53ca\u6570\u7ec4\u5143\u7d20\u79fb\u52a8\u7b49\u5185\u5b58\u64cd\u4f5c\uff0c\u6240\u4ee5\u7d22\u5f15\u6570\u636e\u5feb\u800c\u63d2\u5165\u6570\u636e\u6162\uff0cVector\u4e2d\u7684\u65b9\u6cd5\u7531\u4e8e\u6dfb\u52a0\u4e86synchronized\u4fee\u9970\uff0c\u56e0\u6b64Vector\u662f\u7ebf\u7a0b\u5b89\u5168\u7684\u5bb9\u5668\uff0c\u4f46\u6027\u80fd\u4e0a\u8f83ArrayList\u5dee\uff0c\u56e0\u6b64\u5df2\u7ecf\u662fJava\u4e2d\u7684\u9057\u7559\u5bb9\u5668\u3002\nLinkedList\u4f7f\u7528\u53cc\u5411\u94fe\u8868\u5b9e\u73b0\u5b58\u50a8\uff08\u5c06\u5185\u5b58\u4e2d\u96f6\u6563\u7684\u5185\u5b58\u5355\u5143\u901a\u8fc7\u9644\u52a0\u7684\u5f15\u7528\u5173\u8054\u8d77\u6765\uff0c\u5f62\u6210\u4e00\u4e2a\u53ef\u4ee5\u6309\u5e8f\u53f7\u7d22\u5f15\u7684\u7ebf\u6027\u7ed3\u6784\uff0c\u8fd9\u79cd\u94fe\u5f0f\u5b58\u50a8\u65b9\u5f0f\u4e0e\u6570\u7ec4\u7684\u8fde\u7eed\u5b58\u50a8\u65b9\u5f0f\u76f8\u6bd4\uff0c\u5185\u5b58\u7684\u5229\u7528\u7387\u66f4\u9ad8\uff09\uff0c\u6309\u5e8f\u53f7\u7d22\u5f15\u6570\u636e\u9700\u8981\u8fdb\u884c\u524d\u5411\u6216\u540e\u5411\u904d\u5386\uff0c\u4f46\u662f\u63d2\u5165\u6570\u636e\u65f6\u53ea\u9700\u8981\u8bb0\u5f55\u672c\u9879\u7684\u524d\u540e\u9879\u5373\u53ef\uff0c\u6240\u4ee5\u63d2\u5165\u901f\u5ea6\u8f83\u5feb\u3002\nVector\u5c5e\u4e8e\u9057\u7559\u5bb9\u5668\uff08Java\u65e9\u671f\u7684\u7248\u672c\u4e2d\u63d0\u4f9b\u7684\u5bb9\u5668\uff0c\u9664\u6b64\u4e4b\u5916\uff0cHashtable\u3001Dictionary\u3001BitSet\u3001Stack\u3001Properties\u90fd\u662f\u9057\u7559\u5bb9\u5668\uff09\uff0c\u5df2\u7ecf\u4e0d\u63a8\u8350\u4f7f\u7528\uff0c\u4f46\u662f\u7531\u4e8eArrayList\u548cLinkedListed\u90fd\u662f\u975e\u7ebf\u7a0b\u5b89\u5168\u7684\uff0c\u5982\u679c\u9047\u5230\u591a\u4e2a\u7ebf\u7a0b\u64cd\u4f5c\u540c\u4e00\u4e2a\u5bb9\u5668\u7684\u573a\u666f\uff0c\u5219\u53ef\u4ee5\u901a\u8fc7\u5de5\u5177\u7c7bCollections\u4e2d\u7684synchronizedList\u65b9\u6cd5\u5c06\u5176\u8f6c\u6362\u6210\u7ebf\u7a0b\u5b89\u5168\u7684\u5bb9\u5668\u540e\u518d\u4f7f\u7528\uff08\u8fd9\u662f\u5bf9\u88c5\u6f62\u6a21\u5f0f\u7684\u5e94\u7528\uff0c\u5c06\u5df2\u6709\u5bf9\u8c61\u4f20\u5165\u53e6\u4e00\u4e2a\u7c7b\u7684\u6784\u9020\u5668\u4e2d\u521b\u5efa\u65b0\u7684\u5bf9\u8c61\u6765\u589e\u5f3a\u5b9e\u73b0\uff09\u3002\n\u8865\u5145\uff1a\u9057\u7559\u5bb9\u5668\u4e2d\u7684Properties\u7c7b\u548cStack\u7c7b\u5728\u8bbe\u8ba1\u4e0a\u6709\u4e25\u91cd\u7684\u95ee\u9898\uff0cProperties\u662f\u4e00\u4e2a\u952e\u548c\u503c\u90fd\u662f\u5b57\u7b26\u4e32\u7684\u7279\u6b8a\u7684\u952e\u503c\u5bf9\u6620\u5c04\uff0c\u5728\u8bbe\u8ba1\u4e0a\u5e94\u8be5\u662f\u5173\u8054\u4e00\u4e2aHashtable\u5e76\u5c06\u5176\u4e24\u4e2a\u6cdb\u578b\u53c2\u6570\u8bbe\u7f6e\u4e3aString\u7c7b\u578b\uff0c\u4f46\u662fJava API\u4e2d\u7684Properties\u76f4\u63a5\u7ee7\u627f\u4e86Hashtable\uff0c\u8fd9\u5f88\u660e\u663e\u662f\u5bf9\u7ee7\u627f\u7684\u6ee5\u7528\u3002\u8fd9\u91cc\u590d\u7528\u4ee3\u7801\u7684\u65b9\u5f0f\u5e94\u8be5\u662fHas-A\u5173\u7cfb\u800c\u4e0d\u662fIs-A\u5173\u7cfb\uff0c\u53e6\u4e00\u65b9\u9762\u5bb9\u5668\u90fd\u5c5e\u4e8e\u5de5\u5177\u7c7b\uff0c\u7ee7\u627f\u5de5\u5177\u7c7b\u672c\u8eab\u5c31\u662f\u4e00\u4e2a\u9519\u8bef\u7684\u505a\u6cd5\uff0c\u4f7f\u7528\u5de5\u5177\u7c7b\u6700\u597d\u7684\u65b9\u5f0f\u662fHas-A\u5173\u7cfb\uff08\u5173\u8054\uff09\u6216Use-A\u5173\u7cfb\uff08\u4f9d\u8d56\uff09\u3002\u540c\u7406\uff0cStack\u7c7b\u7ee7\u627fVector\u4e5f\u662f\u4e0d\u6b63\u786e\u7684\u3002Sun\u516c\u53f8\u7684\u5de5\u7a0b\u5e08\u4eec\u4e5f\u4f1a\u72af\u8fd9\u79cd\u4f4e\u7ea7\u9519\u8bef\uff0c\u8ba9\u4eba\u550f\u5618\u4e0d\u5df2\u3002\n54\u3001Collection\u548cCollections\u7684\u533a\u522b\uff1f\n\u7b54\uff1aCollection\u662f\u4e00\u4e2a\u63a5\u53e3\uff0c\u5b83\u662fSet\u3001List\u7b49\u5bb9\u5668\u7684\u7236\u63a5\u53e3\uff1bCollections\u662f\u4e2a\u4e00\u4e2a\u5de5\u5177\u7c7b\uff0c\u63d0\u4f9b\u4e86\u4e00\u7cfb\u5217\u7684\u9759\u6001\u65b9\u6cd5\u6765\u8f85\u52a9\u5bb9\u5668\u64cd\u4f5c\uff0c\u8fd9\u4e9b\u65b9\u6cd5\u5305\u62ec\u5bf9\u5bb9\u5668\u7684\u641c\u7d22\u3001\u6392\u5e8f\u3001\u7ebf\u7a0b\u5b89\u5168\u5316\u7b49\u7b49\u3002\n55\u3001List\u3001Map\u3001Set\u4e09\u4e2a\u63a5\u53e3\u5b58\u53d6\u5143\u7d20\u65f6\uff0c\u5404\u6709\u4ec0\u4e48\u7279\u70b9\uff1f\n\u7b54\uff1aList\u4ee5\u7279\u5b9a\u7d22\u5f15\u6765\u5b58\u53d6\u5143\u7d20\uff0c\u53ef\u4ee5\u6709\u91cd\u590d\u5143\u7d20\u3002\nSet\u4e0d\u80fd\u5b58\u653e\u91cd\u590d\u5143\u7d20\uff08\u7528\u5bf9\u8c61\u7684equals()\u65b9\u6cd5\u6765\u533a\u5206\u5143\u7d20\u662f\u5426\u91cd\u590d\uff09\u3002\nMap\u4fdd\u5b58\u952e\u503c\u5bf9\uff08key-value pair\uff09\u6620\u5c04\uff0c\u6620\u5c04\u5173\u7cfb\u53ef\u4ee5\u662f\u4e00\u5bf9\u4e00\u6216\u591a\u5bf9\u4e00\u3002\nSet\u548cMap\u5bb9\u5668\u90fd\u6709\u57fa\u4e8e\u54c8\u5e0c\u5b58\u50a8\u548c\u6392\u5e8f\u6811\u7684\u4e24\u79cd\u5b9e\u73b0\u7248\u672c\uff0c\u57fa\u4e8e\u54c8\u5e0c\u5b58\u50a8\u7684\u7248\u672c\u7406\u8bba\u5b58\u53d6\u65f6\u95f4\u590d\u6742\u5ea6\u4e3aO(1)\uff0c\u800c\u57fa\u4e8e\u6392\u5e8f\u6811\u7248\u672c\u7684\u5b9e\u73b0\u5728\u63d2\u5165\u6216\u5220\u9664\u5143\u7d20\u65f6\u4f1a\u6309\u7167\u5143\u7d20\u6216\u5143\u7d20\u7684\u952e\uff08key\uff09\u6784\u6210\u6392\u5e8f\u6811\u4ece\u800c\u8fbe\u5230\u6392\u5e8f\u548c\u53bb\u91cd\u7684\u6548\u679c\u3002\n56\u3001TreeMap\u548cTreeSet\u5728\u6392\u5e8f\u65f6\u5982\u4f55\u6bd4\u8f83\u5143\u7d20\uff1fCollections\u5de5\u5177\u7c7b\u4e2d\u7684sort()\u65b9\u6cd5\u5982\u4f55\u6bd4\u8f83\u5143\u7d20\uff1f\n\u7b54\uff1aTreeSet\u8981\u6c42\u5b58\u653e\u7684\u5bf9\u8c61\u6240\u5c5e\u7684\u7c7b\u5fc5\u987b\u5b9e\u73b0Comparable\u63a5\u53e3\uff0c\u8be5\u63a5\u53e3\u63d0\u4f9b\u4e86\u6bd4\u8f83\u5143\u7d20\u7684compareTo()\u65b9\u6cd5\uff0c\u5f53\u63d2\u5165\u5143\u7d20\u65f6\u4f1a\u56de\u8c03\u8be5\u65b9\u6cd5\u6bd4\u8f83\u5143\u7d20\u7684\u5927\u5c0f\u3002\nTreeMap\u8981\u6c42\u5b58\u653e\u7684\u952e\u503c\u5bf9\u6620\u5c04\u7684\u952e\u5fc5\u987b\u5b9e\u73b0Comparable\u63a5\u53e3\u4ece\u800c\u6839\u636e\u952e\u5bf9\u5143\u7d20\u8fdb\u884c\u6392\u5e8f\u3002\nCollections\u5de5\u5177\u7c7b\u7684sort\u65b9\u6cd5\u6709\u4e24\u79cd\u91cd\u8f7d\u7684\u5f62\u5f0f\uff0c\u7b2c\u4e00\u79cd\u8981\u6c42\u4f20\u5165\u7684\u5f85\u6392\u5e8f\u5bb9\u5668\u4e2d\u5b58\u653e\u7684\u5bf9\u8c61\u6bd4\u8f83\u5b9e\u73b0Comparable\u63a5\u53e3\u4ee5\u5b9e\u73b0\u5143\u7d20\u7684\u6bd4\u8f83\uff1b\u7b2c\u4e8c\u79cd\u4e0d\u5f3a\u5236\u6027\u7684\u8981\u6c42\u5bb9\u5668\u4e2d\u7684\u5143\u7d20\u5fc5\u987b\u53ef\u6bd4\u8f83\uff0c\u4f46\u662f\u8981\u6c42\u4f20\u5165\u7b2c\u4e8c\u4e2a\u53c2\u6570\uff0c\u53c2\u6570\u662fComparator\u63a5\u53e3\u7684\u5b50\u7c7b\u578b\uff08\u9700\u8981\u91cd\u5199compare\u65b9\u6cd5\u5b9e\u73b0\u5143\u7d20\u7684\u6bd4\u8f83\uff09\uff0c\u76f8\u5f53\u4e8e\u4e00\u4e2a\u4e34\u65f6\u5b9a\u4e49\u7684\u6392\u5e8f\u89c4\u5219\uff0c\u5176\u5b9e\u5c31\u662f\u901a\u8fc7\u63a5\u53e3\u6ce8\u5165\u6bd4\u8f83\u5143\u7d20\u5927\u5c0f\u7684\u7b97\u6cd5\uff0c\u4e5f\u662f\u5bf9\u56de\u8c03\u6a21\u5f0f\u7684\u5e94\u7528\uff08Java\u4e2d\u5bf9\u51fd\u6570\u5f0f\u7f16\u7a0b\u7684\u652f\u6301\uff09\u3002\n\u4f8b\u5b501\uff1a\n\n    public class Student implements Comparable&lt;Student&gt; {\n        private String name;        // \u59d3\u540d\n        private int age;            // \u5e74\u9f84\n\n        public Student(String name, int age) {\n            this.name = name;\n            this.age = age;\n        }\n\n        @Override\n        public String toString() {\n            return \"Student [name=\" + name + \", age=\" + age + \"]\";\n        }\n\n        @Override\n        public int compareTo(Student o) {\n            return this.age - o.age; // \u6bd4\u8f83\u5e74\u9f84(\u5e74\u9f84\u7684\u5347\u5e8f)\n        }\n\n    }\n\n    import java.util.Set;\n    import java.util.TreeSet;\n\n    class Test01 {\n\n        public static void main(String[] args) {\n            Set&lt;Student&gt; set = new TreeSet&lt;&gt;();     // Java 7\u7684\u94bb\u77f3\u8bed\u6cd5(\u6784\u9020\u5668\u540e\u9762\u7684\u5c16\u62ec\u53f7\u4e2d\u4e0d\u9700\u8981\u5199\u7c7b\u578b)\n            set.add(new Student(\"Hao LUO\", 33));\n            set.add(new Student(\"XJ WANG\", 32));\n            set.add(new Student(\"Bruce LEE\", 60));\n            set.add(new Student(\"Bob YANG\", 22));\n\n            for(Student stu : set) {\n                System.out.println(stu);\n            }\n    //      \u8f93\u51fa\u7ed3\u679c: \n    //      Student [name=Bob YANG, age=22]\n    //      Student [name=XJ WANG, age=32]\n    //      Student [name=Hao LUO, age=33]\n    //      Student [name=Bruce LEE, age=60]\n        }\n    }\n\u4f8b\u5b502\uff1a\n\n    public class Student {\n        private String name;    // \u59d3\u540d\n        private int age;        // \u5e74\u9f84\n\n        public Student(String name, int age) {\n            this.name = name;\n            this.age = age;\n        }\n\n        /**\n         * \u83b7\u53d6\u5b66\u751f\u59d3\u540d\n         */\n        public String getName() {\n            return name;\n        }\n\n        /**\n         * \u83b7\u53d6\u5b66\u751f\u5e74\u9f84\n         */\n        public int getAge() {\n            return age;\n        }\n\n        @Override\n        public String toString() {\n            return \"Student [name=\" + name + \", age=\" + age + \"]\";\n        }\n\n    }\n\n    import java.util.ArrayList;\n    import java.util.Collections;\n    import java.util.Comparator;\n    import java.util.List;\n\n    class Test02 {\n\n        public static void main(String[] args) {\n            List&lt;Student&gt; list = new ArrayList&lt;&gt;();     // Java 7\u7684\u94bb\u77f3\u8bed\u6cd5(\u6784\u9020\u5668\u540e\u9762\u7684\u5c16\u62ec\u53f7\u4e2d\u4e0d\u9700\u8981\u5199\u7c7b\u578b)\n            list.add(new Student(\"Hao LUO\", 33));\n            list.add(new Student(\"XJ WANG\", 32));\n            list.add(new Student(\"Bruce LEE\", 60));\n            list.add(new Student(\"Bob YANG\", 22));\n\n            // \u901a\u8fc7sort\u65b9\u6cd5\u7684\u7b2c\u4e8c\u4e2a\u53c2\u6570\u4f20\u5165\u4e00\u4e2aComparator\u63a5\u53e3\u5bf9\u8c61\n            // \u76f8\u5f53\u4e8e\u662f\u4f20\u5165\u4e00\u4e2a\u6bd4\u8f83\u5bf9\u8c61\u5927\u5c0f\u7684\u7b97\u6cd5\u5230sort\u65b9\u6cd5\u4e2d\n            // \u7531\u4e8eJava\u4e2d\u6ca1\u6709\u51fd\u6570\u6307\u9488\u3001\u4eff\u51fd\u6570\u3001\u59d4\u6258\u8fd9\u6837\u7684\u6982\u5ff5\n            // \u56e0\u6b64\u8981\u5c06\u4e00\u4e2a\u7b97\u6cd5\u4f20\u5165\u4e00\u4e2a\u65b9\u6cd5\u4e2d\u552f\u4e00\u7684\u9009\u62e9\u5c31\u662f\u901a\u8fc7\u63a5\u53e3\u56de\u8c03\n            Collections.sort(list, new Comparator&lt;Student&gt; () {\n\n                @Override\n                public int compare(Student o1, Student o2) {\n                    return o1.getName().compareTo(o2.getName());    // \u6bd4\u8f83\u5b66\u751f\u59d3\u540d\n                }\n            });\n\n            for(Student stu : list) {\n                System.out.println(stu);\n            }\n    //      \u8f93\u51fa\u7ed3\u679c: \n    //      Student [name=Bob YANG, age=22]\n    //      Student [name=Bruce LEE, age=60]\n    //      Student [name=Hao LUO, age=33]\n    //      Student [name=XJ WANG, age=32]\n        }\n    }\n57\u3001Thread\u7c7b\u7684sleep()\u65b9\u6cd5\u548c\u5bf9\u8c61\u7684wait()\u65b9\u6cd5\u90fd\u53ef\u4ee5\u8ba9\u7ebf\u7a0b\u6682\u505c\u6267\u884c\uff0c\u5b83\u4eec\u6709\u4ec0\u4e48\u533a\u522b?\n\u7b54\uff1asleep()\u65b9\u6cd5\uff08\u4f11\u7720\uff09\u662f\u7ebf\u7a0b\u7c7b\uff08Thread\uff09\u7684\u9759\u6001\u65b9\u6cd5\uff0c\u8c03\u7528\u6b64\u65b9\u6cd5\u4f1a\u8ba9\u5f53\u524d\u7ebf\u7a0b\u6682\u505c\u6267\u884c\u6307\u5b9a\u7684\u65f6\u95f4\uff0c\u5c06\u6267\u884c\u673a\u4f1a\uff08CPU\uff09\u8ba9\u7ed9\u5176\u4ed6\u7ebf\u7a0b\uff0c\u4f46\u662f\u5bf9\u8c61\u7684\u9501\u4f9d\u7136\u4fdd\u6301\uff0c\u56e0\u6b64\u4f11\u7720\u65f6\u95f4\u7ed3\u675f\u540e\u4f1a\u81ea\u52a8\u6062\u590d\uff08\u7ebf\u7a0b\u56de\u5230\u5c31\u7eea\u72b6\u6001\uff0c\u8bf7\u53c2\u8003\u7b2c66\u9898\u4e2d\u7684\u7ebf\u7a0b\u72b6\u6001\u8f6c\u6362\u56fe\uff09\u3002\nwait()\u662fObject\u7c7b\u7684\u65b9\u6cd5\uff0c\u8c03\u7528\u5bf9\u8c61\u7684wait()\u65b9\u6cd5\u5bfc\u81f4\u5f53\u524d\u7ebf\u7a0b\u653e\u5f03\u5bf9\u8c61\u7684\u9501\uff08\u7ebf\u7a0b\u6682\u505c\u6267\u884c\uff09\uff0c\u8fdb\u5165\u5bf9\u8c61\u7684\u7b49\u5f85\u6c60\uff08wait pool\uff09\uff0c\u53ea\u6709\u8c03\u7528\u5bf9\u8c61\u7684notify()\u65b9\u6cd5\uff08\u6216notifyAll()\u65b9\u6cd5\uff09\u65f6\u624d\u80fd\u5524\u9192\u7b49\u5f85\u6c60\u4e2d\u7684\u7ebf\u7a0b\u8fdb\u5165\u7b49\u9501\u6c60\uff08lock pool\uff09\uff0c\u5982\u679c\u7ebf\u7a0b\u91cd\u65b0\u83b7\u5f97\u5bf9\u8c61\u7684\u9501\u5c31\u53ef\u4ee5\u8fdb\u5165\u5c31\u7eea\u72b6\u6001\u3002\n\u8865\u5145\uff1a\u53ef\u80fd\u4e0d\u5c11\u4eba\u5bf9\u4ec0\u4e48\u662f\u8fdb\u7a0b\uff0c\u4ec0\u4e48\u662f\u7ebf\u7a0b\u8fd8\u6bd4\u8f83\u6a21\u7cca\uff0c\u5bf9\u4e8e\u4e3a\u4ec0\u4e48\u9700\u8981\u591a\u7ebf\u7a0b\u7f16\u7a0b\u4e5f\u4e0d\u662f\u7279\u522b\u7406\u89e3\u3002\u7b80\u5355\u7684\u8bf4\uff1a\u8fdb\u7a0b\u662f\u5177\u6709\u4e00\u5b9a\u72ec\u7acb\u529f\u80fd\u7684\u7a0b\u5e8f\u5173\u4e8e\u67d0\u4e2a\u6570\u636e\u96c6\u5408\u4e0a\u7684\u4e00\u6b21\u8fd0\u884c\u6d3b\u52a8\uff0c\u662f\u64cd\u4f5c\u7cfb\u7edf\u8fdb\u884c\u8d44\u6e90\u5206\u914d\u548c\u8c03\u5ea6\u7684\u4e00\u4e2a\u72ec\u7acb\u5355\u4f4d\uff1b\u7ebf\u7a0b\u662f\u8fdb\u7a0b\u7684\u4e00\u4e2a\u5b9e\u4f53\uff0c\u662fCPU\u8c03\u5ea6\u548c\u5206\u6d3e\u7684\u57fa\u672c\u5355\u4f4d\uff0c\u662f\u6bd4\u8fdb\u7a0b\u66f4\u5c0f\u7684\u80fd\u72ec\u7acb\u8fd0\u884c\u7684\u57fa\u672c\u5355\u4f4d\u3002\u7ebf\u7a0b\u7684\u5212\u5206\u5c3a\u5ea6\u5c0f\u4e8e\u8fdb\u7a0b\uff0c\u8fd9\u4f7f\u5f97\u591a\u7ebf\u7a0b\u7a0b\u5e8f\u7684\u5e76\u53d1\u6027\u9ad8\uff1b\u8fdb\u7a0b\u5728\u6267\u884c\u65f6\u901a\u5e38\u62e5\u6709\u72ec\u7acb\u7684\u5185\u5b58\u5355\u5143\uff0c\u800c\u7ebf\u7a0b\u4e4b\u95f4\u53ef\u4ee5\u5171\u4eab\u5185\u5b58\u3002\u4f7f\u7528\u591a\u7ebf\u7a0b\u7684\u7f16\u7a0b\u901a\u5e38\u80fd\u591f\u5e26\u6765\u66f4\u597d\u7684\u6027\u80fd\u548c\u7528\u6237\u4f53\u9a8c\uff0c\u4f46\u662f\u591a\u7ebf\u7a0b\u7684\u7a0b\u5e8f\u5bf9\u4e8e\u5176\u4ed6\u7a0b\u5e8f\u662f\u4e0d\u53cb\u597d\u7684\uff0c\u56e0\u4e3a\u5b83\u53ef\u80fd\u5360\u7528\u4e86\u66f4\u591a\u7684CPU\u8d44\u6e90\u3002\u5f53\u7136\uff0c\u4e5f\u4e0d\u662f\u7ebf\u7a0b\u8d8a\u591a\uff0c\u7a0b\u5e8f\u7684\u6027\u80fd\u5c31\u8d8a\u597d\uff0c\u56e0\u4e3a\u7ebf\u7a0b\u4e4b\u95f4\u7684\u8c03\u5ea6\u548c\u5207\u6362\u4e5f\u4f1a\u6d6a\u8d39CPU\u65f6\u95f4\u3002\u65f6\u4e0b\u5f88\u65f6\u9ae6\u7684Node.js\u5c31\u91c7\u7528\u4e86\u5355\u7ebf\u7a0b\u5f02\u6b65I/O\u7684\u5de5\u4f5c\u6a21\u5f0f\u3002\n58\u3001\u7ebf\u7a0b\u7684sleep()\u65b9\u6cd5\u548cyield()\u65b9\u6cd5\u6709\u4ec0\u4e48\u533a\u522b\uff1f\n\u7b54\uff1a\u2460 sleep()\u65b9\u6cd5\u7ed9\u5176\u4ed6\u7ebf\u7a0b\u8fd0\u884c\u673a\u4f1a\u65f6\u4e0d\u8003\u8651\u7ebf\u7a0b\u7684\u4f18\u5148\u7ea7\uff0c\u56e0\u6b64\u4f1a\u7ed9\u4f4e\u4f18\u5148\u7ea7\u7684\u7ebf\u7a0b\u4ee5\u8fd0\u884c\u7684\u673a\u4f1a\uff1byield()\u65b9\u6cd5\u53ea\u4f1a\u7ed9\u76f8\u540c\u4f18\u5148\u7ea7\u6216\u66f4\u9ad8\u4f18\u5148\u7ea7\u7684\u7ebf\u7a0b\u4ee5\u8fd0\u884c\u7684\u673a\u4f1a\uff1b\n\u2461 \u7ebf\u7a0b\u6267\u884csleep()\u65b9\u6cd5\u540e\u8f6c\u5165\u963b\u585e\uff08blocked\uff09\u72b6\u6001\uff0c\u800c\u6267\u884cyield()\u65b9\u6cd5\u540e\u8f6c\u5165\u5c31\u7eea\uff08ready\uff09\u72b6\u6001\uff1b\n\u2462 sleep()\u65b9\u6cd5\u58f0\u660e\u629b\u51faInterruptedException\uff0c\u800cyield()\u65b9\u6cd5\u6ca1\u6709\u58f0\u660e\u4efb\u4f55\u5f02\u5e38\uff1b\n\u2463 sleep()\u65b9\u6cd5\u6bd4yield()\u65b9\u6cd5\uff08\u8ddf\u64cd\u4f5c\u7cfb\u7edfCPU\u8c03\u5ea6\u76f8\u5173\uff09\u5177\u6709\u66f4\u597d\u7684\u53ef\u79fb\u690d\u6027\u3002\n59\u3001\u5f53\u4e00\u4e2a\u7ebf\u7a0b\u8fdb\u5165\u4e00\u4e2a\u5bf9\u8c61\u7684synchronized\u65b9\u6cd5A\u4e4b\u540e\uff0c\u5176\u5b83\u7ebf\u7a0b\u662f\u5426\u53ef\u8fdb\u5165\u6b64\u5bf9\u8c61\u7684synchronized\u65b9\u6cd5B\uff1f\n\u7b54\uff1a\u4e0d\u80fd\u3002\u5176\u5b83\u7ebf\u7a0b\u53ea\u80fd\u8bbf\u95ee\u8be5\u5bf9\u8c61\u7684\u975e\u540c\u6b65\u65b9\u6cd5\uff0c\u540c\u6b65\u65b9\u6cd5\u5219\u4e0d\u80fd\u8fdb\u5165\u3002\u56e0\u4e3a\u975e\u9759\u6001\u65b9\u6cd5\u4e0a\u7684synchronized\u4fee\u9970\u7b26\u8981\u6c42\u6267\u884c\u65b9\u6cd5\u65f6\u8981\u83b7\u5f97\u5bf9\u8c61\u7684\u9501\uff0c\u5982\u679c\u5df2\u7ecf\u8fdb\u5165A\u65b9\u6cd5\u8bf4\u660e\u5bf9\u8c61\u9501\u5df2\u7ecf\u88ab\u53d6\u8d70\uff0c\u90a3\u4e48\u8bd5\u56fe\u8fdb\u5165B\u65b9\u6cd5\u7684\u7ebf\u7a0b\u5c31\u53ea\u80fd\u5728\u7b49\u9501\u6c60\uff08\u6ce8\u610f\u4e0d\u662f\u7b49\u5f85\u6c60\u54e6\uff09\u4e2d\u7b49\u5f85\u5bf9\u8c61\u7684\u9501\u3002\n60\u3001\u8bf7\u8bf4\u51fa\u4e0e\u7ebf\u7a0b\u540c\u6b65\u4ee5\u53ca\u7ebf\u7a0b\u8c03\u5ea6\u76f8\u5173\u7684\u65b9\u6cd5\u3002\n\nwait()\uff1a\u4f7f\u4e00\u4e2a\u7ebf\u7a0b\u5904\u4e8e\u7b49\u5f85\uff08\u963b\u585e\uff09\u72b6\u6001\uff0c\u5e76\u4e14\u91ca\u653e\u6240\u6301\u6709\u7684\u5bf9\u8c61\u7684\u9501\uff1b\n\nsleep()\uff1a\u4f7f\u4e00\u4e2a\u6b63\u5728\u8fd0\u884c\u7684\u7ebf\u7a0b\u5904\u4e8e\u7761\u7720\u72b6\u6001\uff0c\u662f\u4e00\u4e2a\u9759\u6001\u65b9\u6cd5\uff0c\u8c03\u7528\u6b64\u65b9\u6cd5\u8981\u5904\u7406InterruptedException\u5f02\u5e38\uff1b\n\nnotify()\uff1a\u5524\u9192\u4e00\u4e2a\u5904\u4e8e\u7b49\u5f85\u72b6\u6001\u7684\u7ebf\u7a0b\uff0c\u5f53\u7136\u5728\u8c03\u7528\u6b64\u65b9\u6cd5\u7684\u65f6\u5019\uff0c\u5e76\u4e0d\u80fd\u786e\u5207\u7684\u5524\u9192\u67d0\u4e00\u4e2a\u7b49\u5f85\u72b6\u6001\u7684\u7ebf\u7a0b\uff0c\u800c\u662f\u7531JVM\u786e\u5b9a\u5524\u9192\u54ea\u4e2a\u7ebf\u7a0b\uff0c\u800c\u4e14\u4e0e\u4f18\u5148\u7ea7\u65e0\u5173\uff1b\n\nnotityAll()\uff1a\u5524\u9192\u6240\u6709\u5904\u4e8e\u7b49\u5f85\u72b6\u6001\u7684\u7ebf\u7a0b\uff0c\u8be5\u65b9\u6cd5\u5e76\u4e0d\u662f\u5c06\u5bf9\u8c61\u7684\u9501\u7ed9\u6240\u6709\u7ebf\u7a0b\uff0c\u800c\u662f\u8ba9\u5b83\u4eec\u7ade\u4e89\uff0c\u53ea\u6709\u83b7\u5f97\u9501\u7684\u7ebf\u7a0b\u624d\u80fd\u8fdb\u5165\u5c31\u7eea\u72b6\u6001\uff1b\n\n\n\u63d0\u793a\uff1a\u5173\u4e8eJava\u591a\u7ebf\u7a0b\u548c\u5e76\u53d1\u7f16\u7a0b\u7684\u95ee\u9898\uff0c\u5efa\u8bae\u5927\u5bb6\u770b\u6211\u7684\u53e6\u4e00\u7bc7\u6587\u7ae0\u300a\u5173\u4e8eJava\u5e76\u53d1\u7f16\u7a0b\u7684\u603b\u7ed3\u548c\u601d\u8003\u300b\u3002\n\u8865\u5145\uff1aJava 5\u901a\u8fc7Lock\u63a5\u53e3\u63d0\u4f9b\u4e86\u663e\u5f0f\u7684\u9501\u673a\u5236\uff08explicit lock\uff09\uff0c\u589e\u5f3a\u4e86\u7075\u6d3b\u6027\u4ee5\u53ca\u5bf9\u7ebf\u7a0b\u7684\u534f\u8c03\u3002Lock\u63a5\u53e3\u4e2d\u5b9a\u4e49\u4e86\u52a0\u9501\uff08lock()\uff09\u548c\u89e3\u9501\uff08unlock()\uff09\u7684\u65b9\u6cd5\uff0c\u540c\u65f6\u8fd8\u63d0\u4f9b\u4e86newCondition()\u65b9\u6cd5\u6765\u4ea7\u751f\u7528\u4e8e\u7ebf\u7a0b\u4e4b\u95f4\u901a\u4fe1\u7684Condition\u5bf9\u8c61\uff1b\u6b64\u5916\uff0cJava 5\u8fd8\u63d0\u4f9b\u4e86\u4fe1\u53f7\u91cf\u673a\u5236\uff08semaphore\uff09\uff0c\u4fe1\u53f7\u91cf\u53ef\u4ee5\u7528\u6765\u9650\u5236\u5bf9\u67d0\u4e2a\u5171\u4eab\u8d44\u6e90\u8fdb\u884c\u8bbf\u95ee\u7684\u7ebf\u7a0b\u7684\u6570\u91cf\u3002\u5728\u5bf9\u8d44\u6e90\u8fdb\u884c\u8bbf\u95ee\u4e4b\u524d\uff0c\u7ebf\u7a0b\u5fc5\u987b\u5f97\u5230\u4fe1\u53f7\u91cf\u7684\u8bb8\u53ef\uff08\u8c03\u7528Semaphore\u5bf9\u8c61\u7684acquire()\u65b9\u6cd5\uff09\uff1b\u5728\u5b8c\u6210\u5bf9\u8d44\u6e90\u7684\u8bbf\u95ee\u540e\uff0c\u7ebf\u7a0b\u5fc5\u987b\u5411\u4fe1\u53f7\u91cf\u5f52\u8fd8\u8bb8\u53ef\uff08\u8c03\u7528Semaphore\u5bf9\u8c61\u7684release()\u65b9\u6cd5\uff09\u3002\n\u4e0b\u9762\u7684\u4f8b\u5b50\u6f14\u793a\u4e86100\u4e2a\u7ebf\u7a0b\u540c\u65f6\u5411\u4e00\u4e2a\u94f6\u884c\u8d26\u6237\u4e2d\u5b58\u51651\u5143\u94b1\uff0c\u5728\u6ca1\u6709\u4f7f\u7528\u540c\u6b65\u673a\u5236\u548c\u4f7f\u7528\u540c\u6b65\u673a\u5236\u60c5\u51b5\u4e0b\u7684\u6267\u884c\u60c5\u51b5\u3002\n\u94f6\u884c\u8d26\u6237\u7c7b\uff1a\n\n    /**\n     * \u94f6\u884c\u8d26\u6237\n     * @author \u9a86\u660a\n     *\n     */\n    public class Account {\n        private double balance;     // \u8d26\u6237\u4f59\u989d\n\n        /**\n         * \u5b58\u6b3e\n         * @param money \u5b58\u5165\u91d1\u989d\n         */\n        public void deposit(double money) {\n            double newBalance = balance + money;\n            try {\n                Thread.sleep(10);   // \u6a21\u62df\u6b64\u4e1a\u52a1\u9700\u8981\u4e00\u6bb5\u5904\u7406\u65f6\u95f4\n            }\n            catch(InterruptedException ex) {\n                ex.printStackTrace();\n            }\n            balance = newBalance;\n        }\n\n        /**\n         * \u83b7\u5f97\u8d26\u6237\u4f59\u989d\n         */\n        public double getBalance() {\n            return balance;\n        }\n    }\n\u5b58\u94b1\u7ebf\u7a0b\u7c7b\uff1a\n\n    /**\n     * \u5b58\u94b1\u7ebf\u7a0b\n     * @author \u9a86\u660a\n     *\n     */\n    public class AddMoneyThread implements Runnable {\n        private Account account;    // \u5b58\u5165\u8d26\u6237\n        private double money;       // \u5b58\u5165\u91d1\u989d\n\n        public AddMoneyThread(Account account, double money) {\n            this.account = account;\n            this.money = money;\n        }\n\n        @Override\n        public void run() {\n            account.deposit(money);\n        }\n\n    }\n\n\u6d4b\u8bd5\u7c7b\uff1a\n\n    import java.util.concurrent.ExecutorService;\n    import java.util.concurrent.Executors;\n\n    public class Test01 {\n\n        public static void main(String[] args) {\n            Account account = new Account();\n            ExecutorService service = Executors.newFixedThreadPool(100);\n\n            for(int i = 1; i &lt;= 100; i++) {\n                service.execute(new AddMoneyThread(account, 1));\n            }\n\n            service.shutdown();\n\n            while(!service.isTerminated()) {}\n\n            System.out.println(\"\u8d26\u6237\u4f59\u989d: \" + account.getBalance());\n        }\n    }\n\u5728\u6ca1\u6709\u540c\u6b65\u7684\u60c5\u51b5\u4e0b\uff0c\u6267\u884c\u7ed3\u679c\u901a\u5e38\u662f\u663e\u793a\u8d26\u6237\u4f59\u989d\u572810\u5143\u4ee5\u4e0b\uff0c\u51fa\u73b0\u8fd9\u79cd\u72b6\u51b5\u7684\u539f\u56e0\u662f\uff0c\u5f53\u4e00\u4e2a\u7ebf\u7a0bA\u8bd5\u56fe\u5b58\u51651\u5143\u7684\u65f6\u5019\uff0c\u53e6\u5916\u4e00\u4e2a\u7ebf\u7a0bB\u4e5f\u80fd\u591f\u8fdb\u5165\u5b58\u6b3e\u7684\u65b9\u6cd5\u4e2d\uff0c\u7ebf\u7a0bB\u8bfb\u53d6\u5230\u7684\u8d26\u6237\u4f59\u989d\u4ecd\u7136\u662f\u7ebf\u7a0bA\u5b58\u51651\u5143\u94b1\u4e4b\u524d\u7684\u8d26\u6237\u4f59\u989d\uff0c\u56e0\u6b64\u4e5f\u662f\u5728\u539f\u6765\u7684\u4f59\u989d0\u4e0a\u9762\u505a\u4e86\u52a01\u5143\u7684\u64cd\u4f5c\uff0c\u540c\u7406\u7ebf\u7a0bC\u4e5f\u4f1a\u505a\u7c7b\u4f3c\u7684\u4e8b\u60c5\uff0c\u6240\u4ee5\u6700\u540e100\u4e2a\u7ebf\u7a0b\u6267\u884c\u7ed3\u675f\u65f6\uff0c\u672c\u6765\u671f\u671b\u8d26\u6237\u4f59\u989d\u4e3a100\u5143\uff0c\u4f46\u5b9e\u9645\u5f97\u5230\u7684\u901a\u5e38\u572810\u5143\u4ee5\u4e0b\uff08\u5f88\u53ef\u80fd\u662f1\u5143\u54e6\uff09\u3002\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\u7684\u529e\u6cd5\u5c31\u662f\u540c\u6b65\uff0c\u5f53\u4e00\u4e2a\u7ebf\u7a0b\u5bf9\u94f6\u884c\u8d26\u6237\u5b58\u94b1\u65f6\uff0c\u9700\u8981\u5c06\u6b64\u8d26\u6237\u9501\u5b9a\uff0c\u5f85\u5176\u64cd\u4f5c\u5b8c\u6210\u540e\u624d\u5141\u8bb8\u5176\u4ed6\u7684\u7ebf\u7a0b\u8fdb\u884c\u64cd\u4f5c\uff0c\u4ee3\u7801\u6709\u5982\u4e0b\u51e0\u79cd\u8c03\u6574\u65b9\u6848\uff1a\n\u5728\u94f6\u884c\u8d26\u6237\u7684\u5b58\u6b3e\uff08deposit\uff09\u65b9\u6cd5\u4e0a\u540c\u6b65\uff08synchronized\uff09\u5173\u952e\u5b57\n\n    /**\n     * \u94f6\u884c\u8d26\u6237\n     * @author \u9a86\u660a\n     *\n     */\n    public class Account {\n        private double balance;     // \u8d26\u6237\u4f59\u989d\n\n        /**\n         * \u5b58\u6b3e\n         * @param money \u5b58\u5165\u91d1\u989d\n         */\n        public synchronized void deposit(double money) {\n            double newBalance = balance + money;\n            try {\n                Thread.sleep(10);   // \u6a21\u62df\u6b64\u4e1a\u52a1\u9700\u8981\u4e00\u6bb5\u5904\u7406\u65f6\u95f4\n            }\n            catch(InterruptedException ex) {\n                ex.printStackTrace();\n            }\n            balance = newBalance;\n        }\n\n        /**\n         * \u83b7\u5f97\u8d26\u6237\u4f59\u989d\n         */\n        public double getBalance() {\n            return balance;\n        }\n    }\n\u5728\u7ebf\u7a0b\u8c03\u7528\u5b58\u6b3e\u65b9\u6cd5\u65f6\u5bf9\u94f6\u884c\u8d26\u6237\u8fdb\u884c\u540c\u6b65\n\n    /**\n     * \u5b58\u94b1\u7ebf\u7a0b\n     * @author \u9a86\u660a\n     *\n     */\n    public class AddMoneyThread implements Runnable {\n        private Account account;    // \u5b58\u5165\u8d26\u6237\n        private double money;       // \u5b58\u5165\u91d1\u989d\n\n        public AddMoneyThread(Account account, double money) {\n            this.account = account;\n            this.money = money;\n        }\n\n        @Override\n        public void run() {\n            synchronized (account) {\n                account.deposit(money); \n            }\n        }\n\n    }\n\u901a\u8fc7Java 5\u663e\u793a\u7684\u9501\u673a\u5236\uff0c\u4e3a\u6bcf\u4e2a\u94f6\u884c\u8d26\u6237\u521b\u5efa\u4e00\u4e2a\u9501\u5bf9\u8c61\uff0c\u5728\u5b58\u6b3e\u64cd\u4f5c\u8fdb\u884c\u52a0\u9501\u548c\u89e3\u9501\u7684\u64cd\u4f5c\n\n    import java.util.concurrent.locks.Lock;\n    import java.util.concurrent.locks.ReentrantLock;\n\n    /**\n     * \u94f6\u884c\u8d26\u6237\n     * \n     * @author \u9a86\u660a\n     *\n     */\n    public class Account {\n        private Lock accountLock = new ReentrantLock();\n        private double balance; // \u8d26\u6237\u4f59\u989d\n\n        /**\n         * \u5b58\u6b3e\n         * \n         * @param money\n         *            \u5b58\u5165\u91d1\u989d\n         */\n        public void deposit(double money) {\n            accountLock.lock();\n            try {\n                double newBalance = balance + money;\n                try {\n                    Thread.sleep(10); // \u6a21\u62df\u6b64\u4e1a\u52a1\u9700\u8981\u4e00\u6bb5\u5904\u7406\u65f6\u95f4\n                }\n                catch (InterruptedException ex) {\n                    ex.printStackTrace();\n                }\n                balance = newBalance;\n            }\n            finally {\n                accountLock.unlock();\n            }\n        }\n\n        /**\n         * \u83b7\u5f97\u8d26\u6237\u4f59\u989d\n         */\n        public double getBalance() {\n            return balance;\n        }\n    }\n\u6309\u7167\u4e0a\u8ff0\u4e09\u79cd\u65b9\u5f0f\u5bf9\u4ee3\u7801\u8fdb\u884c\u4fee\u6539\u540e\uff0c\u91cd\u5199\u6267\u884c\u6d4b\u8bd5\u4ee3\u7801Test01\uff0c\u5c06\u770b\u5230\u6700\u7ec8\u7684\u8d26\u6237\u4f59\u989d\u4e3a100\u5143\u3002\u5f53\u7136\u4e5f\u53ef\u4ee5\u4f7f\u7528Semaphore\u6216CountdownLatch\u6765\u5b9e\u73b0\u540c\u6b65\u3002\n61\u3001\u7f16\u5199\u591a\u7ebf\u7a0b\u7a0b\u5e8f\u6709\u51e0\u79cd\u5b9e\u73b0\u65b9\u5f0f\uff1f\n\u7b54\uff1aJava 5\u4ee5\u524d\u5b9e\u73b0\u591a\u7ebf\u7a0b\u6709\u4e24\u79cd\u5b9e\u73b0\u65b9\u6cd5\uff1a\u4e00\u79cd\u662f\u7ee7\u627fThread\u7c7b\uff1b\u53e6\u4e00\u79cd\u662f\u5b9e\u73b0Runnable\u63a5\u53e3\u3002\n\u4e24\u79cd\u65b9\u5f0f\u90fd\u8981\u901a\u8fc7\u91cd\u5199run()\u65b9\u6cd5\u6765\u5b9a\u4e49\u7ebf\u7a0b\u7684\u884c\u4e3a\uff0c\u63a8\u8350\u4f7f\u7528\u540e\u8005\uff0c\u56e0\u4e3aJava\u4e2d\u7684\u7ee7\u627f\u662f\u5355\u7ee7\u627f\uff0c\u4e00\u4e2a\u7c7b\u6709\u4e00\u4e2a\u7236\u7c7b\uff0c\u5982\u679c\u7ee7\u627f\u4e86Thread\u7c7b\u5c31\u65e0\u6cd5\u518d\u7ee7\u627f\u5176\u4ed6\u7c7b\u4e86\uff0c\u663e\u7136\u4f7f\u7528Runnable\u63a5\u53e3\u66f4\u4e3a\u7075\u6d3b\u3002\n\u8865\u5145\uff1aJava 5\u4ee5\u540e\u521b\u5efa\u7ebf\u7a0b\u8fd8\u6709\u7b2c\u4e09\u79cd\u65b9\u5f0f\uff1a\u5b9e\u73b0Callable\u63a5\u53e3\uff0c\u8be5\u63a5\u53e3\u4e2d\u7684call\u65b9\u6cd5\u53ef\u4ee5\u5728\u7ebf\u7a0b\u6267\u884c\u7ed3\u675f\u65f6\u4ea7\u751f\u4e00\u4e2a\u8fd4\u56de\u503c\uff0c\u4ee3\u7801\u5982\u4e0b\u6240\u793a\uff1a\n\n    import java.util.ArrayList;\n    import java.util.List;\n    import java.util.concurrent.Callable;\n    import java.util.concurrent.ExecutorService;\n    import java.util.concurrent.Executors;\n    import java.util.concurrent.Future;\n\n    class MyTask implements Callable&lt;Integer&gt; {\n        private int upperBounds;\n\n        public MyTask(int upperBounds) {\n            this.upperBounds = upperBounds;\n        }\n\n        @Override\n        public Integer call() throws Exception {\n            int sum = 0; \n            for(int i = 1; i &lt;= upperBounds; i++) {\n                sum += i;\n            }\n            return sum;\n        }\n\n    }\n\n    class Test {\n\n        public static void main(String[] args) throws Exception {\n            List&lt;Future&lt;Integer&gt;&gt; list = new ArrayList&lt;&gt;();\n            ExecutorService service = Executors.newFixedThreadPool(10);\n            for(int i = 0; i &lt; 10; i++) {\n                list.add(service.submit(new MyTask((int) (Math.random() * 100))));\n            }\n\n            int sum = 0;\n            for(Future&lt;Integer&gt; future : list) {\n                // while(!future.isDone()) ;\n                sum += future.get();\n            }\n\n            System.out.println(sum);\n        }\n    }\n62\u3001synchronized\u5173\u952e\u5b57\u7684\u7528\u6cd5\uff1f\n\u7b54\uff1asynchronized\u5173\u952e\u5b57\u53ef\u4ee5\u5c06\u5bf9\u8c61\u6216\u8005\u65b9\u6cd5\u6807\u8bb0\u4e3a\u540c\u6b65\uff0c\u4ee5\u5b9e\u73b0\u5bf9\u5bf9\u8c61\u548c\u65b9\u6cd5\u7684\u4e92\u65a5\u8bbf\u95ee\uff0c\u53ef\u4ee5\u7528synchronized(\u5bf9\u8c61) { \u2026 }\u5b9a\u4e49\u540c\u6b65\u4ee3\u7801\u5757\uff0c\u6216\u8005\u5728\u58f0\u660e\u65b9\u6cd5\u65f6\u5c06synchronized\u4f5c\u4e3a\u65b9\u6cd5\u7684\u4fee\u9970\u7b26\u3002\u5728\u7b2c60\u9898\u7684\u4f8b\u5b50\u4e2d\u5df2\u7ecf\u5c55\u793a\u4e86synchronized\u5173\u952e\u5b57\u7684\u7528\u6cd5\u3002\n63\u3001\u4e3e\u4f8b\u8bf4\u660e\u540c\u6b65\u548c\u5f02\u6b65\u3002\n\u7b54\uff1a\u5982\u679c\u7cfb\u7edf\u4e2d\u5b58\u5728\u4e34\u754c\u8d44\u6e90\uff08\u8d44\u6e90\u6570\u91cf\u5c11\u4e8e\u7ade\u4e89\u8d44\u6e90\u7684\u7ebf\u7a0b\u6570\u91cf\u7684\u8d44\u6e90\uff09\uff0c\u4f8b\u5982\u6b63\u5728\u5199\u7684\u6570\u636e\u4ee5\u540e\u53ef\u80fd\u88ab\u53e6\u4e00\u4e2a\u7ebf\u7a0b\u8bfb\u5230\uff0c\u6216\u8005\u6b63\u5728\u8bfb\u7684\u6570\u636e\u53ef\u80fd\u5df2\u7ecf\u88ab\u53e6\u4e00\u4e2a\u7ebf\u7a0b\u5199\u8fc7\u4e86\uff0c\u90a3\u4e48\u8fd9\u4e9b\u6570\u636e\u5c31\u5fc5\u987b\u8fdb\u884c\u540c\u6b65\u5b58\u53d6\uff08\u6570\u636e\u5e93\u64cd\u4f5c\u4e2d\u7684\u6392\u4ed6\u9501\u5c31\u662f\u6700\u597d\u7684\u4f8b\u5b50\uff09\u3002\u5f53\u5e94\u7528\u7a0b\u5e8f\u5728\u5bf9\u8c61\u4e0a\u8c03\u7528\u4e86\u4e00\u4e2a\u9700\u8981\u82b1\u8d39\u5f88\u957f\u65f6\u95f4\u6765\u6267\u884c\u7684\u65b9\u6cd5\uff0c\u5e76\u4e14\u4e0d\u5e0c\u671b\u8ba9\u7a0b\u5e8f\u7b49\u5f85\u65b9\u6cd5\u7684\u8fd4\u56de\u65f6\uff0c\u5c31\u5e94\u8be5\u4f7f\u7528\u5f02\u6b65\u7f16\u7a0b\uff0c\u5728\u5f88\u591a\u60c5\u51b5\u4e0b\u91c7\u7528\u5f02\u6b65\u9014\u5f84\u5f80\u5f80\u66f4\u6709\u6548\u7387\u3002\u4e8b\u5b9e\u4e0a\uff0c\u6240\u8c13\u7684\u540c\u6b65\u5c31\u662f\u6307\u963b\u585e\u5f0f\u64cd\u4f5c\uff0c\u800c\u5f02\u6b65\u5c31\u662f\u975e\u963b\u585e\u5f0f\u64cd\u4f5c\u3002\n64\u3001\u542f\u52a8\u4e00\u4e2a\u7ebf\u7a0b\u662f\u8c03\u7528run()\u8fd8\u662fstart()\u65b9\u6cd5\uff1f\n\u7b54\uff1a\u542f\u52a8\u4e00\u4e2a\u7ebf\u7a0b\u662f\u8c03\u7528start()\u65b9\u6cd5\uff0c\u4f7f\u7ebf\u7a0b\u6240\u4ee3\u8868\u7684\u865a\u62df\u5904\u7406\u673a\u5904\u4e8e\u53ef\u8fd0\u884c\u72b6\u6001\uff0c\u8fd9\u610f\u5473\u7740\u5b83\u53ef\u4ee5\u7531JVM \u8c03\u5ea6\u5e76\u6267\u884c\uff0c\u8fd9\u5e76\u4e0d\u610f\u5473\u7740\u7ebf\u7a0b\u5c31\u4f1a\u7acb\u5373\u8fd0\u884c\u3002\nrun()\u65b9\u6cd5\u662f\u7ebf\u7a0b\u542f\u52a8\u540e\u8981\u8fdb\u884c\u56de\u8c03\uff08callback\uff09\u7684\u65b9\u6cd5\u3002\n65\u3001\u4ec0\u4e48\u662f\u7ebf\u7a0b\u6c60\uff08thread pool\uff09\uff1f\n\u7b54\uff1a\u5728\u9762\u5411\u5bf9\u8c61\u7f16\u7a0b\u4e2d\uff0c\u521b\u5efa\u548c\u9500\u6bc1\u5bf9\u8c61\u662f\u5f88\u8d39\u65f6\u95f4\u7684\uff0c\u56e0\u4e3a\u521b\u5efa\u4e00\u4e2a\u5bf9\u8c61\u8981\u83b7\u53d6\u5185\u5b58\u8d44\u6e90\u6216\u8005\u5176\u5b83\u66f4\u591a\u8d44\u6e90\u3002\n\u5728Java\u4e2d\u66f4\u662f\u5982\u6b64\uff0c\u865a\u62df\u673a\u5c06\u8bd5\u56fe\u8ddf\u8e2a\u6bcf\u4e00\u4e2a\u5bf9\u8c61\uff0c\u4ee5\u4fbf\u80fd\u591f\u5728\u5bf9\u8c61\u9500\u6bc1\u540e\u8fdb\u884c\u5783\u573e\u56de\u6536\u3002\u6240\u4ee5\u63d0\u9ad8\u670d\u52a1\u7a0b\u5e8f\u6548\u7387\u7684\u4e00\u4e2a\u624b\u6bb5\u5c31\u662f\u5c3d\u53ef\u80fd\u51cf\u5c11\u521b\u5efa\u548c\u9500\u6bc1\u5bf9\u8c61\u7684\u6b21\u6570\uff0c\u7279\u522b\u662f\u4e00\u4e9b\u5f88\u8017\u8d44\u6e90\u7684\u5bf9\u8c61\u521b\u5efa\u548c\u9500\u6bc1\uff0c\u8fd9\u5c31\u662f\u201d\u6c60\u5316\u8d44\u6e90\u201d\u6280\u672f\u4ea7\u751f\u7684\u539f\u56e0\u3002\n\u7ebf\u7a0b\u6c60\u987e\u540d\u601d\u4e49\u5c31\u662f\u4e8b\u5148\u521b\u5efa\u82e5\u5e72\u4e2a\u53ef\u6267\u884c\u7684\u7ebf\u7a0b\u653e\u5165\u4e00\u4e2a\u6c60\uff08\u5bb9\u5668\uff09\u4e2d\uff0c\u9700\u8981\u7684\u65f6\u5019\u4ece\u6c60\u4e2d\u83b7\u53d6\u7ebf\u7a0b\u4e0d\u7528\u81ea\u884c\u521b\u5efa\uff0c\u4f7f\u7528\u5b8c\u6bd5\u4e0d\u9700\u8981\u9500\u6bc1\u7ebf\u7a0b\u800c\u662f\u653e\u56de\u6c60\u4e2d\uff0c\u4ece\u800c\u51cf\u5c11\u521b\u5efa\u548c\u9500\u6bc1\u7ebf\u7a0b\u5bf9\u8c61\u7684\u5f00\u9500\u3002\nJava 5+\u4e2d\u7684Executor\u63a5\u53e3\u5b9a\u4e49\u4e00\u4e2a\u6267\u884c\u7ebf\u7a0b\u7684\u5de5\u5177\u3002\u5b83\u7684\u5b50\u7c7b\u578b\u5373\u7ebf\u7a0b\u6c60\u63a5\u53e3\u662fExecutorService\u3002\n\u8981\u914d\u7f6e\u4e00\u4e2a\u7ebf\u7a0b\u6c60\u662f\u6bd4\u8f83\u590d\u6742\u7684\uff0c\u5c24\u5176\u662f\u5bf9\u4e8e\u7ebf\u7a0b\u6c60\u7684\u539f\u7406\u4e0d\u662f\u5f88\u6e05\u695a\u7684\u60c5\u51b5\u4e0b\uff0c\u56e0\u6b64\u5728\u5de5\u5177\u7c7bExecutors\u9762\u63d0\u4f9b\u4e86\u4e00\u4e9b\u9759\u6001\u5de5\u5382\u65b9\u6cd5\uff0c\u751f\u6210\u4e00\u4e9b\u5e38\u7528\u7684\u7ebf\u7a0b\u6c60\uff0c\u5982\u4e0b\u6240\u793a\uff1a\n\n(1)newSingleThreadExecutor\uff1a\u521b\u5efa\u4e00\u4e2a\u5355\u7ebf\u7a0b\u7684\u7ebf\u7a0b\u6c60\u3002\u8fd9\u4e2a\u7ebf\u7a0b\u6c60\u53ea\u6709\u4e00\u4e2a\u7ebf\u7a0b\u5728\u5de5\u4f5c\uff0c\u4e5f\u5c31\u662f\u76f8\u5f53\u4e8e\u5355\u7ebf\u7a0b\u4e32\u884c\u6267\u884c\u6240\u6709\u4efb\u52a1\u3002\u5982\u679c\u8fd9\u4e2a\u552f\u4e00\u7684\u7ebf\u7a0b\u56e0\u4e3a\u5f02\u5e38\u7ed3\u675f\uff0c\u90a3\u4e48\u4f1a\u6709\u4e00\u4e2a\u65b0\u7684\u7ebf\u7a0b\u6765\u66ff\u4ee3\u5b83\u3002\u6b64\u7ebf\u7a0b\u6c60\u4fdd\u8bc1\u6240\u6709\u4efb\u52a1\u7684\u6267\u884c\u987a\u5e8f\u6309\u7167\u4efb\u52a1\u7684\u63d0\u4ea4\u987a\u5e8f\u6267\u884c\u3002\n\n(2)newFixedThreadPool\uff1a\u521b\u5efa\u56fa\u5b9a\u5927\u5c0f\u7684\u7ebf\u7a0b\u6c60\u3002\u6bcf\u6b21\u63d0\u4ea4\u4e00\u4e2a\u4efb\u52a1\u5c31\u521b\u5efa\u4e00\u4e2a\u7ebf\u7a0b\uff0c\u76f4\u5230\u7ebf\u7a0b\u8fbe\u5230\u7ebf\u7a0b\u6c60\u7684\u6700\u5927\u5927\u5c0f\u3002\u7ebf\u7a0b\u6c60\u7684\u5927\u5c0f\u4e00\u65e6\u8fbe\u5230\u6700\u5927\u503c\u5c31\u4f1a\u4fdd\u6301\u4e0d\u53d8\uff0c\u5982\u679c\u67d0\u4e2a\u7ebf\u7a0b\u56e0\u4e3a\u6267\u884c\u5f02\u5e38\u800c\u7ed3\u675f\uff0c\u90a3\u4e48\u7ebf\u7a0b\u6c60\u4f1a\u8865\u5145\u4e00\u4e2a\u65b0\u7ebf\u7a0b\u3002\n\n(3)newCachedThreadPool\uff1a\u521b\u5efa\u4e00\u4e2a\u53ef\u7f13\u5b58\u7684\u7ebf\u7a0b\u6c60\u3002\u5982\u679c\u7ebf\u7a0b\u6c60\u7684\u5927\u5c0f\u8d85\u8fc7\u4e86\u5904\u7406\u4efb\u52a1\u6240\u9700\u8981\u7684\u7ebf\u7a0b\uff0c\u90a3\u4e48\u5c31\u4f1a\u56de\u6536\u90e8\u5206\u7a7a\u95f2\uff0860\u79d2\u4e0d\u6267\u884c\u4efb\u52a1\uff09\u7684\u7ebf\u7a0b\uff0c\u5f53\u4efb\u52a1\u6570\u589e\u52a0\u65f6\uff0c\u6b64\u7ebf\u7a0b\u6c60\u53c8\u53ef\u4ee5\u667a\u80fd\u7684\u6dfb\u52a0\u65b0\u7ebf\u7a0b\u6765\u5904\u7406\u4efb\u52a1\u3002\u6b64\u7ebf\u7a0b\u6c60\u4e0d\u4f1a\u5bf9\u7ebf\u7a0b\u6c60\u5927\u5c0f\u505a\u9650\u5236\uff0c\u7ebf\u7a0b\u6c60\u5927\u5c0f\u5b8c\u5168\u4f9d\u8d56\u4e8e\u64cd\u4f5c\u7cfb\u7edf\uff08\u6216\u8005\u8bf4JVM\uff09\u80fd\u591f\u521b\u5efa\u7684\u6700\u5927\u7ebf\u7a0b\u5927\u5c0f\u3002\n\n(4)newScheduledThreadPool\uff1a\u521b\u5efa\u4e00\u4e2a\u5927\u5c0f\u65e0\u9650\u7684\u7ebf\u7a0b\u6c60\u3002\u6b64\u7ebf\u7a0b\u6c60\u652f\u6301\u5b9a\u65f6\u4ee5\u53ca\u5468\u671f\u6027\u6267\u884c\u4efb\u52a1\u7684\u9700\u6c42\u3002\n\n(5)newSingleThreadExecutor\uff1a\u521b\u5efa\u4e00\u4e2a\u5355\u7ebf\u7a0b\u7684\u7ebf\u7a0b\u6c60\u3002\u6b64\u7ebf\u7a0b\u6c60\u652f\u6301\u5b9a\u65f6\u4ee5\u53ca\u5468\u671f\u6027\u6267\u884c\u4efb\u52a1\u7684\u9700\u6c42\u3002\n\n\n\u7b2c60\u9898\u7684\u4f8b\u5b50\u4e2d\u6f14\u793a\u4e86\u901a\u8fc7Executors\u5de5\u5177\u7c7b\u521b\u5efa\u7ebf\u7a0b\u6c60\u5e76\u4f7f\u7528\u7ebf\u7a0b\u6c60\u6267\u884c\u7ebf\u7a0b\u7684\u4ee3\u7801\u3002\u5982\u679c\u5e0c\u671b\u5728\u670d\u52a1\u5668\u4e0a\u4f7f\u7528\u7ebf\u7a0b\u6c60\uff0c\u5f3a\u70c8\u5efa\u8bae\u4f7f\u7528newFixedThreadPool\u65b9\u6cd5\u6765\u521b\u5efa\u7ebf\u7a0b\u6c60\uff0c\u8fd9\u6837\u80fd\u83b7\u5f97\u66f4\u597d\u7684\u6027\u80fd\u3002\n66\u3001\u7ebf\u7a0b\u7684\u57fa\u672c\u72b6\u6001\u4ee5\u53ca\u72b6\u6001\u4e4b\u95f4\u7684\u5173\u7cfb\uff1f\njava-intelview-1-002\n\u8bf4\u660e\uff1a\u5176\u4e2dRunning\u8868\u793a\u8fd0\u884c\u72b6\u6001\uff0cRunnable\u8868\u793a\u5c31\u7eea\u72b6\u6001\uff08\u4e07\u4e8b\u4ff1\u5907\uff0c\u53ea\u6b20CPU\uff09\uff0cBlocked\u8868\u793a\u963b\u585e\u72b6\u6001\uff0c\u963b\u585e\u72b6\u6001\u53c8\u6709\u591a\u79cd\u60c5\u51b5\uff0c\u53ef\u80fd\u662f\u56e0\u4e3a\u8c03\u7528wait()\u65b9\u6cd5\u8fdb\u5165\u7b49\u5f85\u6c60\uff0c\u4e5f\u53ef\u80fd\u662f\u6267\u884c\u540c\u6b65\u65b9\u6cd5\u6216\u540c\u6b65\u4ee3\u7801\u5757\u8fdb\u5165\u7b49\u9501\u6c60\uff0c\u6216\u8005\u662f\u8c03\u7528\u4e86sleep()\u65b9\u6cd5\u6216join()\u65b9\u6cd5\u7b49\u5f85\u4f11\u7720\u6216\u5176\u4ed6\u7ebf\u7a0b\u7ed3\u675f\uff0c\u6216\u662f\u56e0\u4e3a\u53d1\u751f\u4e86I/O\u4e2d\u65ad\u3002\n67\u3001\u7b80\u8ff0synchronized \u548cjava.util.concurrent.locks.Lock\u7684\u5f02\u540c\uff1f\n\u7b54\uff1aLock\u662fJava 5\u4ee5\u540e\u5f15\u5165\u7684\u65b0\u7684API\uff0c\u548c\u5173\u952e\u5b57synchronized\u76f8\u6bd4\n\u4e3b\u8981\u76f8\u540c\u70b9\uff1aLock \u80fd\u5b8c\u6210synchronized\u6240\u5b9e\u73b0\u7684\u6240\u6709\u529f\u80fd\uff1b\n\u4e3b\u8981\u4e0d\u540c\u70b9\uff1aLock\u6709\u6bd4synchronized\u66f4\u7cbe\u786e\u7684\u7ebf\u7a0b\u8bed\u4e49\u548c\u66f4\u597d\u7684\u6027\u80fd\uff0c\u800c\u4e14\u4e0d\u5f3a\u5236\u6027\u7684\u8981\u6c42\u4e00\u5b9a\u8981\u83b7\u5f97\u9501\u3002synchronized\u4f1a\u81ea\u52a8\u91ca\u653e\u9501\uff0c\u800cLock\u4e00\u5b9a\u8981\u6c42\u7a0b\u5e8f\u5458\u624b\u5de5\u91ca\u653e\uff0c\u5e76\u4e14\u6700\u597d\u5728finally \u5757\u4e2d\u91ca\u653e\uff08\u8fd9\u662f\u91ca\u653e\u5916\u90e8\u8d44\u6e90\u7684\u6700\u597d\u7684\u5730\u65b9\uff09\u3002\n68\u3001Java\u4e2d\u5982\u4f55\u5b9e\u73b0\u5e8f\u5217\u5316\uff0c\u6709\u4ec0\u4e48\u610f\u4e49\uff1f\n\u7b54\uff1a\u5e8f\u5217\u5316\u5c31\u662f\u4e00\u79cd\u7528\u6765\u5904\u7406\u5bf9\u8c61\u6d41\u7684\u673a\u5236\uff0c\u6240\u8c13\u5bf9\u8c61\u6d41\u4e5f\u5c31\u662f\u5c06\u5bf9\u8c61\u7684\u5185\u5bb9\u8fdb\u884c\u6d41\u5316\u3002\u53ef\u4ee5\u5bf9\u6d41\u5316\u540e\u7684\u5bf9\u8c61\u8fdb\u884c\u8bfb\u5199\u64cd\u4f5c\uff0c\u4e5f\u53ef\u5c06\u6d41\u5316\u540e\u7684\u5bf9\u8c61\u4f20\u8f93\u4e8e\u7f51\u7edc\u4e4b\u95f4\u3002\n\u5e8f\u5217\u5316\u662f\u4e3a\u4e86\u89e3\u51b3\u5bf9\u8c61\u6d41\u8bfb\u5199\u64cd\u4f5c\u65f6\u53ef\u80fd\u5f15\u53d1\u7684\u95ee\u9898\uff08\u5982\u679c\u4e0d\u8fdb\u884c\u5e8f\u5217\u5316\u53ef\u80fd\u4f1a\u5b58\u5728\u6570\u636e\u4e71\u5e8f\u7684\u95ee\u9898\uff09\u3002\n\u8981\u5b9e\u73b0\u5e8f\u5217\u5316\uff0c\u9700\u8981\u8ba9\u4e00\u4e2a\u7c7b\u5b9e\u73b0Serializable\u63a5\u53e3\uff0c\u8be5\u63a5\u53e3\u662f\u4e00\u4e2a\u6807\u8bc6\u6027\u63a5\u53e3\uff0c\u6807\u6ce8\u8be5\u7c7b\u5bf9\u8c61\u662f\u53ef\u88ab\u5e8f\u5217\u5316\u7684\uff0c\u7136\u540e\u4f7f\u7528\u4e00\u4e2a\u8f93\u51fa\u6d41\u6765\u6784\u9020\u4e00\u4e2a\u5bf9\u8c61\u8f93\u51fa\u6d41\u5e76\u901a\u8fc7writeObject(Object)\u65b9\u6cd5\u5c31\u53ef\u4ee5\u5c06\u5b9e\u73b0\u5bf9\u8c61\u5199\u51fa\uff08\u5373\u4fdd\u5b58\u5176\u72b6\u6001\uff09\uff1b\u5982\u679c\u9700\u8981\u53cd\u5e8f\u5217\u5316\u5219\u53ef\u4ee5\u7528\u4e00\u4e2a\u8f93\u5165\u6d41\u5efa\u7acb\u5bf9\u8c61\u8f93\u5165\u6d41\uff0c\u7136\u540e\u901a\u8fc7readObject\u65b9\u6cd5\u4ece\u6d41\u4e2d\u8bfb\u53d6\u5bf9\u8c61\u3002\u5e8f\u5217\u5316\u9664\u4e86\u80fd\u591f\u5b9e\u73b0\u5bf9\u8c61\u7684\u6301\u4e45\u5316\u4e4b\u5916\uff0c\u8fd8\u80fd\u591f\u7528\u4e8e\u5bf9\u8c61\u7684\u6df1\u5ea6\u514b\u9686\uff08\u53ef\u4ee5\u53c2\u8003\u7b2c29\u9898\uff09\u3002\n69\u3001Java\u4e2d\u6709\u51e0\u79cd\u7c7b\u578b\u7684\u6d41\uff1f\n\u7b54\uff1a\u5b57\u8282\u6d41\u548c\u5b57\u7b26\u6d41\u3002\n\u5b57\u8282\u6d41\u7ee7\u627f\u4e8eInputStream\u3001OutputStream\uff0c\u5b57\u7b26\u6d41\u7ee7\u627f\u4e8eReader\u3001Writer\u3002\n\u5728java.io \u5305\u4e2d\u8fd8\u6709\u8bb8\u591a\u5176\u4ed6\u7684\u6d41\uff0c\u4e3b\u8981\u662f\u4e3a\u4e86\u63d0\u9ad8\u6027\u80fd\u548c\u4f7f\u7528\u65b9\u4fbf\u3002\n\u5173\u4e8eJava\u7684I/O\u9700\u8981\u6ce8\u610f\u7684\u6709\u4e24\u70b9\uff1a\u4e00\u662f\u4e24\u79cd\u5bf9\u79f0\u6027\uff08\u8f93\u5165\u548c\u8f93\u51fa\u7684\u5bf9\u79f0\u6027\uff0c\u5b57\u8282\u548c\u5b57\u7b26\u7684\u5bf9\u79f0\u6027\uff09\uff1b\u4e8c\u662f\u4e24\u79cd\u8bbe\u8ba1\u6a21\u5f0f\uff08\u9002\u914d\u5668\u6a21\u5f0f\u548c\u88c5\u6f62\u6a21\u5f0f\uff09\u3002\n\u53e6\u5916Java\u4e2d\u7684\u6d41\u4e0d\u540c\u4e8eC#\u7684\u662f\u5b83\u53ea\u6709\u4e00\u4e2a\u7ef4\u5ea6\u4e00\u4e2a\u65b9\u5411\u3002\n\u9762\u8bd5\u9898 - \u7f16\u7a0b\u5b9e\u73b0\u6587\u4ef6\u62f7\u8d1d\u3002\uff08\u8fd9\u4e2a\u9898\u76ee\u5728\u7b14\u8bd5\u7684\u65f6\u5019\u7ecf\u5e38\u51fa\u73b0\uff0c\u4e0b\u9762\u7684\u4ee3\u7801\u7ed9\u51fa\u4e86\u4e24\u79cd\u5b9e\u73b0\u65b9\u6848\uff09\n\n    import java.io.FileInputStream;\n    import java.io.FileOutputStream;\n    import java.io.IOException;\n    import java.io.InputStream;\n    import java.io.OutputStream;\n    import java.nio.ByteBuffer;\n    import java.nio.channels.FileChannel;\n\n    public final class MyUtil {\n\n        private MyUtil() {\n            throw new AssertionError();\n        }\n\n        public static void fileCopy(String source, String target) throws IOException {\n            try (InputStream in = new FileInputStream(source)) {\n                try (OutputStream out = new FileOutputStream(target)) {\n                    byte[] buffer = new byte[4096];\n                    int bytesToRead;\n                    while((bytesToRead = in.read(buffer)) != -1) {\n                        out.write(buffer, 0, bytesToRead);\n                    }\n                }\n            }\n        }\n\n        public static void fileCopyNIO(String source, String target) throws IOException {\n            try (FileInputStream in = new FileInputStream(source)) {\n                try (FileOutputStream out = new FileOutputStream(target)) {\n                    FileChannel inChannel = in.getChannel();\n                    FileChannel outChannel = out.getChannel();\n                    ByteBuffer buffer = ByteBuffer.allocate(4096);\n                    while(inChannel.read(buffer) != -1) {\n                        buffer.flip();\n                        outChannel.write(buffer);\n                        buffer.clear();\n                    }\n                }\n            }\n        }\n    }\n\u6ce8\u610f\uff1a\u4e0a\u9762\u7528\u5230Java 7\u7684TWR\uff0c\u4f7f\u7528TWR\u540e\u53ef\u4ee5\u4e0d\u7528\u5728finally\u4e2d\u91ca\u653e\u5916\u90e8\u8d44\u6e90 \uff0c\u4ece\u800c\u8ba9\u4ee3\u7801\u66f4\u52a0\u4f18\u96c5\u3002\n70\u3001\u5199\u4e00\u4e2a\u65b9\u6cd5\uff0c\u8f93\u5165\u4e00\u4e2a\u6587\u4ef6\u540d\u548c\u4e00\u4e2a\u5b57\u7b26\u4e32\uff0c\u7edf\u8ba1\u8fd9\u4e2a\u5b57\u7b26\u4e32\u5728\u8fd9\u4e2a\u6587\u4ef6\u4e2d\u51fa\u73b0\u7684\u6b21\u6570\u3002\n\u7b54\uff1a\u4ee3\u7801\u5982\u4e0b\uff1a\n\n    import java.io.BufferedReader;\n    import java.io.FileReader;\n\n    public final class MyUtil {\n\n        // \u5de5\u5177\u7c7b\u4e2d\u7684\u65b9\u6cd5\u90fd\u662f\u9759\u6001\u65b9\u5f0f\u8bbf\u95ee\u7684\u56e0\u6b64\u5c06\u6784\u9020\u5668\u79c1\u6709\u4e0d\u5141\u8bb8\u521b\u5efa\u5bf9\u8c61(\u7edd\u5bf9\u597d\u4e60\u60ef)\n        private MyUtil() {\n            throw new AssertionError();\n        }\n\n        /**\n         * \u7edf\u8ba1\u7ed9\u5b9a\u6587\u4ef6\u4e2d\u7ed9\u5b9a\u5b57\u7b26\u4e32\u7684\u51fa\u73b0\u6b21\u6570\n         * \n         * @param filename  \u6587\u4ef6\u540d\n         * @param word \u5b57\u7b26\u4e32\n         * @return \u5b57\u7b26\u4e32\u5728\u6587\u4ef6\u4e2d\u51fa\u73b0\u7684\u6b21\u6570\n         */\n        public static int countWordInFile(String filename, String word) {\n            int counter = 0;\n            try (FileReader fr = new FileReader(filename)) {\n                try (BufferedReader br = new BufferedReader(fr)) {\n                    String line = null;\n                    while ((line = br.readLine()) != null) {\n                        int index = -1;\n                        while (line.length() &gt;= word.length() &amp;&amp; (index = line.indexOf(word)) &gt;= 0) {\n                            counter++;\n                            line = line.substring(index + word.length());\n                        }\n                    }\n                }\n            } catch (Exception ex) {\n                ex.printStackTrace();\n            }\n            return counter;\n        }\n\n    }\n71\u3001\u5982\u4f55\u7528Java\u4ee3\u7801\u5217\u51fa\u4e00\u4e2a\u76ee\u5f55\u4e0b\u6240\u6709\u7684\u6587\u4ef6\uff1f\n\u7b54\uff1a\u5982\u679c\u53ea\u8981\u6c42\u5217\u51fa\u5f53\u524d\u6587\u4ef6\u5939\u4e0b\u7684\u6587\u4ef6\uff0c\u4ee3\u7801\u5982\u4e0b\u6240\u793a\uff1a\n\n    import java.io.File;\n\n    class Test12 {\n\n        public static void main(String[] args) {\n            File f = new File(\"/Users/Hao/Downloads\");\n            for(File temp : f.listFiles()) {\n                if(temp.isFile()) {\n                    System.out.println(temp.getName());\n                }\n            }\n        }\n    }\n\u5982\u679c\u9700\u8981\u5bf9\u6587\u4ef6\u5939\u7ee7\u7eed\u5c55\u5f00\uff0c\u4ee3\u7801\u5982\u4e0b\u6240\u793a\uff1a\n\n    import java.io.File;\n\n    class Test12 {\n\n        public static void main(String[] args) {\n            showDirectory(new File(\"/Users/Hao/Downloads\"));\n        }\n\n        public static void showDirectory(File f) {\n            _walkDirectory(f, 0);\n        }\n\n        private static void _walkDirectory(File f, int level) {\n            if(f.isDirectory()) {\n                for(File temp : f.listFiles()) {\n                    _walkDirectory(temp, level + 1);\n                }\n            }\n            else {\n                for(int i = 0; i &lt; level - 1; i++) {\n                    System.out.print(\"\\t\");\n                }\n                System.out.println(f.getName());\n            }\n        }\n    }\n\u5728Java 7\u4e2d\u53ef\u4ee5\u4f7f\u7528NIO.2\u7684API\u6765\u505a\u540c\u6837\u7684\u4e8b\u60c5\uff0c\u4ee3\u7801\u5982\u4e0b\u6240\u793a\uff1a\n\n    class ShowFileTest {\n\n        public static void main(String[] args) throws IOException {\n            Path initPath = Paths.get(\"/Users/Hao/Downloads\");\n            Files.walkFileTree(initPath, new SimpleFileVisitor&lt;Path&gt;() {\n\n                @Override\n                public FileVisitResult visitFile(Path file, BasicFileAttributes attrs) \n                        throws IOException {\n                    System.out.println(file.getFileName().toString());\n                    return FileVisitResult.CONTINUE;\n                }\n\n            });\n        }\n    }\n72\u3001\u7528Java\u7684\u5957\u63a5\u5b57\u7f16\u7a0b\u5b9e\u73b0\u4e00\u4e2a\u591a\u7ebf\u7a0b\u7684\u56de\u663e\uff08echo\uff09\u670d\u52a1\u5668\u3002\n\u7b54\uff1a\n\n    import java.io.BufferedReader;\n    import java.io.IOException;\n    import java.io.InputStreamReader;\n    import java.io.PrintWriter;\n    import java.net.ServerSocket;\n    import java.net.Socket;\n\n    public class EchoServer {\n\n        private static final int ECHO_SERVER_PORT = 6789;\n\n        public static void main(String[] args) {        \n            try(ServerSocket server = new ServerSocket(ECHO_SERVER_PORT)) {\n                System.out.println(\"\u670d\u52a1\u5668\u5df2\u7ecf\u542f\u52a8...\");\n                while(true) {\n                    Socket client = server.accept();\n                    new Thread(new ClientHandler(client)).start();\n                }\n            } catch (IOException e) {\n                e.printStackTrace();\n            }\n        }\n\n        private static class ClientHandler implements Runnable {\n            private Socket client;\n\n            public ClientHandler(Socket client) {\n                this.client = client;\n            }\n\n            @Override\n            public void run() {\n                try(BufferedReader br = new BufferedReader(new InputStreamReader(client.getInputStream()));\n                        PrintWriter pw = new PrintWriter(client.getOutputStream())) {\n                    String msg = br.readLine();\n                    System.out.println(\"\u6536\u5230\" + client.getInetAddress() + \"\u53d1\u9001\u7684: \" + msg);\n                    pw.println(msg);\n                    pw.flush();\n                } catch(Exception ex) {\n                    ex.printStackTrace();\n                } finally {\n                    try {\n                        client.close();\n                    } catch (IOException e) {\n                        e.printStackTrace();\n                    }\n                }\n            }\n        }\n\n    }\n\u6ce8\u610f\uff1a\u4e0a\u9762\u7684\u4ee3\u7801\u4f7f\u7528\u4e86Java 7\u7684TWR\u8bed\u6cd5\uff0c\u7531\u4e8e\u5f88\u591a\u5916\u90e8\u8d44\u6e90\u7c7b\u90fd\u95f4\u63a5\u7684\u5b9e\u73b0\u4e86AutoCloseable\u63a5\u53e3\uff08\u5355\u65b9\u6cd5\u56de\u8c03\u63a5\u53e3\uff09\uff0c\u56e0\u6b64\u53ef\u4ee5\u5229\u7528TWR\u8bed\u6cd5\u5728try\u7ed3\u675f\u7684\u65f6\u5019\u901a\u8fc7\u56de\u8c03\u7684\u65b9\u5f0f\u81ea\u52a8\u8c03\u7528\u5916\u90e8\u8d44\u6e90\u7c7b\u7684close()\u65b9\u6cd5\uff0c\u907f\u514d\u4e66\u5199\u5197\u957f\u7684finally\u4ee3\u7801\u5757\u3002\n\u6b64\u5916\uff0c\u4e0a\u9762\u7684\u4ee3\u7801\u7528\u4e00\u4e2a\u9759\u6001\u5185\u90e8\u7c7b\u5b9e\u73b0\u7ebf\u7a0b\u7684\u529f\u80fd\uff0c\u4f7f\u7528\u591a\u7ebf\u7a0b\u53ef\u4ee5\u907f\u514d\u4e00\u4e2a\u7528\u6237I/O\u64cd\u4f5c\u6240\u4ea7\u751f\u7684\u4e2d\u65ad\u5f71\u54cd\u5176\u4ed6\u7528\u6237\u5bf9\u670d\u52a1\u5668\u7684\u8bbf\u95ee\uff0c\u7b80\u5355\u7684\u8bf4\u5c31\u662f\u4e00\u4e2a\u7528\u6237\u7684\u8f93\u5165\u64cd\u4f5c\u4e0d\u4f1a\u9020\u6210\u5176\u4ed6\u7528\u6237\u7684\u963b\u585e\u3002\u5f53\u7136\uff0c\u4e0a\u9762\u7684\u4ee3\u7801\u4f7f\u7528\u7ebf\u7a0b\u6c60\u53ef\u4ee5\u83b7\u5f97\u66f4\u597d\u7684\u6027\u80fd\uff0c\u56e0\u4e3a\u9891\u7e41\u7684\u521b\u5efa\u548c\u9500\u6bc1\u7ebf\u7a0b\u6240\u9020\u6210\u7684\u5f00\u9500\u4e5f\u662f\u4e0d\u53ef\u5ffd\u89c6\u7684\u3002\n\u4e0b\u9762\u662f\u4e00\u6bb5\u56de\u663e\u5ba2\u6237\u7aef\u6d4b\u8bd5\u4ee3\u7801\uff1a\n\n    import java.io.BufferedReader;\n    import java.io.InputStreamReader;\n    import java.io.PrintWriter;\n    import java.net.Socket;\n    import java.util.Scanner;\n\n    public class EchoClient {\n\n        public static void main(String[] args) throws Exception {\n            Socket client = new Socket(\"localhost\", 6789);\n            Scanner sc = new Scanner(System.in);\n            System.out.print(\"\u8bf7\u8f93\u5165\u5185\u5bb9: \");\n            String msg = sc.nextLine();\n            sc.close();\n            PrintWriter pw = new PrintWriter(client.getOutputStream());\n            pw.println(msg);\n            pw.flush();\n            BufferedReader br = new BufferedReader(new InputStreamReader(client.getInputStream()));\n            System.out.println(br.readLine());\n            client.close();\n        }\n    }\n\u5982\u679c\u5e0c\u671b\u7528NIO\u7684\u591a\u8def\u590d\u7528\u5957\u63a5\u5b57\u5b9e\u73b0\u670d\u52a1\u5668\uff0c\u4ee3\u7801\u5982\u4e0b\u6240\u793a\u3002NIO\u7684\u64cd\u4f5c\u867d\u7136\u5e26\u6765\u4e86\u66f4\u597d\u7684\u6027\u80fd\uff0c\u4f46\u662f\u6709\u4e9b\u64cd\u4f5c\u662f\u6bd4\u8f83\u5e95\u5c42\u7684\uff0c\u5bf9\u4e8e\u521d\u5b66\u8005\u6765\u8bf4\u8fd8\u662f\u6709\u4e9b\u96be\u4e8e\u7406\u89e3\u3002\n\n    import java.io.IOException;\n    import java.net.InetSocketAddress;\n    import java.nio.ByteBuffer;\n    import java.nio.CharBuffer;\n    import java.nio.channels.SelectionKey;\n    import java.nio.channels.Selector;\n    import java.nio.channels.ServerSocketChannel;\n    import java.nio.channels.SocketChannel;\n    import java.util.Iterator;\n\n    public class EchoServerNIO {\n\n        private static final int ECHO_SERVER_PORT = 6789;\n        private static final int ECHO_SERVER_TIMEOUT = 5000;\n        private static final int BUFFER_SIZE = 1024;\n\n        private static ServerSocketChannel serverChannel = null;\n        private static Selector selector = null;    // \u591a\u8def\u590d\u7528\u9009\u62e9\u5668\n        private static ByteBuffer buffer = null;    // \u7f13\u51b2\u533a\n\n        public static void main(String[] args) {\n            init();\n            listen();\n        }\n\n        private static void init() {\n            try {\n                serverChannel = ServerSocketChannel.open();\n                buffer = ByteBuffer.allocate(BUFFER_SIZE);\n                serverChannel.socket().bind(new InetSocketAddress(ECHO_SERVER_PORT));\n                serverChannel.configureBlocking(false);\n                selector = Selector.open();\n                serverChannel.register(selector, SelectionKey.OP_ACCEPT);\n            } catch (Exception e) {\n                throw new RuntimeException(e);\n            }\n        }\n\n        private static void listen() {\n            while (true) {\n                try {\n                    if (selector.select(ECHO_SERVER_TIMEOUT) != 0) {\n                        Iterator&lt;SelectionKey&gt; it = selector.selectedKeys().iterator();\n                        while (it.hasNext()) {\n                            SelectionKey key = it.next();\n                            it.remove();\n                            handleKey(key);\n                        }\n                    }\n                } catch (Exception e) {\n                    e.printStackTrace();\n                }\n            }\n        }\n\n        private static void handleKey(SelectionKey key) throws IOException {\n            SocketChannel channel = null;\n\n            try {\n                if (key.isAcceptable()) {\n                    ServerSocketChannel serverChannel = (ServerSocketChannel) key.channel();\n                    channel = serverChannel.accept();\n                    channel.configureBlocking(false);\n                    channel.register(selector, SelectionKey.OP_READ);\n                } else if (key.isReadable()) {\n                    channel = (SocketChannel) key.channel();\n                    buffer.clear();\n                    if (channel.read(buffer) &gt; 0) {\n                        buffer.flip();\n                        CharBuffer charBuffer = CharsetHelper.decode(buffer);\n                        String msg = charBuffer.toString();\n                        System.out.println(\"\u6536\u5230\" + channel.getRemoteAddress() + \"\u7684\u6d88\u606f\uff1a\" + msg);\n                        channel.write(CharsetHelper.encode(CharBuffer.wrap(msg)));\n                    } else {\n                        channel.close();\n                    }\n                }\n            } catch (Exception e) {\n                e.printStackTrace();\n                if (channel != null) {\n                    channel.close();\n                }\n            }\n        }\n\n    }\n\n    import java.nio.ByteBuffer;\n    import java.nio.CharBuffer;\n    import java.nio.charset.CharacterCodingException;\n    import java.nio.charset.Charset;\n    import java.nio.charset.CharsetDecoder;\n    import java.nio.charset.CharsetEncoder;\n\n    public final class CharsetHelper {\n        private static final String UTF_8 = \"UTF-8\";\n        private static CharsetEncoder encoder = Charset.forName(UTF_8).newEncoder();\n        private static CharsetDecoder decoder = Charset.forName(UTF_8).newDecoder();\n\n        private CharsetHelper() {\n        }\n\n        public static ByteBuffer encode(CharBuffer in) throws CharacterCodingException{\n            return encoder.encode(in);\n        }\n\n        public static CharBuffer decode(ByteBuffer in) throws CharacterCodingException{\n            return decoder.decode(in);\n        }\n    }\n73\u3001XML\u6587\u6863\u5b9a\u4e49\u6709\u51e0\u79cd\u5f62\u5f0f\uff1f\u5b83\u4eec\u4e4b\u95f4\u6709\u4f55\u672c\u8d28\u533a\u522b\uff1f\u89e3\u6790XML\u6587\u6863\u6709\u54ea\u51e0\u79cd\u65b9\u5f0f\uff1f\n\u7b54\uff1aXML\u6587\u6863\u5b9a\u4e49\u5206\u4e3aDTD\u548cSchema\u4e24\u79cd\u5f62\u5f0f\uff0c\u4e8c\u8005\u90fd\u662f\u5bf9XML\u8bed\u6cd5\u7684\u7ea6\u675f\uff0c\u5176\u672c\u8d28\u533a\u522b\u5728\u4e8eSchema\u672c\u8eab\u4e5f\u662f\u4e00\u4e2aXML\u6587\u4ef6\uff0c\u53ef\u4ee5\u88abXML\u89e3\u6790\u5668\u89e3\u6790\uff0c\u800c\u4e14\u53ef\u4ee5\u4e3aXML\u627f\u8f7d\u7684\u6570\u636e\u5b9a\u4e49\u7c7b\u578b\uff0c\u7ea6\u675f\u80fd\u529b\u8f83\u4e4bDTD\u66f4\u5f3a\u5927\u3002\n\u5bf9XML\u7684\u89e3\u6790\u4e3b\u8981\u6709DOM\uff08\u6587\u6863\u5bf9\u8c61\u6a21\u578b\uff0cDocument Object Model\uff09\u3001SAX\uff08Simple API for XML\uff09\u548cStAX\uff08Java 6\u4e2d\u5f15\u5165\u7684\u65b0\u7684\u89e3\u6790XML\u7684\u65b9\u5f0f\uff0cStreaming API for XML\uff09\uff0c\u5176\u4e2dDOM\u5904\u7406\u5927\u578b\u6587\u4ef6\u65f6\u5176\u6027\u80fd\u4e0b\u964d\u7684\u975e\u5e38\u5389\u5bb3\uff0c\u8fd9\u4e2a\u95ee\u9898\u662f\u7531DOM\u6811\u7ed3\u6784\u5360\u7528\u7684\u5185\u5b58\u8f83\u591a\u9020\u6210\u7684\uff0c\u800c\u4e14DOM\u89e3\u6790\u65b9\u5f0f\u5fc5\u987b\u5728\u89e3\u6790\u6587\u4ef6\u4e4b\u524d\u628a\u6574\u4e2a\u6587\u6863\u88c5\u5165\u5185\u5b58\uff0c\u9002\u5408\u5bf9XML\u7684\u968f\u673a\u8bbf\u95ee\uff08\u5178\u578b\u7684\u7528\u7a7a\u95f4\u6362\u53d6\u65f6\u95f4\u7684\u7b56\u7565\uff09\uff1bSAX\u662f\u4e8b\u4ef6\u9a71\u52a8\u578b\u7684XML\u89e3\u6790\u65b9\u5f0f\uff0c\u5b83\u987a\u5e8f\u8bfb\u53d6XML\u6587\u4ef6\uff0c\u4e0d\u9700\u8981\u4e00\u6b21\u5168\u90e8\u88c5\u8f7d\u6574\u4e2a\u6587\u4ef6\u3002\u5f53\u9047\u5230\u50cf\u6587\u4ef6\u5f00\u5934\uff0c\u6587\u6863\u7ed3\u675f\uff0c\u6216\u8005\u6807\u7b7e\u5f00\u5934\u4e0e\u6807\u7b7e\u7ed3\u675f\u65f6\uff0c\u5b83\u4f1a\u89e6\u53d1\u4e00\u4e2a\u4e8b\u4ef6\uff0c\u7528\u6237\u901a\u8fc7\u4e8b\u4ef6\u56de\u8c03\u4ee3\u7801\u6765\u5904\u7406XML\u6587\u4ef6\uff0c\u9002\u5408\u5bf9XML\u7684\u987a\u5e8f\u8bbf\u95ee\uff1b\u987e\u540d\u601d\u4e49\uff0cStAX\u628a\u91cd\u70b9\u653e\u5728\u6d41\u4e0a\uff0c\u5b9e\u9645\u4e0aStAX\u4e0e\u5176\u4ed6\u89e3\u6790\u65b9\u5f0f\u7684\u672c\u8d28\u533a\u522b\u5c31\u5728\u4e8e\u5e94\u7528\u7a0b\u5e8f\u80fd\u591f\u628aXML\u4f5c\u4e3a\u4e00\u4e2a\u4e8b\u4ef6\u6d41\u6765\u5904\u7406\u3002\u5c06XML\u4f5c\u4e3a\u4e00\u7ec4\u4e8b\u4ef6\u6765\u5904\u7406\u7684\u60f3\u6cd5\u5e76\u4e0d\u65b0\u9896\uff08SAX\u5c31\u662f\u8fd9\u6837\u505a\u7684\uff09\uff0c\u4f46\u4e0d\u540c\u4e4b\u5904\u5728\u4e8eStAX\u5141\u8bb8\u5e94\u7528\u7a0b\u5e8f\u4ee3\u7801\u628a\u8fd9\u4e9b\u4e8b\u4ef6\u9010\u4e2a\u62c9\u51fa\u6765\uff0c\u800c\u4e0d\u7528\u63d0\u4f9b\u5728\u89e3\u6790\u5668\u65b9\u4fbf\u65f6\u4ece\u89e3\u6790\u5668\u4e2d\u63a5\u6536\u4e8b\u4ef6\u7684\u5904\u7406\u7a0b\u5e8f\u3002\n74\u3001\u4f60\u5728\u9879\u76ee\u4e2d\u54ea\u4e9b\u5730\u65b9\u7528\u5230\u4e86XML\uff1f\n\u7b54\uff1aXML\u7684\u4e3b\u8981\u4f5c\u7528\u6709\u4e24\u4e2a\u65b9\u9762\uff1a\u6570\u636e\u4ea4\u6362\u548c\u4fe1\u606f\u914d\u7f6e\u3002\u5728\u505a\u6570\u636e\u4ea4\u6362\u65f6\uff0cXML\u5c06\u6570\u636e\u7528\u6807\u7b7e\u7ec4\u88c5\u6210\u8d77\u6765\uff0c\u7136\u540e\u538b\u7f29\u6253\u5305\u52a0\u5bc6\u540e\u901a\u8fc7\u7f51\u7edc\u4f20\u9001\u7ed9\u63a5\u6536\u8005\uff0c\u63a5\u6536\u89e3\u5bc6\u4e0e\u89e3\u538b\u7f29\u540e\u518d\u4eceXML\u6587\u4ef6\u4e2d\u8fd8\u539f\u76f8\u5173\u4fe1\u606f\u8fdb\u884c\u5904\u7406\uff0cXML\u66fe\u7ecf\u662f\u5f02\u6784\u7cfb\u7edf\u95f4\u4ea4\u6362\u6570\u636e\u7684\u4e8b\u5b9e\u6807\u51c6\uff0c\u4f46\u6b64\u9879\u529f\u80fd\u51e0\u4e4e\u5df2\u7ecf\u88abJSON\uff08JavaScript Object Notation\uff09\u53d6\u800c\u4ee3\u4e4b\u3002\n\u5f53\u7136\uff0c\u76ee\u524d\u5f88\u591a\u8f6f\u4ef6\u4ecd\u7136\u4f7f\u7528XML\u6765\u5b58\u50a8\u914d\u7f6e\u4fe1\u606f\uff0c\u6211\u4eec\u5728\u5f88\u591a\u9879\u76ee\u4e2d\u901a\u5e38\u4e5f\u4f1a\u5c06\u4f5c\u4e3a\u914d\u7f6e\u4fe1\u606f\u7684\u786c\u4ee3\u7801\u5199\u5728XML\u6587\u4ef6\u4e2d\uff0cJava\u7684\u5f88\u591a\u6846\u67b6\u4e5f\u662f\u8fd9\u4e48\u505a\u7684\uff0c\u800c\u4e14\u8fd9\u4e9b\u6846\u67b6\u90fd\u9009\u62e9\u4e86dom4j\u4f5c\u4e3a\u5904\u7406XML\u7684\u5de5\u5177\uff0c\u56e0\u4e3aSun\u516c\u53f8\u7684\u5b98\u65b9API\u5b9e\u5728\u4e0d\u600e\u4e48\u597d\u7528\u3002\n\u8865\u5145\uff1a\u73b0\u5728\u6709\u5f88\u591a\u65f6\u9ae6\u7684\u8f6f\u4ef6\uff08\u5982Sublime\uff09\u5df2\u7ecf\u5f00\u59cb\u5c06\u914d\u7f6e\u6587\u4ef6\u4e66\u5199\u6210JSON\u683c\u5f0f\uff0c\u6211\u4eec\u5df2\u7ecf\u5f3a\u70c8\u7684\u611f\u53d7\u5230XML\u7684\u53e6\u4e00\u9879\u529f\u80fd\u4e5f\u5c06\u9010\u6e10\u88ab\u4e1a\u754c\u629b\u5f03\u3002\n75\u3001\u9610\u8ff0JDBC\u64cd\u4f5c\u6570\u636e\u5e93\u7684\u6b65\u9aa4\u3002\n\u7b54\uff1a\u4e0b\u9762\u7684\u4ee3\u7801\u4ee5\u8fde\u63a5\u672c\u673a\u7684Oracle\u6570\u636e\u5e93\u4e3a\u4f8b\uff0c\u6f14\u793aJDBC\u64cd\u4f5c\u6570\u636e\u5e93\u7684\u6b65\u9aa4\u3002\n\u52a0\u8f7d\u9a71\u52a8\u3002\n\n    Class.forName(\"oracle.jdbc.driver.OracleDriver\");\n\u521b\u5efa\u8fde\u63a5\u3002\n\n    Connection con = DriverManager.getConnection(\"jdbc:oracle:thin:@localhost:1521:orcl\", \"scott\", \"tiger\");\n\u521b\u5efa\u8bed\u53e5\u3002\n\n    PreparedStatement ps = con.prepareStatement(\"select * from emp where sal between ? and ?\"); ps.setInt(1, 1000); \n    ps.setInt(2, 3000);\n\u6267\u884c\u8bed\u53e5\u3002\n\n     ResultSet rs = ps.executeQuery();\n\u5904\u7406\u7ed3\u679c\u3002\n\n    while(rs.next()) { \n      System.out.println(rs.getInt(\"empno\") + \" - \" + rs.getString(\"ename\")); \n    }\n\u5173\u95ed\u8d44\u6e90\u3002\n\n        finally {\n            if(con != null) {\n                try {\n                    con.close();\n                } catch (SQLException e) {\n                    e.printStackTrace();\n                }\n            }\n        }\n\u63d0\u793a\uff1a\u5173\u95ed\u5916\u90e8\u8d44\u6e90\u7684\u987a\u5e8f\u5e94\u8be5\u548c\u6253\u5f00\u7684\u987a\u5e8f\u76f8\u53cd\uff0c\u4e5f\u5c31\u662f\u8bf4\u5148\u5173\u95edResultSet\u3001\u518d\u5173\u95edStatement\u3001\u5728\u5173\u95edConnection\u3002\u4e0a\u9762\u7684\u4ee3\u7801\u53ea\u5173\u95ed\u4e86Connection\uff08\u8fde\u63a5\uff09\uff0c\u867d\u7136\u901a\u5e38\u60c5\u51b5\u4e0b\u5728\u5173\u95ed\u8fde\u63a5\u65f6\uff0c\u8fde\u63a5\u4e0a\u521b\u5efa\u7684\u8bed\u53e5\u548c\u6253\u5f00\u7684\u6e38\u6807\u4e5f\u4f1a\u5173\u95ed\uff0c\u4f46\u4e0d\u80fd\u4fdd\u8bc1\u603b\u662f\u5982\u6b64\uff0c\u56e0\u6b64\u5e94\u8be5\u6309\u7167\u521a\u624d\u8bf4\u7684\u987a\u5e8f\u5206\u522b\u5173\u95ed\u3002\u6b64\u5916\uff0c\u7b2c\u4e00\u6b65\u52a0\u8f7d\u9a71\u52a8\u5728JDBC 4.0\u4e2d\u662f\u53ef\u4ee5\u7701\u7565\u7684\uff08\u81ea\u52a8\u4ece\u7c7b\u8def\u5f84\u4e2d\u52a0\u8f7d\u9a71\u52a8\uff09\uff0c\u4f46\u662f\u6211\u4eec\u5efa\u8bae\u4fdd\u7559\u3002\n76\u3001Statement\u548cPreparedStatement\u6709\u4ec0\u4e48\u533a\u522b\uff1f\u54ea\u4e2a\u6027\u80fd\u66f4\u597d\uff1f\n\u7b54\uff1a\u4e0eStatement\u76f8\u6bd4\uff0c\u2460PreparedStatement\u63a5\u53e3\u4ee3\u8868\u9884\u7f16\u8bd1\u7684\u8bed\u53e5\uff0c\u5b83\u4e3b\u8981\u7684\u4f18\u52bf\u5728\u4e8e\u53ef\u4ee5\u51cf\u5c11SQL\u7684\u7f16\u8bd1\u9519\u8bef\u5e76\u589e\u52a0SQL\u7684\u5b89\u5168\u6027\uff08\u51cf\u5c11SQL\u6ce8\u5c04\u653b\u51fb\u7684\u53ef\u80fd\u6027\uff09\uff1b\u2461PreparedStatement\u4e2d\u7684SQL\u8bed\u53e5\u662f\u53ef\u4ee5\u5e26\u53c2\u6570\u7684\uff0c\u907f\u514d\u4e86\u7528\u5b57\u7b26\u4e32\u8fde\u63a5\u62fc\u63a5SQL\u8bed\u53e5\u7684\u9ebb\u70e6\u548c\u4e0d\u5b89\u5168\uff1b\u2462\u5f53\u6279\u91cf\u5904\u7406SQL\u6216\u9891\u7e41\u6267\u884c\u76f8\u540c\u7684\u67e5\u8be2\u65f6\uff0cPreparedStatement\u6709\u660e\u663e\u7684\u6027\u80fd\u4e0a\u7684\u4f18\u52bf\uff0c\u7531\u4e8e\u6570\u636e\u5e93\u53ef\u4ee5\u5c06\u7f16\u8bd1\u4f18\u5316\u540e\u7684SQL\u8bed\u53e5\u7f13\u5b58\u8d77\u6765\uff0c\u4e0b\u6b21\u6267\u884c\u76f8\u540c\u7ed3\u6784\u7684\u8bed\u53e5\u65f6\u5c31\u4f1a\u5f88\u5feb\uff08\u4e0d\u7528\u518d\u6b21\u7f16\u8bd1\u548c\u751f\u6210\u6267\u884c\u8ba1\u5212\uff09\u3002\n\u8865\u5145\uff1a\u4e3a\u4e86\u63d0\u4f9b\u5bf9\u5b58\u50a8\u8fc7\u7a0b\u7684\u8c03\u7528\uff0cJDBC API\u4e2d\u8fd8\u63d0\u4f9b\u4e86CallableStatement\u63a5\u53e3\u3002\u5b58\u50a8\u8fc7\u7a0b\uff08Stored Procedure\uff09\u662f\u6570\u636e\u5e93\u4e2d\u4e00\u7ec4\u4e3a\u4e86\u5b8c\u6210\u7279\u5b9a\u529f\u80fd\u7684SQL\u8bed\u53e5\u7684\u96c6\u5408\uff0c\u7ecf\u7f16\u8bd1\u540e\u5b58\u50a8\u5728\u6570\u636e\u5e93\u4e2d\uff0c\u7528\u6237\u901a\u8fc7\u6307\u5b9a\u5b58\u50a8\u8fc7\u7a0b\u7684\u540d\u5b57\u5e76\u7ed9\u51fa\u53c2\u6570\uff08\u5982\u679c\u8be5\u5b58\u50a8\u8fc7\u7a0b\u5e26\u6709\u53c2\u6570\uff09\u6765\u6267\u884c\u5b83\u3002\u867d\u7136\u8c03\u7528\u5b58\u50a8\u8fc7\u7a0b\u4f1a\u5728\u7f51\u7edc\u5f00\u9500\u3001\u5b89\u5168\u6027\u3001\u6027\u80fd\u4e0a\u83b7\u5f97\u5f88\u591a\u597d\u5904\uff0c\u4f46\u662f\u5b58\u5728\u5982\u679c\u5e95\u5c42\u6570\u636e\u5e93\u53d1\u751f\u8fc1\u79fb\u65f6\u5c31\u4f1a\u6709\u5f88\u591a\u9ebb\u70e6\uff0c\u56e0\u4e3a\u6bcf\u79cd\u6570\u636e\u5e93\u7684\u5b58\u50a8\u8fc7\u7a0b\u5728\u4e66\u5199\u4e0a\u5b58\u5728\u4e0d\u5c11\u7684\u5dee\u522b\u3002\n77\u3001\u4f7f\u7528JDBC\u64cd\u4f5c\u6570\u636e\u5e93\u65f6\uff0c\u5982\u4f55\u63d0\u5347\u8bfb\u53d6\u6570\u636e\u7684\u6027\u80fd\uff1f\u5982\u4f55\u63d0\u5347\u66f4\u65b0\u6570\u636e\u7684\u6027\u80fd\uff1f\n\u7b54\uff1a\u8981\u63d0\u5347\u8bfb\u53d6\u6570\u636e\u7684\u6027\u80fd\uff0c\u53ef\u4ee5\u6307\u5b9a\u901a\u8fc7\u7ed3\u679c\u96c6\uff08ResultSet\uff09\u5bf9\u8c61\u7684setFetchSize()\u65b9\u6cd5\u6307\u5b9a\u6bcf\u6b21\u6293\u53d6\u7684\u8bb0\u5f55\u6570\uff08\u5178\u578b\u7684\u7a7a\u95f4\u6362\u65f6\u95f4\u7b56\u7565\uff09\uff1b\u8981\u63d0\u5347\u66f4\u65b0\u6570\u636e\u7684\u6027\u80fd\u53ef\u4ee5\u4f7f\u7528PreparedStatement\u8bed\u53e5\u6784\u5efa\u6279\u5904\u7406\uff0c\u5c06\u82e5\u5e72SQL\u8bed\u53e5\u7f6e\u4e8e\u4e00\u4e2a\u6279\u5904\u7406\u4e2d\u6267\u884c\u3002\n78\u3001\u5728\u8fdb\u884c\u6570\u636e\u5e93\u7f16\u7a0b\u65f6\uff0c\u8fde\u63a5\u6c60\u6709\u4ec0\u4e48\u4f5c\u7528\uff1f\n\u7b54\uff1a\u7531\u4e8e\u521b\u5efa\u8fde\u63a5\u548c\u91ca\u653e\u8fde\u63a5\u90fd\u6709\u5f88\u5927\u7684\u5f00\u9500\uff08\u5c24\u5176\u662f\u6570\u636e\u5e93\u670d\u52a1\u5668\u4e0d\u5728\u672c\u5730\u65f6\uff0c\u6bcf\u6b21\u5efa\u7acb\u8fde\u63a5\u90fd\u9700\u8981\u8fdb\u884cTCP\u7684\u4e09\u6b21\u63e1\u624b\uff0c\u91ca\u653e\u8fde\u63a5\u9700\u8981\u8fdb\u884cTCP\u56db\u6b21\u63e1\u624b\uff0c\u9020\u6210\u7684\u5f00\u9500\u662f\u4e0d\u53ef\u5ffd\u89c6\u7684\uff09\uff0c\u4e3a\u4e86\u63d0\u5347\u7cfb\u7edf\u8bbf\u95ee\u6570\u636e\u5e93\u7684\u6027\u80fd\uff0c\u53ef\u4ee5\u4e8b\u5148\u521b\u5efa\u82e5\u5e72\u8fde\u63a5\u7f6e\u4e8e\u8fde\u63a5\u6c60\u4e2d\uff0c\u9700\u8981\u65f6\u76f4\u63a5\u4ece\u8fde\u63a5\u6c60\u83b7\u53d6\uff0c\u4f7f\u7528\u7ed3\u675f\u65f6\u5f52\u8fd8\u8fde\u63a5\u6c60\u800c\u4e0d\u5fc5\u5173\u95ed\u8fde\u63a5\uff0c\u4ece\u800c\u907f\u514d\u9891\u7e41\u521b\u5efa\u548c\u91ca\u653e\u8fde\u63a5\u6240\u9020\u6210\u7684\u5f00\u9500\uff0c\u8fd9\u662f\u5178\u578b\u7684\u7528\u7a7a\u95f4\u6362\u53d6\u65f6\u95f4\u7684\u7b56\u7565\uff08\u6d6a\u8d39\u4e86\u7a7a\u95f4\u5b58\u50a8\u8fde\u63a5\uff0c\u4f46\u8282\u7701\u4e86\u521b\u5efa\u548c\u91ca\u653e\u8fde\u63a5\u7684\u65f6\u95f4\uff09\u3002\n\u6c60\u5316\u6280\u672f\u5728Java\u5f00\u53d1\u4e2d\u662f\u5f88\u5e38\u89c1\u7684\uff0c\u5728\u4f7f\u7528\u7ebf\u7a0b\u65f6\u521b\u5efa\u7ebf\u7a0b\u6c60\u7684\u9053\u7406\u4e0e\u6b64\u76f8\u540c\u3002\u57fa\u4e8eJava\u7684\u5f00\u6e90\u6570\u636e\u5e93\u8fde\u63a5\u6c60\u4e3b\u8981\u6709\uff1aC3P0\u3001Proxool\u3001DBCP\u3001BoneCP\u3001Druid\u7b49\u3002\n\u8865\u5145\uff1a\u5728\u8ba1\u7b97\u673a\u7cfb\u7edf\u4e2d\u65f6\u95f4\u548c\u7a7a\u95f4\u662f\u4e0d\u53ef\u8c03\u548c\u7684\u77db\u76fe\uff0c\u7406\u89e3\u8fd9\u4e00\u70b9\u5bf9\u8bbe\u8ba1\u6ee1\u8db3\u6027\u80fd\u8981\u6c42\u7684\u7b97\u6cd5\u662f\u81f3\u5173\u91cd\u8981\u7684\u3002\u5927\u578b\u7f51\u7ad9\u6027\u80fd\u4f18\u5316\u7684\u4e00\u4e2a\u5173\u952e\u5c31\u662f\u4f7f\u7528\u7f13\u5b58\uff0c\u800c\u7f13\u5b58\u8ddf\u4e0a\u9762\u8bb2\u7684\u8fde\u63a5\u6c60\u9053\u7406\u975e\u5e38\u7c7b\u4f3c\uff0c\u4e5f\u662f\u4f7f\u7528\u7a7a\u95f4\u6362\u65f6\u95f4\u7684\u7b56\u7565\u3002\u53ef\u4ee5\u5c06\u70ed\u70b9\u6570\u636e\u7f6e\u4e8e\u7f13\u5b58\u4e2d\uff0c\u5f53\u7528\u6237\u67e5\u8be2\u8fd9\u4e9b\u6570\u636e\u65f6\u53ef\u4ee5\u76f4\u63a5\u4ece\u7f13\u5b58\u4e2d\u5f97\u5230\uff0c\u8fd9\u65e0\u8bba\u5982\u4f55\u4e5f\u5feb\u8fc7\u53bb\u6570\u636e\u5e93\u4e2d\u67e5\u8be2\u3002\u5f53\u7136\uff0c\u7f13\u5b58\u7684\u7f6e\u6362\u7b56\u7565\u7b49\u4e5f\u4f1a\u5bf9\u7cfb\u7edf\u6027\u80fd\u4ea7\u751f\u91cd\u8981\u5f71\u54cd\uff0c\u5bf9\u4e8e\u8fd9\u4e2a\u95ee\u9898\u7684\u8ba8\u8bba\u5df2\u7ecf\u8d85\u51fa\u4e86\u8fd9\u91cc\u8981\u9610\u8ff0\u7684\u8303\u56f4\u3002\n79\u3001\u4ec0\u4e48\u662fDAO\u6a21\u5f0f\uff1f\n\u7b54\uff1aDAO\uff08Data Access Object\uff09\u987e\u540d\u601d\u4e49\u662f\u4e00\u4e2a\u4e3a\u6570\u636e\u5e93\u6216\u5176\u4ed6\u6301\u4e45\u5316\u673a\u5236\u63d0\u4f9b\u4e86\u62bd\u8c61\u63a5\u53e3\u7684\u5bf9\u8c61\uff0c\u5728\u4e0d\u66b4\u9732\u5e95\u5c42\u6301\u4e45\u5316\u65b9\u6848\u5b9e\u73b0\u7ec6\u8282\u7684\u524d\u63d0\u4e0b\u63d0\u4f9b\u4e86\u5404\u79cd\u6570\u636e\u8bbf\u95ee\u64cd\u4f5c\u3002\u5728\u5b9e\u9645\u7684\u5f00\u53d1\u4e2d\uff0c\u5e94\u8be5\u5c06\u6240\u6709\u5bf9\u6570\u636e\u6e90\u7684\u8bbf\u95ee\u64cd\u4f5c\u8fdb\u884c\u62bd\u8c61\u5316\u540e\u5c01\u88c5\u5728\u4e00\u4e2a\u516c\u5171API\u4e2d\u3002\n\u7528\u7a0b\u5e8f\u8bbe\u8ba1\u8bed\u8a00\u6765\u8bf4\uff0c\u5c31\u662f\u5efa\u7acb\u4e00\u4e2a\u63a5\u53e3\uff0c\u63a5\u53e3\u4e2d\u5b9a\u4e49\u4e86\u6b64\u5e94\u7528\u7a0b\u5e8f\u4e2d\u5c06\u4f1a\u7528\u5230\u7684\u6240\u6709\u4e8b\u52a1\u65b9\u6cd5\u3002\u5728\u8fd9\u4e2a\u5e94\u7528\u7a0b\u5e8f\u4e2d\uff0c\u5f53\u9700\u8981\u548c\u6570\u636e\u6e90\u8fdb\u884c\u4ea4\u4e92\u7684\u65f6\u5019\u5219\u4f7f\u7528\u8fd9\u4e2a\u63a5\u53e3\uff0c\u5e76\u4e14\u7f16\u5199\u4e00\u4e2a\u5355\u72ec\u7684\u7c7b\u6765\u5b9e\u73b0\u8fd9\u4e2a\u63a5\u53e3\uff0c\u5728\u903b\u8f91\u4e0a\u8be5\u7c7b\u5bf9\u5e94\u4e00\u4e2a\u7279\u5b9a\u7684\u6570\u636e\u5b58\u50a8\u3002DAO\u6a21\u5f0f\u5b9e\u9645\u4e0a\u5305\u542b\u4e86\u4e24\u4e2a\u6a21\u5f0f\uff0c\u4e00\u662fData Accessor\uff08\u6570\u636e\u8bbf\u95ee\u5668\uff09\uff0c\u4e8c\u662fData Object\uff08\u6570\u636e\u5bf9\u8c61\uff09\uff0c\u524d\u8005\u8981\u89e3\u51b3\u5982\u4f55\u8bbf\u95ee\u6570\u636e\u7684\u95ee\u9898\uff0c\u800c\u540e\u8005\u8981\u89e3\u51b3\u7684\u662f\u5982\u4f55\u7528\u5bf9\u8c61\u5c01\u88c5\u6570\u636e\u3002\n80\u3001\u4e8b\u52a1\u7684ACID\u662f\u6307\u4ec0\u4e48\uff1f\n\u7b54\uff1a\n\n\u539f\u5b50\u6027(Atomic)\uff1a\u4e8b\u52a1\u4e2d\u5404\u9879\u64cd\u4f5c\uff0c\u8981\u4e48\u5168\u505a\u8981\u4e48\u5168\u4e0d\u505a\uff0c\u4efb\u4f55\u4e00\u9879\u64cd\u4f5c\u7684\u5931\u8d25\u90fd\u4f1a\u5bfc\u81f4\u6574\u4e2a\u4e8b\u52a1\u7684\u5931\u8d25\uff1b\n\n\u4e00\u81f4\u6027(Consistent)\uff1a\u4e8b\u52a1\u7ed3\u675f\u540e\u7cfb\u7edf\u72b6\u6001\u662f\u4e00\u81f4\u7684\uff1b\n\n\u9694\u79bb\u6027(Isolated)\uff1a\u5e76\u53d1\u6267\u884c\u7684\u4e8b\u52a1\u5f7c\u6b64\u65e0\u6cd5\u770b\u5230\u5bf9\u65b9\u7684\u4e2d\u95f4\u72b6\u6001\uff1b\n\n\u6301\u4e45\u6027(Durable)\uff1a\u4e8b\u52a1\u5b8c\u6210\u540e\u6240\u505a\u7684\u6539\u52a8\u90fd\u4f1a\u88ab\u6301\u4e45\u5316\uff0c\u5373\u4f7f\u53d1\u751f\u707e\u96be\u6027\u7684\u5931\u8d25\u3002\u901a\u8fc7\u65e5\u5fd7\u548c\u540c\u6b65\u5907\u4efd\u53ef\u4ee5\u5728\u6545\u969c\u53d1\u751f\u540e\u91cd\u5efa\u6570\u636e\u3002\n\n\n\u8865\u5145\uff1a\u5173\u4e8e\u4e8b\u52a1\uff0c\u5728\u9762\u8bd5\u4e2d\u88ab\u95ee\u5230\u7684\u6982\u7387\u662f\u5f88\u9ad8\u7684\uff0c\u53ef\u4ee5\u95ee\u7684\u95ee\u9898\u4e5f\u662f\u5f88\u591a\u7684\u3002\u9996\u5148\u9700\u8981\u77e5\u9053\u7684\u662f\uff0c\u53ea\u6709\u5b58\u5728\u5e76\u53d1\u6570\u636e\u8bbf\u95ee\u65f6\u624d\u9700\u8981\u4e8b\u52a1\u3002\n\u5f53\u591a\u4e2a\u4e8b\u52a1\u8bbf\u95ee\u540c\u4e00\u6570\u636e\u65f6\uff0c\u53ef\u80fd\u4f1a\u5b58\u57285\u7c7b\u95ee\u9898\uff0c\u5305\u62ec 3\u7c7b\u6570\u636e\u8bfb\u53d6\u95ee\u9898\uff08\u810f\u8bfb\u3001\u4e0d\u53ef\u91cd\u590d\u8bfb\u548c\u5e7b\u8bfb\uff09\u548c 2\u7c7b\u6570\u636e\u66f4\u65b0\u95ee\u9898\uff08\u7b2c1\u7c7b\u4e22\u5931\u66f4\u65b0\u548c\u7b2c2\u7c7b\u4e22\u5931\u66f4\u65b0\uff09\u3002\n\u810f\u8bfb\uff08Dirty Read\uff09\uff1aA\u4e8b\u52a1\u8bfb\u53d6B\u4e8b\u52a1\u5c1a\u672a\u63d0\u4ea4\u7684\u6570\u636e\u5e76\u5728\u6b64\u57fa\u7840\u4e0a\u64cd\u4f5c\uff0c\u800cB\u4e8b\u52a1\u6267\u884c\u56de\u6eda\uff0c\u90a3\u4e48A\u8bfb\u53d6\u5230\u7684\u6570\u636e\u5c31\u662f\u810f\u6570\u636e\u3002\n\n\n\u65f6\u95f4\n\u8f6c\u8d26\u4e8b\u52a1A\n\u53d6\u6b3e\u4e8b\u52a1B\n\n\n\n\nT1\n\n\u5f00\u59cb\u4e8b\u52a1\n\n\nT2\n\u5f00\u59cb\u4e8b\u52a1\n\n\n\nT3\n\n\u67e5\u8be2\u8d26\u6237\u4f59\u989d\u4e3a1000\u5143\n\n\nT4\n\n\u53d6\u51fa500\u5143\u4f59\u989d\u4fee\u6539\u4e3a500\u5143\n\n\nT5\n\u67e5\u8be2\u8d26\u6237\u4f59\u989d\u4e3a500\u5143\uff08\u810f\u8bfb\uff09\n\n\n\nT6\n\n\u64a4\u9500\u4e8b\u52a1\u4f59\u989d\u6062\u590d\u4e3a1000\u5143\n\n\nT7\n\u6c47\u5165100\u5143\u628a\u4f59\u989d\u4fee\u6539\u4e3a600\u5143\n\n\n\nT8\n\u63d0\u4ea4\u4e8b\u52a1\n\n\n\n\u4e0d\u53ef\u91cd\u590d\u8bfb\uff08Unrepeatable Read\uff09\uff1a\u4e8b\u52a1A\u91cd\u65b0\u8bfb\u53d6\u524d\u9762\u8bfb\u53d6\u8fc7\u7684\u6570\u636e\uff0c\u53d1\u73b0\u8be5\u6570\u636e\u5df2\u7ecf\u88ab\u53e6\u4e00\u4e2a\u5df2\u63d0\u4ea4\u7684\u4e8b\u52a1B\u4fee\u6539\u8fc7\u4e86\u3002\n\n\n\u65f6\u95f4\n\u8f6c\u8d26\u4e8b\u52a1A\n\u53d6\u6b3e\u4e8b\u52a1B\n\n\n\n\nT1\n\n\u5f00\u59cb\u4e8b\u52a1\n\n\nT2\n\u5f00\u59cb\u4e8b\u52a1\n\n\n\nT3\n\n\u67e5\u8be2\u8d26\u6237\u4f59\u989d\u4e3a1000\u5143\n\n\nT4\n\u67e5\u8be2\u8d26\u6237\u4f59\u989d\u4e3a1000\u5143\n\n\n\nT5\n\n\u53d6\u51fa100\u5143\u4fee\u6539\u4f59\u989d\u4e3a900\u5143\n\n\nT6\n\n\u63d0\u4ea4\u4e8b\u52a1\n\n\nT7\n\u67e5\u8be2\u8d26\u6237\u4f59\u989d\u4e3a900\u5143\uff08\u4e0d\u53ef\u91cd\u590d\u8bfb\uff09\n\n\n\n\u5e7b\u8bfb\uff08Phantom Read\uff09\uff1a\u4e8b\u52a1A\u91cd\u65b0\u6267\u884c\u4e00\u4e2a\u67e5\u8be2\uff0c\u8fd4\u56de\u4e00\u7cfb\u5217\u7b26\u5408\u67e5\u8be2\u6761\u4ef6\u7684\u884c\uff0c\u53d1\u73b0\u5176\u4e2d\u63d2\u5165\u4e86\u88ab\u4e8b\u52a1B\u63d0\u4ea4\u7684\u884c\u3002\n\n\n\u65f6\u95f4\n\u7edf\u8ba1\u91d1\u989d\u4e8b\u52a1A\n\u8f6c\u8d26\u4e8b\u52a1B\n\n\n\n\nT1\n\n\u5f00\u59cb\u4e8b\u52a1\n\n\nT2\n\u5f00\u59cb\u4e8b\u52a1\n\n\n\nT3\n\u7edf\u8ba1\u603b\u5b58\u6b3e\u4e3a10000\u5143\n\n\n\nT4\n\n\u65b0\u589e\u4e00\u4e2a\u5b58\u6b3e\u8d26\u6237\u5b58\u5165100\u5143\n\n\nT5\n\n\u63d0\u4ea4\u4e8b\u52a1\n\n\nT6\n\u518d\u6b21\u7edf\u8ba1\u603b\u5b58\u6b3e\u4e3a10100\u5143\uff08\u5e7b\u8bfb\uff09\n\n\n\n\u7b2c1\u7c7b\u4e22\u5931\u66f4\u65b0\uff1a\u4e8b\u52a1A\u64a4\u9500\u65f6\uff0c\u628a\u5df2\u7ecf\u63d0\u4ea4\u7684\u4e8b\u52a1B\u7684\u66f4\u65b0\u6570\u636e\u8986\u76d6\u4e86\u3002\n\n\n\u65f6\u95f4\n\u53d6\u6b3e\u4e8b\u52a1A\n\u8f6c\u8d26\u4e8b\u52a1B\n\n\n\n\nT1\n\u5f00\u59cb\u4e8b\u52a1\n\n\n\nT2\n\n\u5f00\u59cb\u4e8b\u52a1\n\n\nT3\n\u67e5\u8be2\u8d26\u6237\u4f59\u989d\u4e3a1000\u5143\n\n\n\nT4\n\n\u67e5\u8be2\u8d26\u6237\u4f59\u989d\u4e3a1000\u5143\n\n\nT5\n\n\u6c47\u5165100\u5143\u4fee\u6539\u4f59\u989d\u4e3a1100\u5143\n\n\nT6\n\n\u63d0\u4ea4\u4e8b\u52a1\n\n\nT7\n\u53d6\u51fa100\u5143\u5c06\u4f59\u989d\u4fee\u6539\u4e3a900\u5143\n\n\n\nT8\n\u64a4\u9500\u4e8b\u52a1\n\n\n\nT9\n\u4f59\u989d\u6062\u590d\u4e3a1000\u5143\uff08\u4e22\u5931\u66f4\u65b0\uff09\n\n\n\n\u7b2c2\u7c7b\u4e22\u5931\u66f4\u65b0\uff1a\u4e8b\u52a1A\u8986\u76d6\u4e8b\u52a1B\u5df2\u7ecf\u63d0\u4ea4\u7684\u6570\u636e\uff0c\u9020\u6210\u4e8b\u52a1B\u6240\u505a\u7684\u64cd\u4f5c\u4e22\u5931\u3002\n\n\n\u65f6\u95f4\n\u53d6\u6b3e\u4e8b\u52a1A\n\u8f6c\u8d26\u4e8b\u52a1B\n\n\n\n\nT1\n\n\u5f00\u59cb\u4e8b\u52a1\n\n\nT2\n\u5f00\u59cb\u4e8b\u52a1\n\n\n\nT3\n\n\u67e5\u8be2\u8d26\u6237\u4f59\u989d\u4e3a1000\u5143\n\n\nT4\n\u67e5\u8be2\u8d26\u6237\u4f59\u989d\u4e3a1000\u5143\n\n\n\nT5\n\n\u53d6\u51fa100\u5143\u5c06\u4f59\u989d\u4fee\u6539\u4e3a900\u5143\n\n\nT6\n\n\u63d0\u4ea4\u4e8b\u52a1\n\n\nT7\n\u6c47\u5165100\u5143\u5c06\u4f59\u989d\u4fee\u6539\u4e3a1100\u5143\n\n\n\nT8\n\u63d0\u4ea4\u4e8b\u52a1\n\n\n\nT9\n\u67e5\u8be2\u8d26\u6237\u4f59\u989d\u4e3a1100\u5143\uff08\u4e22\u5931\u66f4\u65b0\uff09\n\n\n\n\u6570\u636e\u5e76\u53d1\u8bbf\u95ee\u6240\u4ea7\u751f\u7684\u95ee\u9898\uff0c\u5728\u6709\u4e9b\u573a\u666f\u4e0b\u53ef\u80fd\u662f\u5141\u8bb8\u7684\uff0c\u4f46\u662f\u6709\u4e9b\u573a\u666f\u4e0b\u53ef\u80fd\u5c31\u662f\u81f4\u547d\u7684\u3002\n\u6570\u636e\u5e93\u901a\u5e38\u4f1a\u901a\u8fc7\u9501\u673a\u5236\u6765\u89e3\u51b3\u6570\u636e\u5e76\u53d1\u8bbf\u95ee\u95ee\u9898\uff1a\n\u6309\u9501\u5b9a\u5bf9\u8c61\u4e0d\u540c\u53ef\u4ee5\u5206\u4e3a\u8868\u7ea7\u9501\u548c\u884c\u7ea7\u9501\uff1b\n\u6309\u5e76\u53d1\u4e8b\u52a1\u9501\u5b9a\u5173\u7cfb\u53ef\u4ee5\u5206\u4e3a\u5171\u4eab\u9501\u548c\u72ec\u5360\u9501\n\u5177\u4f53\u7684\u5185\u5bb9\u5927\u5bb6\u53ef\u4ee5\u81ea\u884c\u67e5\u9605\u8d44\u6599\u8fdb\u884c\u4e86\u89e3\u3002\u76f4\u63a5\u4f7f\u7528\u9501\u662f\u975e\u5e38\u9ebb\u70e6\u7684\uff0c\u4e3a\u6b64\u6570\u636e\u5e93\u4e3a\u7528\u6237\u63d0\u4f9b\u4e86\u81ea\u52a8\u9501\u673a\u5236\uff0c\u53ea\u8981\u7528\u6237\u6307\u5b9a\u4f1a\u8bdd\u7684\u4e8b\u52a1\u9694\u79bb\u7ea7\u522b\uff0c\u6570\u636e\u5e93\u5c31\u4f1a\u901a\u8fc7\u5206\u6790SQL\u8bed\u53e5\u7136\u540e\u4e3a\u4e8b\u52a1\u8bbf\u95ee\u7684\u8d44\u6e90\u52a0\u4e0a\u5408\u9002\u7684\u9501\uff0c\u6b64\u5916\uff0c\u6570\u636e\u5e93\u8fd8\u4f1a\u7ef4\u62a4\u8fd9\u4e9b\u9501\u901a\u8fc7\u5404\u79cd\u624b\u6bb5\u63d0\u9ad8\u7cfb\u7edf\u7684\u6027\u80fd\uff0c\u8fd9\u4e9b\u5bf9\u7528\u6237\u6765\u8bf4\u90fd\u662f\u900f\u660e\u7684\uff08\u5c31\u662f\u8bf4\u4f60\u4e0d\u7528\u7406\u89e3\uff0c\u4e8b\u5b9e\u4e0a\u6211\u786e\u5b9e\u4e5f\u4e0d\u77e5\u9053\uff09\u3002\nANSI/ISO SQL 92\u6807\u51c6\u5b9a\u4e49\u4e864\u4e2a\u7b49\u7ea7\u7684\u4e8b\u52a1\u9694\u79bb\u7ea7\u522b\uff0c\u5982\u4e0b\u8868\u6240\u793a\uff1a\n\n\n\u9694\u79bb\u7ea7\u522b\n\u810f\u8bfb\n\u4e0d\u53ef\u91cd\u590d\u8bfb\n\u5e7b\u8bfb\n\u7b2c\u4e00\u7c7b\u4e22\u5931\u66f4\u65b0\n\u7b2c\u4e8c\u7c7b\u4e22\u5931\u66f4\u65b0\n\n\n\n\nREADUNCOMMITED\n\u5141\u8bb8\n\u5141\u8bb8\n\u5141\u8bb8\n\u4e0d\u5141\u8bb8\n\u5141\u8bb8\n\n\nREADCOMMITTED\n\u4e0d\u5141\u8bb8\n\u5141\u8bb8\n\u5141\u8bb8\n\u4e0d\u5141\u8bb8\n\u5141\u8bb8\n\n\nREPEATABLEREAD\n\u4e0d\u5141\u8bb8\n\u4e0d\u5141\u8bb8\n\u5141\u8bb8\n\u4e0d\u5141\u8bb8\n\u4e0d\u5141\u8bb8\n\n\nSERIALIZABLE\n\u4e0d\u5141\u8bb8\n\u4e0d\u5141\u8bb8\n\u4e0d\u5141\u8bb8\n\u4e0d\u5141\u8bb8\n\u4e0d\u5141\u8bb8\n\n\n\n\u9700\u8981\u8bf4\u660e\u7684\u662f\uff0c\u4e8b\u52a1\u9694\u79bb\u7ea7\u522b\u548c\u6570\u636e\u8bbf\u95ee\u7684\u5e76\u53d1\u6027\u662f\u5bf9\u7acb\u7684\uff0c\u4e8b\u52a1\u9694\u79bb\u7ea7\u522b\u8d8a\u9ad8\u5e76\u53d1\u6027\u5c31\u8d8a\u5dee\u3002\u6240\u4ee5\u8981\u6839\u636e\u5177\u4f53\u7684\u5e94\u7528\u6765\u786e\u5b9a\u5408\u9002\u7684\u4e8b\u52a1\u9694\u79bb\u7ea7\u522b\uff0c\u8fd9\u4e2a\u5730\u65b9\u6ca1\u6709\u4e07\u80fd\u7684\u539f\u5219\u3002\n81\u3001JDBC\u4e2d\u5982\u4f55\u8fdb\u884c\u4e8b\u52a1\u5904\u7406\uff1f\n\u7b54\uff1aConnection\u63d0\u4f9b\u4e86\u4e8b\u52a1\u5904\u7406\u7684\u65b9\u6cd5\uff0c\u901a\u8fc7\u8c03\u7528setAutoCommit(false)\u53ef\u4ee5\u8bbe\u7f6e\u624b\u52a8\u63d0\u4ea4\u4e8b\u52a1\uff1b\u5f53\u4e8b\u52a1\u5b8c\u6210\u540e\u7528commit()\u663e\u5f0f\u63d0\u4ea4\u4e8b\u52a1\uff1b\u5982\u679c\u5728\u4e8b\u52a1\u5904\u7406\u8fc7\u7a0b\u4e2d\u53d1\u751f\u5f02\u5e38\u5219\u901a\u8fc7rollback()\u8fdb\u884c\u4e8b\u52a1\u56de\u6eda\u3002\n\u9664\u6b64\u4e4b\u5916\uff0c\u4eceJDBC 3.0\u4e2d\u8fd8\u5f15\u5165\u4e86Savepoint\uff08\u4fdd\u5b58\u70b9\uff09\u7684\u6982\u5ff5\uff0c\u5141\u8bb8\u901a\u8fc7\u4ee3\u7801\u8bbe\u7f6e\u4fdd\u5b58\u70b9\u5e76\u8ba9\u4e8b\u52a1\u56de\u6eda\u5230\u6307\u5b9a\u7684\u4fdd\u5b58\u70b9\u3002\njava-intelview-1-003\n82\u3001JDBC\u80fd\u5426\u5904\u7406Blob\u548cClob\uff1f\n\u7b54\uff1a Blob\u662f\u6307\u4e8c\u8fdb\u5236\u5927\u5bf9\u8c61\uff08Binary Large Object\uff09\uff0c\u800cClob\u662f\u6307\u5927\u5b57\u7b26\u5bf9\u8c61\uff08Character Large Objec\uff09\uff0c\u56e0\u6b64\u5176\u4e2dBlob\u662f\u4e3a\u5b58\u50a8\u5927\u7684\u4e8c\u8fdb\u5236\u6570\u636e\u800c\u8bbe\u8ba1\u7684\uff0c\u800cClob\u662f\u4e3a\u5b58\u50a8\u5927\u7684\u6587\u672c\u6570\u636e\u800c\u8bbe\u8ba1\u7684\u3002\nJDBC\u7684PreparedStatement\u548cResultSet\u90fd\u63d0\u4f9b\u4e86\u76f8\u5e94\u7684\u65b9\u6cd5\u6765\u652f\u6301Blob\u548cClob\u64cd\u4f5c\u3002\n\u4e0b\u9762\u7684\u4ee3\u7801\u5c55\u793a\u4e86\u5982\u4f55\u4f7f\u7528JDBC\u64cd\u4f5cLOB\uff1a\n\u4e0b\u9762\u4ee5MySQL\u6570\u636e\u5e93\u4e3a\u4f8b\uff0c\u521b\u5efa\u4e00\u4e2a\u5f20\u6709\u4e09\u4e2a\u5b57\u6bb5\u7684\u7528\u6237\u8868\uff0c\u5305\u62ec\u7f16\u53f7\uff08id\uff09\u3001\u59d3\u540d\uff08name\uff09\u548c\u7167\u7247\uff08photo\uff09\uff0c\u5efa\u8868\u8bed\u53e5\u5982\u4e0b\uff1a\n\n    create table tb_user\n    (\n    id int primary key auto_increment,\n    name varchar(20) unique not null,\n    photo longblob\n    );\n\u4e0b\u9762\u7684Java\u4ee3\u7801\u5411\u6570\u636e\u5e93\u4e2d\u63d2\u5165\u4e00\u6761\u8bb0\u5f55\uff1a\n\n    import java.io.FileInputStream;\n    import java.io.IOException;\n    import java.io.InputStream;\n    import java.sql.Connection;\n    import java.sql.DriverManager;\n    import java.sql.PreparedStatement;\n    import java.sql.SQLException;\n\n    class JdbcLobTest {\n\n        public static void main(String[] args) {\n            Connection con = null;\n            try {\n                // 1. \u52a0\u8f7d\u9a71\u52a8\uff08Java6\u4ee5\u4e0a\u7248\u672c\u53ef\u4ee5\u7701\u7565\uff09\n                Class.forName(\"com.mysql.jdbc.Driver\");\n                // 2. \u5efa\u7acb\u8fde\u63a5\n                con = DriverManager.getConnection(\"jdbc:mysql://localhost:3306/test\", \"root\", \"123456\");\n                // 3. \u521b\u5efa\u8bed\u53e5\u5bf9\u8c61\n                PreparedStatement ps = con.prepareStatement(\"insert into tb_user values (default, ?, ?)\");\n                ps.setString(1, \"\u9a86\u660a\");              // \u5c06SQL\u8bed\u53e5\u4e2d\u7b2c\u4e00\u4e2a\u5360\u4f4d\u7b26\u6362\u6210\u5b57\u7b26\u4e32\n                try (InputStream in = new FileInputStream(\"test.jpg\")) {    // Java 7\u7684TWR\n                    ps.setBinaryStream(2, in);      // \u5c06SQL\u8bed\u53e5\u4e2d\u7b2c\u4e8c\u4e2a\u5360\u4f4d\u7b26\u6362\u6210\u4e8c\u8fdb\u5236\u6d41\n                    // 4. \u53d1\u51faSQL\u8bed\u53e5\u83b7\u5f97\u53d7\u5f71\u54cd\u884c\u6570\n                    System.out.println(ps.executeUpdate() == 1 ? \"\u63d2\u5165\u6210\u529f\" : \"\u63d2\u5165\u5931\u8d25\");\n                } catch(IOException e) {\n                    System.out.println(\"\u8bfb\u53d6\u7167\u7247\u5931\u8d25!\");\n                }\n            } catch (ClassNotFoundException | SQLException e) {     // Java 7\u7684\u591a\u5f02\u5e38\u6355\u83b7\n                e.printStackTrace();\n            } finally { // \u91ca\u653e\u5916\u90e8\u8d44\u6e90\u7684\u4ee3\u7801\u90fd\u5e94\u5f53\u653e\u5728finally\u4e2d\u4fdd\u8bc1\u5176\u80fd\u591f\u5f97\u5230\u6267\u884c\n                try {\n                    if(con != null &amp;&amp; !con.isClosed()) {\n                        con.close();    // 5. \u91ca\u653e\u6570\u636e\u5e93\u8fde\u63a5 \n                        con = null;     // \u6307\u793a\u5783\u573e\u56de\u6536\u5668\u53ef\u4ee5\u56de\u6536\u8be5\u5bf9\u8c61\n                    }\n                } catch (SQLException e) {\n                    e.printStackTrace();\n                }\n            }\n        }\n    }\n83\u3001\u7b80\u8ff0\u6b63\u5219\u8868\u8fbe\u5f0f\u53ca\u5176\u7528\u9014\u3002\n\u7b54\uff1a\u5728\u7f16\u5199\u5904\u7406\u5b57\u7b26\u4e32\u7684\u7a0b\u5e8f\u65f6\uff0c\u7ecf\u5e38\u4f1a\u6709\u67e5\u627e\u7b26\u5408\u67d0\u4e9b\u590d\u6742\u89c4\u5219\u7684\u5b57\u7b26\u4e32\u7684\u9700\u8981\u3002\u6b63\u5219\u8868\u8fbe\u5f0f\u5c31\u662f\u7528\u4e8e\u63cf\u8ff0\u8fd9\u4e9b\u89c4\u5219\u7684\u5de5\u5177\u3002\n\u6362\u53e5\u8bdd\u8bf4\uff0c\u6b63\u5219\u8868\u8fbe\u5f0f\u5c31\u662f\u8bb0\u5f55\u6587\u672c\u89c4\u5219\u7684\u4ee3\u7801\u3002\n\u8bf4\u660e\uff1a\u8ba1\u7b97\u673a\u8bde\u751f\u521d\u671f\u5904\u7406\u7684\u4fe1\u606f\u51e0\u4e4e\u90fd\u662f\u6570\u503c\uff0c\u4f46\u662f\u65f6\u8fc7\u5883\u8fc1\uff0c\u4eca\u5929\u6211\u4eec\u4f7f\u7528\u8ba1\u7b97\u673a\u5904\u7406\u7684\u4fe1\u606f\u66f4\u591a\u7684\u65f6\u5019\u4e0d\u662f\u6570\u503c\u800c\u662f\u5b57\u7b26\u4e32\uff0c\u6b63\u5219\u8868\u8fbe\u5f0f\u5c31\u662f\u5728\u8fdb\u884c\u5b57\u7b26\u4e32\u5339\u914d\u548c\u5904\u7406\u7684\u65f6\u5019\u6700\u4e3a\u5f3a\u5927\u7684\u5de5\u5177\uff0c\u7edd\u5927\u591a\u6570\u8bed\u8a00\u90fd\u63d0\u4f9b\u4e86\u5bf9\u6b63\u5219\u8868\u8fbe\u5f0f\u7684\u652f\u6301\u3002\n84\u3001Java\u4e2d\u662f\u5982\u4f55\u652f\u6301\u6b63\u5219\u8868\u8fbe\u5f0f\u64cd\u4f5c\u7684\uff1f\n\u7b54\uff1aJava\u4e2d\u7684String\u7c7b\u63d0\u4f9b\u4e86\u652f\u6301\u6b63\u5219\u8868\u8fbe\u5f0f\u64cd\u4f5c\u7684\u65b9\u6cd5\uff0c\u5305\u62ec\uff1amatches()\u3001replaceAll()\u3001replaceFirst()\u3001split()\u3002\n\u6b64\u5916\uff0cJava\u4e2d\u53ef\u4ee5\u7528Pattern\u7c7b\u8868\u793a\u6b63\u5219\u8868\u8fbe\u5f0f\u5bf9\u8c61\uff0c\u5b83\u63d0\u4f9b\u4e86\u4e30\u5bcc\u7684API\u8fdb\u884c\u5404\u79cd\u6b63\u5219\u8868\u8fbe\u5f0f\u64cd\u4f5c\uff0c\u8bf7\u53c2\u8003\u4e0b\u9762\u9762\u8bd5\u9898\u7684\u4ee3\u7801\u3002\n\u9762\u8bd5\u9898\uff1a - \u5982\u679c\u8981\u4ece\u5b57\u7b26\u4e32\u4e2d\u622a\u53d6\u7b2c\u4e00\u4e2a\u82f1\u6587\u5de6\u62ec\u53f7\u4e4b\u524d\u7684\u5b57\u7b26\u4e32\uff0c\u4f8b\u5982\uff1a\u5317\u4eac\u5e02(\u671d\u9633\u533a)(\u897f\u57ce\u533a)(\u6d77\u6dc0\u533a)\uff0c\u622a\u53d6\u7ed3\u679c\u4e3a\uff1a\u5317\u4eac\u5e02\uff0c\u90a3\u4e48\u6b63\u5219\u8868\u8fbe\u5f0f\u600e\u4e48\u5199\uff1f\n\n    import java.util.regex.Matcher;\n    import java.util.regex.Pattern;\n\n    class RegExpTest {\n\n        public static void main(String[] args) {\n            String str = \"\u5317\u4eac\u5e02(\u671d\u9633\u533a)(\u897f\u57ce\u533a)(\u6d77\u6dc0\u533a)\";\n            Pattern p = Pattern.compile(\".*?(?=\\\\()\");\n            Matcher m = p.matcher(str);\n            if(m.find()) {\n                System.out.println(m.group());\n            }\n        }\n    }\n\u8bf4\u660e\uff1a\u4e0a\u9762\u7684\u6b63\u5219\u8868\u8fbe\u5f0f\u4e2d\u4f7f\u7528\u4e86\u61d2\u60f0\u5339\u914d\u548c\u524d\u77bb\uff0c\u5982\u679c\u4e0d\u6e05\u695a\u8fd9\u4e9b\u5185\u5bb9\uff0c\u63a8\u8350\u8bfb\u4e00\u4e0b\u7f51\u4e0a\u5f88\u6709\u540d\u7684\u300a\u6b63\u5219\u8868\u8fbe\u5f0f30\u5206\u949f\u5165\u95e8\u6559\u7a0b\u300b\u3002\n85\u3001\u83b7\u5f97\u4e00\u4e2a\u7c7b\u7684\u7c7b\u5bf9\u8c61\u6709\u54ea\u4e9b\u65b9\u5f0f\uff1f\n\u7b54\uff1a\n\n\u65b9\u6cd51\uff1a\u7c7b\u578b.class\uff0c\u4f8b\u5982\uff1aString.class\n\n\u65b9\u6cd52\uff1a\u5bf9\u8c61.getClass()\uff0c\u4f8b\u5982\uff1a\"hello\".getClass()\n\n\u65b9\u6cd53\uff1aClass.forName()\uff0c\u4f8b\u5982\uff1aClass.forName(\"java.lang.String\")\n\n\n86\u3001\u5982\u4f55\u901a\u8fc7\u53cd\u5c04\u521b\u5efa\u5bf9\u8c61\uff1f\n\u7b54\uff1a\n\n\u65b9\u6cd51\uff1a\u901a\u8fc7\u7c7b\u5bf9\u8c61\u8c03\u7528newInstance()\u65b9\u6cd5\uff0c\u4f8b\u5982\uff1aString.class.newInstance()\n\u65b9\u6cd52\uff1a\u901a\u8fc7\u7c7b\u5bf9\u8c61\u7684getConstructor()\u6216getDeclaredConstructor()\u65b9\u6cd5\u83b7\u5f97\u6784\u9020\u5668\uff08Constructor\uff09\u5bf9\u8c61\u5e76\u8c03\u7528\u5176newInstance()\u65b9\u6cd5\u521b\u5efa\u5bf9\u8c61\uff0c\u4f8b\u5982\uff1aString.class.getConstructor(String.class).newInstance(\"Hello\");\n\n\n87\u3001\u5982\u4f55\u901a\u8fc7\u53cd\u5c04\u83b7\u53d6\u548c\u8bbe\u7f6e\u5bf9\u8c61\u79c1\u6709\u5b57\u6bb5\u7684\u503c\uff1f\n\u7b54\uff1a\u53ef\u4ee5\u901a\u8fc7\u7c7b\u5bf9\u8c61\u7684getDeclaredField()\u65b9\u6cd5\u5b57\u6bb5\uff08Field\uff09\u5bf9\u8c61\uff0c\u7136\u540e\u518d\u901a\u8fc7\u5b57\u6bb5\u5bf9\u8c61\u7684setAccessible(true)\u5c06\u5176\u8bbe\u7f6e\u4e3a\u53ef\u4ee5\u8bbf\u95ee\uff0c\u63a5\u4e0b\u6765\u5c31\u53ef\u4ee5\u901a\u8fc7get/set\u65b9\u6cd5\u6765\u83b7\u53d6/\u8bbe\u7f6e\u5b57\u6bb5\u7684\u503c\u4e86\u3002\n\u4e0b\u9762\u7684\u4ee3\u7801\u5b9e\u73b0\u4e86\u4e00\u4e2a\u53cd\u5c04\u7684\u5de5\u5177\u7c7b\uff0c\u5176\u4e2d\u7684\u4e24\u4e2a\u9759\u6001\u65b9\u6cd5\u5206\u522b\u7528\u4e8e\u83b7\u53d6\u548c\u8bbe\u7f6e\u79c1\u6709\u5b57\u6bb5\u7684\u503c\uff0c\u5b57\u6bb5\u53ef\u4ee5\u662f\u57fa\u672c\u7c7b\u578b\u4e5f\u53ef\u4ee5\u662f\u5bf9\u8c61\u7c7b\u578b\u4e14\u652f\u6301\u591a\u7ea7\u5bf9\u8c61\u64cd\u4f5c\uff0c\u4f8b\u5982ReflectionUtil.get(dog, \"owner.car.engine.id\");\u53ef\u4ee5\u83b7\u5f97dog\u5bf9\u8c61\u7684\u4e3b\u4eba\u7684\u6c7d\u8f66\u7684\u5f15\u64ce\u7684ID\u53f7\u3002\n\n    import java.lang.reflect.Constructor;\n    import java.lang.reflect.Field;\n    import java.lang.reflect.Modifier;\n    import java.util.ArrayList;\n    import java.util.List;\n\n    /**\n     * \u53cd\u5c04\u5de5\u5177\u7c7b\n     * @author \u9a86\u660a\n     *\n     */\n    public class ReflectionUtil {\n\n        private ReflectionUtil() {\n            throw new AssertionError();\n        }\n\n        /**\n         * \u901a\u8fc7\u53cd\u5c04\u53d6\u5bf9\u8c61\u6307\u5b9a\u5b57\u6bb5(\u5c5e\u6027)\u7684\u503c\n         * @param target \u76ee\u6807\u5bf9\u8c61\n         * @param fieldName \u5b57\u6bb5\u7684\u540d\u5b57\n         * @throws \u5982\u679c\u53d6\u4e0d\u5230\u5bf9\u8c61\u6307\u5b9a\u5b57\u6bb5\u7684\u503c\u5219\u629b\u51fa\u5f02\u5e38\n         * @return \u5b57\u6bb5\u7684\u503c\n         */\n        public static Object getValue(Object target, String fieldName) {\n            Class&lt;?&gt; clazz = target.getClass();\n            String[] fs = fieldName.split(\"\\\\.\");\n\n            try {\n                for(int i = 0; i &lt; fs.length - 1; i++) {\n                    Field f = clazz.getDeclaredField(fs[i]);\n                    f.setAccessible(true);\n                    target = f.get(target);\n                    clazz = target.getClass();\n                }\n\n                Field f = clazz.getDeclaredField(fs[fs.length - 1]);\n                f.setAccessible(true);\n                return f.get(target);\n            }\n            catch (Exception e) {\n                throw new RuntimeException(e);\n            }\n        }\n\n        /**\n         * \u901a\u8fc7\u53cd\u5c04\u7ed9\u5bf9\u8c61\u7684\u6307\u5b9a\u5b57\u6bb5\u8d4b\u503c\n         * @param target \u76ee\u6807\u5bf9\u8c61\n         * @param fieldName \u5b57\u6bb5\u7684\u540d\u79f0\n         * @param value \u503c\n         */\n        public static void setValue(Object target, String fieldName, Object value) {\n            Class&lt;?&gt; clazz = target.getClass();\n            String[] fs = fieldName.split(\"\\\\.\");\n            try {\n                for(int i = 0; i &lt; fs.length - 1; i++) {\n                    Field f = clazz.getDeclaredField(fs[i]);\n                    f.setAccessible(true);\n                    Object val = f.get(target);\n                    if(val == null) {\n                        Constructor&lt;?&gt; c = f.getType().getDeclaredConstructor();\n                        c.setAccessible(true);\n                        val = c.newInstance();\n                        f.set(target, val);\n                    }\n                    target = val;\n                    clazz = target.getClass();\n                }\n\n                Field f = clazz.getDeclaredField(fs[fs.length - 1]);\n                f.setAccessible(true);\n                f.set(target, value);\n            }\n            catch (Exception e) {\n                throw new RuntimeException(e);\n            }\n        }\n\n    }\n88\u3001\u5982\u4f55\u901a\u8fc7\u53cd\u5c04\u8c03\u7528\u5bf9\u8c61\u7684\u65b9\u6cd5\uff1f\n\u7b54\uff1a\u8bf7\u770b\u4e0b\u9762\u7684\u4ee3\u7801\uff1a\n\n    import java.lang.reflect.Method;\n\n    class MethodInvokeTest {\n\n        public static void main(String[] args) throws Exception {\n            String str = \"hello\";\n            Method m = str.getClass().getMethod(\"toUpperCase\");\n            System.out.println(m.invoke(str));  // HELLO\n        }\n    }\n89\u3001\u7b80\u8ff0\u4e00\u4e0b\u9762\u5411\u5bf9\u8c61\u7684\"\u516d\u539f\u5219\u4e00\u6cd5\u5219\"\u3002\n\u7b54\uff1a\n\n(1)\u5355\u4e00\u804c\u8d23\u539f\u5219\uff1a\u4e00\u4e2a\u7c7b\u53ea\u505a\u5b83\u8be5\u505a\u7684\u4e8b\u60c5\u3002\uff08\u5355\u4e00\u804c\u8d23\u539f\u5219\u60f3\u8868\u8fbe\u7684\u5c31\u662f\"\u9ad8\u5185\u805a\"\uff0c\u5199\u4ee3\u7801\u6700\u7ec8\u6781\u7684\u539f\u5219\u53ea\u6709\u516d\u4e2a\u5b57\"\u9ad8\u5185\u805a\u3001\u4f4e\u8026\u5408\"\uff0c\u5c31\u5982\u540c\u8475\u82b1\u5b9d\u5178\u6216\u8f9f\u90aa\u5251\u8c31\u7684\u4e2d\u5fc3\u601d\u60f3\u5c31\u516b\u4e2a\u5b57\"\u6b32\u7ec3\u6b64\u529f\u5fc5\u5148\u81ea\u5bab\"\uff0c\u6240\u8c13\u7684\u9ad8\u5185\u805a\u5c31\u662f\u4e00\u4e2a\u4ee3\u7801\u6a21\u5757\u53ea\u5b8c\u6210\u4e00\u9879\u529f\u80fd\uff0c\u5728\u9762\u5411\u5bf9\u8c61\u4e2d\uff0c\u5982\u679c\u53ea\u8ba9\u4e00\u4e2a\u7c7b\u5b8c\u6210\u5b83\u8be5\u505a\u7684\u4e8b\uff0c\u800c\u4e0d\u6d89\u53ca\u4e0e\u5b83\u65e0\u5173\u7684\u9886\u57df\u5c31\u662f\u8df5\u884c\u4e86\u9ad8\u5185\u805a\u7684\u539f\u5219\uff0c\u8fd9\u4e2a\u7c7b\u5c31\u53ea\u6709\u5355\u4e00\u804c\u8d23\u3002\u6211\u4eec\u90fd\u77e5\u9053\u4e00\u53e5\u8bdd\u53eb\"\u56e0\u4e3a\u4e13\u6ce8\uff0c\u6240\u4ee5\u4e13\u4e1a\"\uff0c\u4e00\u4e2a\u5bf9\u8c61\u5982\u679c\u627f\u62c5\u592a\u591a\u7684\u804c\u8d23\uff0c\u90a3\u4e48\u6ce8\u5b9a\u5b83\u4ec0\u4e48\u90fd\u505a\u4e0d\u597d\u3002\u8fd9\u4e2a\u4e16\u754c\u4e0a\u4efb\u4f55\u597d\u7684\u4e1c\u897f\u90fd\u6709\u4e24\u4e2a\u7279\u5f81\uff0c\u4e00\u4e2a\u662f\u529f\u80fd\u5355\u4e00\uff0c\u597d\u7684\u76f8\u673a\u7edd\u5bf9\u4e0d\u662f\u7535\u89c6\u8d2d\u7269\u91cc\u9762\u5356\u7684\u90a3\u79cd\u4e00\u4e2a\u673a\u5668\u6709\u4e00\u767e\u591a\u79cd\u529f\u80fd\u7684\uff0c\u5b83\u57fa\u672c\u4e0a\u53ea\u80fd\u7167\u76f8\uff1b\u53e6\u4e00\u4e2a\u662f\u6a21\u5757\u5316\uff0c\u597d\u7684\u81ea\u884c\u8f66\u662f\u7ec4\u88c5\u8f66\uff0c\u4ece\u51cf\u9707\u53c9\u3001\u5239\u8f66\u5230\u53d8\u901f\u5668\uff0c\u6240\u6709\u7684\u90e8\u4ef6\u90fd\u662f\u53ef\u4ee5\u62c6\u5378\u548c\u91cd\u65b0\u7ec4\u88c5\u7684\uff0c\u597d\u7684\u4e52\u4e53\u7403\u62cd\u4e5f\u4e0d\u662f\u6210\u54c1\u62cd\uff0c\u4e00\u5b9a\u662f\u5e95\u677f\u548c\u80f6\u76ae\u53ef\u4ee5\u62c6\u5206\u548c\u81ea\u884c\u7ec4\u88c5\u7684\uff0c\u4e00\u4e2a\u597d\u7684\u8f6f\u4ef6\u7cfb\u7edf\uff0c\u5b83\u91cc\u9762\u7684\u6bcf\u4e2a\u529f\u80fd\u6a21\u5757\u4e5f\u5e94\u8be5\u662f\u53ef\u4ee5\u8f7b\u6613\u7684\u62ff\u5230\u5176\u4ed6\u7cfb\u7edf\u4e2d\u4f7f\u7528\u7684\uff0c\u8fd9\u6837\u624d\u80fd\u5b9e\u73b0\u8f6f\u4ef6\u590d\u7528\u7684\u76ee\u6807\u3002\uff09\n\n(2)\u5f00\u95ed\u539f\u5219\uff1a\u8f6f\u4ef6\u5b9e\u4f53\u5e94\u5f53\u5bf9\u6269\u5c55\u5f00\u653e\uff0c\u5bf9\u4fee\u6539\u5173\u95ed\u3002\uff08\u5728\u7406\u60f3\u7684\u72b6\u6001\u4e0b\uff0c\u5f53\u6211\u4eec\u9700\u8981\u4e3a\u4e00\u4e2a\u8f6f\u4ef6\u7cfb\u7edf\u589e\u52a0\u65b0\u529f\u80fd\u65f6\uff0c\u53ea\u9700\u8981\u4ece\u539f\u6765\u7684\u7cfb\u7edf\u6d3e\u751f\u51fa\u4e00\u4e9b\u65b0\u7c7b\u5c31\u53ef\u4ee5\uff0c\u4e0d\u9700\u8981\u4fee\u6539\u539f\u6765\u7684\u4efb\u4f55\u4e00\u884c\u4ee3\u7801\u3002\u8981\u505a\u5230\u5f00\u95ed\u6709\u4e24\u4e2a\u8981\u70b9\uff1a\u2460\u62bd\u8c61\u662f\u5173\u952e\uff0c\u4e00\u4e2a\u7cfb\u7edf\u4e2d\u5982\u679c\u6ca1\u6709\u62bd\u8c61\u7c7b\u6216\u63a5\u53e3\u7cfb\u7edf\u5c31\u6ca1\u6709\u6269\u5c55\u70b9\uff1b\u2461\u5c01\u88c5\u53ef\u53d8\u6027\uff0c\u5c06\u7cfb\u7edf\u4e2d\u7684\u5404\u79cd\u53ef\u53d8\u56e0\u7d20\u5c01\u88c5\u5230\u4e00\u4e2a\u7ee7\u627f\u7ed3\u6784\u4e2d\uff0c\u5982\u679c\u591a\u4e2a\u53ef\u53d8\u56e0\u7d20\u6df7\u6742\u5728\u4e00\u8d77\uff0c\u7cfb\u7edf\u5c06\u53d8\u5f97\u590d\u6742\u800c\u6362\u4e71\uff0c\u5982\u679c\u4e0d\u6e05\u695a\u5982\u4f55\u5c01\u88c5\u53ef\u53d8\u6027\uff0c\u53ef\u4ee5\u53c2\u8003\u300a\u8bbe\u8ba1\u6a21\u5f0f\u7cbe\u89e3\u300b\u4e00\u4e66\u4e2d\u5bf9\u6865\u6881\u6a21\u5f0f\u7684\u8bb2\u89e3\u7684\u7ae0\u8282\u3002\uff09\n\n(3)\u4f9d\u8d56\u5012\u8f6c\u539f\u5219\uff1a\u9762\u5411\u63a5\u53e3\u7f16\u7a0b\u3002\uff08\u8be5\u539f\u5219\u8bf4\u5f97\u76f4\u767d\u548c\u5177\u4f53\u4e00\u4e9b\u5c31\u662f\u58f0\u660e\u65b9\u6cd5\u7684\u53c2\u6570\u7c7b\u578b\u3001\u65b9\u6cd5\u7684\u8fd4\u56de\u7c7b\u578b\u3001\u53d8\u91cf\u7684\u5f15\u7528\u7c7b\u578b\u65f6\uff0c\u5c3d\u53ef\u80fd\u4f7f\u7528\u62bd\u8c61\u7c7b\u578b\u800c\u4e0d\u7528\u5177\u4f53\u7c7b\u578b\uff0c\u56e0\u4e3a\u62bd\u8c61\u7c7b\u578b\u53ef\u4ee5\u88ab\u5b83\u7684\u4efb\u4f55\u4e00\u4e2a\u5b50\u7c7b\u578b\u6240\u66ff\u4ee3\uff0c\u8bf7\u53c2\u8003\u4e0b\u9762\u7684\u91cc\u6c0f\u66ff\u6362\u539f\u5219\u3002\uff09\n\n(4)\u91cc\u6c0f\u66ff\u6362\u539f\u5219\uff1a\u4efb\u4f55\u65f6\u5019\u90fd\u53ef\u4ee5\u7528\u5b50\u7c7b\u578b\u66ff\u6362\u6389\u7236\u7c7b\u578b\u3002\uff08\u5173\u4e8e\u91cc\u6c0f\u66ff\u6362\u539f\u5219\u7684\u63cf\u8ff0\uff0cBarbara Liskov\u5973\u58eb\u7684\u63cf\u8ff0\u6bd4\u8fd9\u4e2a\u8981\u590d\u6742\u5f97\u591a\uff0c\u4f46\u7b80\u5355\u7684\u8bf4\u5c31\u662f\u80fd\u7528\u7236\u7c7b\u578b\u7684\u5730\u65b9\u5c31\u4e00\u5b9a\u80fd\u4f7f\u7528\u5b50\u7c7b\u578b\u3002\u91cc\u6c0f\u66ff\u6362\u539f\u5219\u53ef\u4ee5\u68c0\u67e5\u7ee7\u627f\u5173\u7cfb\u662f\u5426\u5408\u7406\uff0c\u5982\u679c\u4e00\u4e2a\u7ee7\u627f\u5173\u7cfb\u8fdd\u80cc\u4e86\u91cc\u6c0f\u66ff\u6362\u539f\u5219\uff0c\u90a3\u4e48\u8fd9\u4e2a\u7ee7\u627f\u5173\u7cfb\u4e00\u5b9a\u662f\u9519\u8bef\u7684\uff0c\u9700\u8981\u5bf9\u4ee3\u7801\u8fdb\u884c\u91cd\u6784\u3002\u4f8b\u5982\u8ba9\u732b\u7ee7\u627f\u72d7\uff0c\u6216\u8005\u72d7\u7ee7\u627f\u732b\uff0c\u53c8\u6216\u8005\u8ba9\u6b63\u65b9\u5f62\u7ee7\u627f\u957f\u65b9\u5f62\u90fd\u662f\u9519\u8bef\u7684\u7ee7\u627f\u5173\u7cfb\uff0c\u56e0\u4e3a\u4f60\u5f88\u5bb9\u6613\u627e\u5230\u8fdd\u53cd\u91cc\u6c0f\u66ff\u6362\u539f\u5219\u7684\u573a\u666f\u3002\u9700\u8981\u6ce8\u610f\u7684\u662f\uff1a\u5b50\u7c7b\u4e00\u5b9a\u662f\u589e\u52a0\u7236\u7c7b\u7684\u80fd\u529b\u800c\u4e0d\u662f\u51cf\u5c11\u7236\u7c7b\u7684\u80fd\u529b\uff0c\u56e0\u4e3a\u5b50\u7c7b\u6bd4\u7236\u7c7b\u7684\u80fd\u529b\u66f4\u591a\uff0c\u628a\u80fd\u529b\u591a\u7684\u5bf9\u8c61\u5f53\u6210\u80fd\u529b\u5c11\u7684\u5bf9\u8c61\u6765\u7528\u5f53\u7136\u6ca1\u6709\u4efb\u4f55\u95ee\u9898\u3002\uff09\n\n(5)\u63a5\u53e3\u9694\u79bb\u539f\u5219\uff1a\u63a5\u53e3\u8981\u5c0f\u800c\u4e13\uff0c\u7edd\u4e0d\u80fd\u5927\u800c\u5168\u3002\uff08\u81c3\u80bf\u7684\u63a5\u53e3\u662f\u5bf9\u63a5\u53e3\u7684\u6c61\u67d3\uff0c\u65e2\u7136\u63a5\u53e3\u8868\u793a\u80fd\u529b\uff0c\u90a3\u4e48\u4e00\u4e2a\u63a5\u53e3\u53ea\u5e94\u8be5\u63cf\u8ff0\u4e00\u79cd\u80fd\u529b\uff0c\u63a5\u53e3\u4e5f\u5e94\u8be5\u662f\u9ad8\u5ea6\u5185\u805a\u7684\u3002\u4f8b\u5982\uff0c\u7434\u68cb\u4e66\u753b\u5c31\u5e94\u8be5\u5206\u522b\u8bbe\u8ba1\u4e3a\u56db\u4e2a\u63a5\u53e3\uff0c\u800c\u4e0d\u5e94\u8bbe\u8ba1\u6210\u4e00\u4e2a\u63a5\u53e3\u4e2d\u7684\u56db\u4e2a\u65b9\u6cd5\uff0c\u56e0\u4e3a\u5982\u679c\u8bbe\u8ba1\u6210\u4e00\u4e2a\u63a5\u53e3\u4e2d\u7684\u56db\u4e2a\u65b9\u6cd5\uff0c\u90a3\u4e48\u8fd9\u4e2a\u63a5\u53e3\u5f88\u96be\u7528\uff0c\u6bd5\u7adf\u7434\u68cb\u4e66\u753b\u56db\u6837\u90fd\u7cbe\u901a\u7684\u4eba\u8fd8\u662f\u5c11\u6570\uff0c\u800c\u5982\u679c\u8bbe\u8ba1\u6210\u56db\u4e2a\u63a5\u53e3\uff0c\u4f1a\u51e0\u9879\u5c31\u5b9e\u73b0\u51e0\u4e2a\u63a5\u53e3\uff0c\u8fd9\u6837\u7684\u8bdd\u6bcf\u4e2a\u63a5\u53e3\u88ab\u590d\u7528\u7684\u53ef\u80fd\u6027\u662f\u5f88\u9ad8\u7684\u3002Java\u4e2d\u7684\u63a5\u53e3\u4ee3\u8868\u80fd\u529b\u3001\u4ee3\u8868\u7ea6\u5b9a\u3001\u4ee3\u8868\u89d2\u8272\uff0c\u80fd\u5426\u6b63\u786e\u7684\u4f7f\u7528\u63a5\u53e3\u4e00\u5b9a\u662f\u7f16\u7a0b\u6c34\u5e73\u9ad8\u4f4e\u7684\u91cd\u8981\u6807\u8bc6\u3002\uff09\n\n(6)\u5408\u6210\u805a\u5408\u590d\u7528\u539f\u5219\uff1a\u4f18\u5148\u4f7f\u7528\u805a\u5408\u6216\u5408\u6210\u5173\u7cfb\u590d\u7528\u4ee3\u7801\u3002\uff08\u901a\u8fc7\u7ee7\u627f\u6765\u590d\u7528\u4ee3\u7801\u662f\u9762\u5411\u5bf9\u8c61\u7a0b\u5e8f\u8bbe\u8ba1\u4e2d\u88ab\u6ee5\u7528\u5f97\u6700\u591a\u7684\u4e1c\u897f\uff0c\u56e0\u4e3a\u6240\u6709\u7684\u6559\u79d1\u4e66\u90fd\u65e0\u4e00\u4f8b\u5916\u7684\u5bf9\u7ee7\u627f\u8fdb\u884c\u4e86\u9f13\u5439\u4ece\u800c\u8bef\u5bfc\u4e86\u521d\u5b66\u8005\uff0c\u7c7b\u4e0e\u7c7b\u4e4b\u95f4\u7b80\u5355\u7684\u8bf4\u6709\u4e09\u79cd\u5173\u7cfb\uff0cIs-A\u5173\u7cfb\u3001Has-A\u5173\u7cfb\u3001Use-A\u5173\u7cfb\uff0c\u5206\u522b\u4ee3\u8868\u7ee7\u627f\u3001\u5173\u8054\u548c\u4f9d\u8d56\u3002\u5176\u4e2d\uff0c\u5173\u8054\u5173\u7cfb\u6839\u636e\u5176\u5173\u8054\u7684\u5f3a\u5ea6\u53c8\u53ef\u4ee5\u8fdb\u4e00\u6b65\u5212\u5206\u4e3a\u5173\u8054\u3001\u805a\u5408\u548c\u5408\u6210\uff0c\u4f46\u8bf4\u767d\u4e86\u90fd\u662fHas-A\u5173\u7cfb\uff0c\u5408\u6210\u805a\u5408\u590d\u7528\u539f\u5219\u60f3\u8868\u8fbe\u7684\u662f\u4f18\u5148\u8003\u8651Has-A\u5173\u7cfb\u800c\u4e0d\u662fIs-A\u5173\u7cfb\u590d\u7528\u4ee3\u7801\uff0c\u539f\u56e0\u561b\u53ef\u4ee5\u81ea\u5df1\u4ece\u767e\u5ea6\u4e0a\u627e\u5230\u4e00\u4e07\u4e2a\u7406\u7531\uff0c\u9700\u8981\u8bf4\u660e\u7684\u662f\uff0c\u5373\u4f7f\u5728Java\u7684API\u4e2d\u4e5f\u6709\u4e0d\u5c11\u6ee5\u7528\u7ee7\u627f\u7684\u4f8b\u5b50\uff0c\u4f8b\u5982Properties\u7c7b\u7ee7\u627f\u4e86Hashtable\u7c7b\uff0cStack\u7c7b\u7ee7\u627f\u4e86Vector\u7c7b\uff0c\u8fd9\u4e9b\u7ee7\u627f\u660e\u663e\u5c31\u662f\u9519\u8bef\u7684\uff0c\u66f4\u597d\u7684\u505a\u6cd5\u662f\u5728Properties\u7c7b\u4e2d\u653e\u7f6e\u4e00\u4e2aHashtable\u7c7b\u578b\u7684\u6210\u5458\u5e76\u4e14\u5c06\u5176\u952e\u548c\u503c\u90fd\u8bbe\u7f6e\u4e3a\u5b57\u7b26\u4e32\u6765\u5b58\u50a8\u6570\u636e\uff0c\u800cStack\u7c7b\u7684\u8bbe\u8ba1\u4e5f\u5e94\u8be5\u662f\u5728Stack\u7c7b\u4e2d\u653e\u4e00\u4e2aVector\u5bf9\u8c61\u6765\u5b58\u50a8\u6570\u636e\u3002\u8bb0\u4f4f\uff1a\u4efb\u4f55\u65f6\u5019\u90fd\u4e0d\u8981\u7ee7\u627f\u5de5\u5177\u7c7b\uff0c\u5de5\u5177\u662f\u53ef\u4ee5\u62e5\u6709\u5e76\u53ef\u4ee5\u4f7f\u7528\u7684\uff0c\u800c\u4e0d\u662f\u62ff\u6765\u7ee7\u627f\u7684\u3002\uff09\n\n(7)\u8fea\u7c73\u7279\u6cd5\u5219\uff1a\u8fea\u7c73\u7279\u6cd5\u5219\u53c8\u53eb\u6700\u5c11\u77e5\u8bc6\u539f\u5219\uff0c\u4e00\u4e2a\u5bf9\u8c61\u5e94\u5f53\u5bf9\u5176\u4ed6\u5bf9\u8c61\u6709\u5c3d\u53ef\u80fd\u5c11\u7684\u4e86\u89e3\u3002\uff08\u8fea\u7c73\u7279\u6cd5\u5219\u7b80\u5355\u7684\u8bf4\u5c31\u662f\u5982\u4f55\u505a\u5230\"\u4f4e\u8026\u5408\"\uff0c\u95e8\u9762\u6a21\u5f0f\u548c\u8c03\u505c\u8005\u6a21\u5f0f\u5c31\u662f\u5bf9\u8fea\u7c73\u7279\u6cd5\u5219\u7684\u8df5\u884c\u3002\u5bf9\u4e8e\u95e8\u9762\u6a21\u5f0f\u53ef\u4ee5\u4e3e\u4e00\u4e2a\u7b80\u5355\u7684\u4f8b\u5b50\uff0c\u4f60\u53bb\u4e00\u5bb6\u516c\u53f8\u6d3d\u8c08\u4e1a\u52a1\uff0c\u4f60\u4e0d\u9700\u8981\u4e86\u89e3\u8fd9\u4e2a\u516c\u53f8\u5185\u90e8\u662f\u5982\u4f55\u8fd0\u4f5c\u7684\uff0c\u4f60\u751a\u81f3\u53ef\u4ee5\u5bf9\u8fd9\u4e2a\u516c\u53f8\u4e00\u65e0\u6240\u77e5\uff0c\u53bb\u7684\u65f6\u5019\u53ea\u9700\u8981\u627e\u5230\u516c\u53f8\u5165\u53e3\u5904\u7684\u524d\u53f0\u7f8e\u5973\uff0c\u544a\u8bc9\u5979\u4eec\u4f60\u8981\u505a\u4ec0\u4e48\uff0c\u5979\u4eec\u4f1a\u627e\u5230\u5408\u9002\u7684\u4eba\u8ddf\u4f60\u63a5\u6d3d\uff0c\u524d\u53f0\u7684\u7f8e\u5973\u5c31\u662f\u516c\u53f8\u8fd9\u4e2a\u7cfb\u7edf\u7684\u95e8\u9762\u3002\u518d\u590d\u6742\u7684\u7cfb\u7edf\u90fd\u53ef\u4ee5\u4e3a\u7528\u6237\u63d0\u4f9b\u4e00\u4e2a\u7b80\u5355\u7684\u95e8\u9762\uff0cJava Web\u5f00\u53d1\u4e2d\u4f5c\u4e3a\u524d\u7aef\u63a7\u5236\u5668\u7684Servlet\u6216Filter\u4e0d\u5c31\u662f\u4e00\u4e2a\u95e8\u9762\u5417\uff0c\u6d4f\u89c8\u5668\u5bf9\u670d\u52a1\u5668\u7684\u8fd0\u4f5c\u65b9\u5f0f\u4e00\u65e0\u6240\u77e5\uff0c\u4f46\u662f\u901a\u8fc7\u524d\u7aef\u63a7\u5236\u5668\u5c31\u80fd\u591f\u6839\u636e\u4f60\u7684\u8bf7\u6c42\u5f97\u5230\u76f8\u5e94\u7684\u670d\u52a1\u3002\u8c03\u505c\u8005\u6a21\u5f0f\u4e5f\u53ef\u4ee5\u4e3e\u4e00\u4e2a\u7b80\u5355\u7684\u4f8b\u5b50\u6765\u8bf4\u660e\uff0c\u4f8b\u5982\u4e00\u53f0\u8ba1\u7b97\u673a\uff0cCPU\u3001\u5185\u5b58\u3001\u786c\u76d8\u3001\u663e\u5361\u3001\u58f0\u5361\u5404\u79cd\u8bbe\u5907\u9700\u8981\u76f8\u4e92\u914d\u5408\u624d\u80fd\u5f88\u597d\u7684\u5de5\u4f5c\uff0c\u4f46\u662f\u5982\u679c\u8fd9\u4e9b\u4e1c\u897f\u90fd\u76f4\u63a5\u8fde\u63a5\u5230\u4e00\u8d77\uff0c\u8ba1\u7b97\u673a\u7684\u5e03\u7ebf\u5c06\u5f02\u5e38\u590d\u6742\uff0c\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u4e3b\u677f\u4f5c\u4e3a\u4e00\u4e2a\u8c03\u505c\u8005\u7684\u8eab\u4efd\u51fa\u73b0\uff0c\u5b83\u5c06\u5404\u4e2a\u8bbe\u5907\u8fde\u63a5\u5728\u4e00\u8d77\u800c\u4e0d\u9700\u8981\u6bcf\u4e2a\u8bbe\u5907\u4e4b\u95f4\u76f4\u63a5\u4ea4\u6362\u6570\u636e\uff0c\u8fd9\u6837\u5c31\u51cf\u5c0f\u4e86\u7cfb\u7edf\u7684\u8026\u5408\u5ea6\u548c\u590d\u6742\u5ea6\uff0c\u5982\u4e0b\u56fe\u6240\u793a\u3002\u8fea\u7c73\u7279\u6cd5\u5219\u7528\u901a\u4fd7\u7684\u8bdd\u6765\u5c06\u5c31\u662f\u4e0d\u8981\u548c\u964c\u751f\u4eba\u6253\u4ea4\u9053\uff0c\u5982\u679c\u771f\u7684\u9700\u8981\uff0c\u627e\u4e00\u4e2a\u81ea\u5df1\u7684\u670b\u53cb\uff0c\u8ba9\u4ed6\u66ff\u4f60\u548c\u964c\u751f\u4eba\u6253\u4ea4\u9053\u3002\uff09\n\n\njava-intelview-1-004\njava-intelview-1-004\n90\u3001\u7b80\u8ff0\u4e00\u4e0b\u4f60\u4e86\u89e3\u7684\u8bbe\u8ba1\u6a21\u5f0f\u3002\n\u7b54\uff1a\u6240\u8c13\u8bbe\u8ba1\u6a21\u5f0f\uff0c\u5c31\u662f\u4e00\u5957\u88ab\u53cd\u590d\u4f7f\u7528\u7684\u4ee3\u7801\u8bbe\u8ba1\u7ecf\u9a8c\u7684\u603b\u7ed3\uff08\u60c5\u5883\u4e2d\u4e00\u4e2a\u95ee\u9898\u7ecf\u8fc7\u8bc1\u5b9e\u7684\u4e00\u4e2a\u89e3\u51b3\u65b9\u6848\uff09\u3002\n\u4f7f\u7528\u8bbe\u8ba1\u6a21\u5f0f\u662f\u4e3a\u4e86\u53ef\u91cd\u7528\u4ee3\u7801\u3001\u8ba9\u4ee3\u7801\u66f4\u5bb9\u6613\u88ab\u4ed6\u4eba\u7406\u89e3\u3001\u4fdd\u8bc1\u4ee3\u7801\u53ef\u9760\u6027\u3002\u8bbe\u8ba1\u6a21\u5f0f\u4f7f\u4eba\u4eec\u53ef\u4ee5\u66f4\u52a0\u7b80\u5355\u65b9\u4fbf\u7684\u590d\u7528\u6210\u529f\u7684\u8bbe\u8ba1\u548c\u4f53\u7cfb\u7ed3\u6784\u3002\n\u5c06\u5df2\u8bc1\u5b9e\u7684\u6280\u672f\u8868\u8ff0\u6210\u8bbe\u8ba1\u6a21\u5f0f\u4e5f\u4f1a\u4f7f\u65b0\u7cfb\u7edf\u5f00\u53d1\u8005\u66f4\u52a0\u5bb9\u6613\u7406\u89e3\u5176\u8bbe\u8ba1\u601d\u8def\u3002\n\u5728GoF\u7684\u300aDesign Patterns: Elements of Reusable Object-Oriented Software\u300b\u4e2d\u7ed9\u51fa\u4e86\u4e09\u7c7b\uff08\u521b\u5efa\u578b[\u5bf9\u7c7b\u7684\u5b9e\u4f8b\u5316\u8fc7\u7a0b\u7684\u62bd\u8c61\u5316]\u3001\u7ed3\u6784\u578b[\u63cf\u8ff0\u5982\u4f55\u5c06\u7c7b\u6216\u5bf9\u8c61\u7ed3\u5408\u5728\u4e00\u8d77\u5f62\u6210\u66f4\u5927\u7684\u7ed3\u6784]\u3001\u884c\u4e3a\u578b[\u5bf9\u5728\u4e0d\u540c\u7684\u5bf9\u8c61\u4e4b\u95f4\u5212\u5206\u8d23\u4efb\u548c\u7b97\u6cd5\u7684\u62bd\u8c61\u5316]\uff09\u517123\u79cd\u8bbe\u8ba1\u6a21\u5f0f\n\u5305\u62ec\uff1aAbstract Factory\uff08\u62bd\u8c61\u5de5\u5382\u6a21\u5f0f\uff09\uff0cBuilder\uff08\u5efa\u9020\u8005\u6a21\u5f0f\uff09\uff0cFactory Method\uff08\u5de5\u5382\u65b9\u6cd5\u6a21\u5f0f\uff09\uff0cPrototype\uff08\u539f\u59cb\u6a21\u578b\u6a21\u5f0f\uff09\uff0cSingleton\uff08\u5355\u4f8b\u6a21\u5f0f\uff09\uff1bFacade\uff08\u95e8\u9762\u6a21\u5f0f\uff09\uff0cAdapter\uff08\u9002\u914d\u5668\u6a21\u5f0f\uff09\uff0cBridge\uff08\u6865\u6881\u6a21\u5f0f\uff09\uff0cComposite\uff08\u5408\u6210\u6a21\u5f0f\uff09\uff0cDecorator\uff08\u88c5\u9970\u6a21\u5f0f\uff09\uff0cFlyweight\uff08\u4eab\u5143\u6a21\u5f0f\uff09\uff0cProxy\uff08\u4ee3\u7406\u6a21\u5f0f\uff09\uff1bCommand\uff08\u547d\u4ee4\u6a21\u5f0f\uff09\uff0cInterpreter\uff08\u89e3\u91ca\u5668\u6a21\u5f0f\uff09\uff0cVisitor\uff08\u8bbf\u95ee\u8005\u6a21\u5f0f\uff09\uff0cIterator\uff08\u8fed\u4ee3\u5b50\u6a21\u5f0f\uff09\uff0cMediator\uff08\u8c03\u505c\u8005\u6a21\u5f0f\uff09\uff0cMemento\uff08\u5907\u5fd8\u5f55\u6a21\u5f0f\uff09\uff0cObserver\uff08\u89c2\u5bdf\u8005\u6a21\u5f0f\uff09\uff0cState\uff08\u72b6\u6001\u6a21\u5f0f\uff09\uff0cStrategy\uff08\u7b56\u7565\u6a21\u5f0f\uff09\uff0cTemplate Method\uff08\u6a21\u677f\u65b9\u6cd5\u6a21\u5f0f\uff09\uff0c Chain Of Responsibility\uff08\u8d23\u4efb\u94fe\u6a21\u5f0f\uff09\u3002\n\u9762\u8bd5\u88ab\u95ee\u5230\u5173\u4e8e\u8bbe\u8ba1\u6a21\u5f0f\u7684\u77e5\u8bc6\u65f6\uff0c\u53ef\u4ee5\u62e3\u6700\u5e38\u7528\u7684\u4f5c\u7b54\uff0c\u4f8b\u5982\uff1a\n\n\u5de5\u5382\u6a21\u5f0f\uff1a\u5de5\u5382\u7c7b\u53ef\u4ee5\u6839\u636e\u6761\u4ef6\u751f\u6210\u4e0d\u540c\u7684\u5b50\u7c7b\u5b9e\u4f8b\uff0c\u8fd9\u4e9b\u5b50\u7c7b\u6709\u4e00\u4e2a\u516c\u5171\u7684\u62bd\u8c61\u7236\u7c7b\u5e76\u4e14\u5b9e\u73b0\u4e86\u76f8\u540c\u7684\u65b9\u6cd5\uff0c\u4f46\u662f\u8fd9\u4e9b\u65b9\u6cd5\u9488\u5bf9\u4e0d\u540c\u7684\u6570\u636e\u8fdb\u884c\u4e86\u4e0d\u540c\u7684\u64cd\u4f5c\uff08\u591a\u6001\u65b9\u6cd5\uff09\u3002\u5f53\u5f97\u5230\u5b50\u7c7b\u7684\u5b9e\u4f8b\u540e\uff0c\u5f00\u53d1\u4eba\u5458\u53ef\u4ee5\u8c03\u7528\u57fa\u7c7b\u4e2d\u7684\u65b9\u6cd5\u800c\u4e0d\u5fc5\u8003\u8651\u5230\u5e95\u8fd4\u56de\u7684\u662f\u54ea\u4e00\u4e2a\u5b50\u7c7b\u7684\u5b9e\u4f8b\u3002\n\n\u4ee3\u7406\u6a21\u5f0f\uff1a\u7ed9\u4e00\u4e2a\u5bf9\u8c61\u63d0\u4f9b\u4e00\u4e2a\u4ee3\u7406\u5bf9\u8c61\uff0c\u5e76\u7531\u4ee3\u7406\u5bf9\u8c61\u63a7\u5236\u539f\u5bf9\u8c61\u7684\u5f15\u7528\u3002\u5b9e\u9645\u5f00\u53d1\u4e2d\uff0c\u6309\u7167\u4f7f\u7528\u76ee\u7684\u7684\u4e0d\u540c\uff0c\u4ee3\u7406\u53ef\u4ee5\u5206\u4e3a\uff1a\u8fdc\u7a0b\u4ee3\u7406\u3001\u865a\u62df\u4ee3\u7406\u3001\u4fdd\u62a4\u4ee3\u7406\u3001Cache\u4ee3\u7406\u3001\u9632\u706b\u5899\u4ee3\u7406\u3001\u540c\u6b65\u5316\u4ee3\u7406\u3001\u667a\u80fd\u5f15\u7528\u4ee3\u7406\u3002\n\n\u9002\u914d\u5668\u6a21\u5f0f\uff1a\u628a\u4e00\u4e2a\u7c7b\u7684\u63a5\u53e3\u53d8\u6362\u6210\u5ba2\u6237\u7aef\u6240\u671f\u5f85\u7684\u53e6\u4e00\u79cd\u63a5\u53e3\uff0c\u4ece\u800c\u4f7f\u539f\u672c\u56e0\u63a5\u53e3\u4e0d\u5339\u914d\u800c\u65e0\u6cd5\u5728\u4e00\u8d77\u4f7f\u7528\u7684\u7c7b\u80fd\u591f\u4e00\u8d77\u5de5\u4f5c\u3002\n\n\u6a21\u677f\u65b9\u6cd5\u6a21\u5f0f\uff1a\u63d0\u4f9b\u4e00\u4e2a\u62bd\u8c61\u7c7b\uff0c\u5c06\u90e8\u5206\u903b\u8f91\u4ee5\u5177\u4f53\u65b9\u6cd5\u6216\u6784\u9020\u5668\u7684\u5f62\u5f0f\u5b9e\u73b0\uff0c\u7136\u540e\u58f0\u660e\u4e00\u4e9b\u62bd\u8c61\u65b9\u6cd5\u6765\u8feb\u4f7f\u5b50\u7c7b\u5b9e\u73b0\u5269\u4f59\u7684\u903b\u8f91\u3002\u4e0d\u540c\u7684\u5b50\u7c7b\u53ef\u4ee5\u4ee5\u4e0d\u540c\u7684\u65b9\u5f0f\u5b9e\u73b0\u8fd9\u4e9b\u62bd\u8c61\u65b9\u6cd5\uff08\u591a\u6001\u5b9e\u73b0\uff09\uff0c\u4ece\u800c\u5b9e\u73b0\u4e0d\u540c\u7684\u4e1a\u52a1\u903b\u8f91\u3002\n\n\n\u9664\u6b64\u4e4b\u5916\uff0c\u8fd8\u53ef\u4ee5\u8bb2\u8bb2\u4e0a\u9762\u63d0\u5230\u7684\u95e8\u9762\u6a21\u5f0f\u3001\u6865\u6881\u6a21\u5f0f\u3001\u5355\u4f8b\u6a21\u5f0f\u3001\u88c5\u6f62\u6a21\u5f0f\uff08Collections\u5de5\u5177\u7c7b\u548cI/O\u7cfb\u7edf\u4e2d\u90fd\u4f7f\u7528\u88c5\u6f62\u6a21\u5f0f\uff09\u7b49\uff0c\u53cd\u6b63\u57fa\u672c\u539f\u5219\u5c31\u662f\u62e3\u81ea\u5df1\u6700\u719f\u6089\u7684\u3001\u7528\u5f97\u6700\u591a\u7684\u4f5c\u7b54\uff0c\u4ee5\u514d\u8a00\u591a\u5fc5\u5931\u3002\n91\u3001\u7528Java\u5199\u4e00\u4e2a\u5355\u4f8b\u7c7b\u3002\n\u7b54\uff1a\n\u997f\u6c49\u5f0f\u5355\u4f8b\n\n    public class Singleton {\n        private Singleton(){}\n        private static Singleton instance = new Singleton();\n        public static Singleton getInstance(){\n            return instance;\n        }\n    }\n\u61d2\u6c49\u5f0f\u5355\u4f8b\n\n    public class Singleton {\n        private static Singleton instance = null;\n        private Singleton() {}\n        public static synchronized Singleton getInstance(){\n            if (instance == null) instance \uff1d new Singleton();\n            return instance;\n        }\n    }\n\u6ce8\u610f\uff1a\u5b9e\u73b0\u4e00\u4e2a\u5355\u4f8b\u6709\u4e24\u70b9\u6ce8\u610f\u4e8b\u9879\uff0c\u2460\u5c06\u6784\u9020\u5668\u79c1\u6709\uff0c\u4e0d\u5141\u8bb8\u5916\u754c\u901a\u8fc7\u6784\u9020\u5668\u521b\u5efa\u5bf9\u8c61\uff1b\u2461\u901a\u8fc7\u516c\u5f00\u7684\u9759\u6001\u65b9\u6cd5\u5411\u5916\u754c\u8fd4\u56de\u7c7b\u7684\u552f\u4e00\u5b9e\u4f8b\u3002\u8fd9\u91cc\u6709\u4e00\u4e2a\u95ee\u9898\u53ef\u4ee5\u601d\u8003\uff1aSpring\u7684IoC\u5bb9\u5668\u53ef\u4ee5\u4e3a\u666e\u901a\u7684\u7c7b\u521b\u5efa\u5355\u4f8b\uff0c\u5b83\u662f\u600e\u4e48\u505a\u5230\u7684\u5462\uff1f\n92\u3001\u4ec0\u4e48\u662fUML\uff1f\n\u7b54\uff1aUML\u662f\u7edf\u4e00\u5efa\u6a21\u8bed\u8a00\uff08Unified Modeling Language\uff09\u7684\u7f29\u5199\uff0c\u5b83\u53d1\u8868\u4e8e1997\u5e74\uff0c\u7efc\u5408\u4e86\u5f53\u65f6\u5df2\u7ecf\u5b58\u5728\u7684\u9762\u5411\u5bf9\u8c61\u7684\u5efa\u6a21\u8bed\u8a00\u3001\u65b9\u6cd5\u548c\u8fc7\u7a0b\uff0c\u662f\u4e00\u4e2a\u652f\u6301\u6a21\u578b\u5316\u548c\u8f6f\u4ef6\u7cfb\u7edf\u5f00\u53d1\u7684\u56fe\u5f62\u5316\u8bed\u8a00\uff0c\u4e3a\u8f6f\u4ef6\u5f00\u53d1\u7684\u6240\u6709\u9636\u6bb5\u63d0\u4f9b\u6a21\u578b\u5316\u548c\u53ef\u89c6\u5316\u652f\u6301\u3002\u4f7f\u7528UML\u53ef\u4ee5\u5e2e\u52a9\u6c9f\u901a\u4e0e\u4ea4\u6d41\uff0c\u8f85\u52a9\u5e94\u7528\u8bbe\u8ba1\u548c\u6587\u6863\u7684\u751f\u6210\uff0c\u8fd8\u80fd\u591f\u9610\u91ca\u7cfb\u7edf\u7684\u7ed3\u6784\u548c\u884c\u4e3a\u3002\n93\u3001UML\u4e2d\u6709\u54ea\u4e9b\u5e38\u7528\u7684\u56fe\uff1f\n\u7b54\uff1aUML\u5b9a\u4e49\u4e86\u591a\u79cd\u56fe\u5f62\u5316\u7684\u7b26\u53f7\u6765\u63cf\u8ff0\u8f6f\u4ef6\u7cfb\u7edf\u90e8\u5206\u6216\u5168\u90e8\u7684\u9759\u6001\u7ed3\u6784\u548c\u52a8\u6001\u7ed3\u6784\uff0c\u5305\u62ec\uff1a\u7528\u4f8b\u56fe\uff08use case diagram\uff09\u3001\u7c7b\u56fe\uff08class diagram\uff09\u3001\u65f6\u5e8f\u56fe\uff08sequence diagram\uff09\u3001\u534f\u4f5c\u56fe\uff08collaboration diagram\uff09\u3001\u72b6\u6001\u56fe\uff08statechart diagram\uff09\u3001\u6d3b\u52a8\u56fe\uff08activity diagram\uff09\u3001\u6784\u4ef6\u56fe\uff08component diagram\uff09\u3001\u90e8\u7f72\u56fe\uff08deployment diagram\uff09\u7b49\u3002\n\u5728\u8fd9\u4e9b\u56fe\u5f62\u5316\u7b26\u53f7\u4e2d\uff0c\u6709\u4e09\u79cd\u56fe\u6700\u4e3a\u91cd\u8981\uff0c\u5206\u522b\u662f\uff1a\u7528\u4f8b\u56fe\uff08\u7528\u6765\u6355\u83b7\u9700\u6c42\uff0c\u63cf\u8ff0\u7cfb\u7edf\u7684\u529f\u80fd\uff0c\u901a\u8fc7\u8be5\u56fe\u53ef\u4ee5\u8fc5\u901f\u7684\u4e86\u89e3\u7cfb\u7edf\u7684\u529f\u80fd\u6a21\u5757\u53ca\u5176\u5173\u7cfb\uff09\u3001\u7c7b\u56fe\uff08\u63cf\u8ff0\u7c7b\u4ee5\u53ca\u7c7b\u4e0e\u7c7b\u4e4b\u95f4\u7684\u5173\u7cfb\uff0c\u901a\u8fc7\u8be5\u56fe\u53ef\u4ee5\u5feb\u901f\u4e86\u89e3\u7cfb\u7edf\uff09\u3001\u65f6\u5e8f\u56fe\uff08\u63cf\u8ff0\u6267\u884c\u7279\u5b9a\u4efb\u52a1\u65f6\u5bf9\u8c61\u4e4b\u95f4\u7684\u4ea4\u4e92\u5173\u7cfb\u4ee5\u53ca\u6267\u884c\u987a\u5e8f\uff0c\u901a\u8fc7\u8be5\u56fe\u53ef\u4ee5\u4e86\u89e3\u5bf9\u8c61\u80fd\u63a5\u6536\u7684\u6d88\u606f\u4e5f\u5c31\u662f\u8bf4\u5bf9\u8c61\u80fd\u591f\u5411\u5916\u754c\u63d0\u4f9b\u7684\u670d\u52a1\uff09\u3002\u7528\u4f8b\u56fe\uff1a\njava-intelview-1-006\n\u7c7b\u56fe\uff1a\njava-intelview-1-007\n\u65f6\u5e8f\u56fe\uff1a\njava-intelview-1-008\n94\u3001\u7528Java\u5199\u4e00\u4e2a\u5192\u6ce1\u6392\u5e8f\u3002\n\u7b54\uff1a\u5192\u6ce1\u6392\u5e8f\u51e0\u4e4e\u662f\u4e2a\u7a0b\u5e8f\u5458\u90fd\u5199\u5f97\u51fa\u6765\uff0c\u4f46\u662f\u9762\u8bd5\u7684\u65f6\u5019\u5982\u4f55\u5199\u4e00\u4e2a\u903c\u683c\u9ad8\u7684\u5192\u6ce1\u6392\u5e8f\u5374\u4e0d\u662f\u6bcf\u4e2a\u4eba\u90fd\u80fd\u505a\u5230\uff0c\u4e0b\u9762\u63d0\u4f9b\u4e00\u4e2a\u53c2\u8003\u4ee3\u7801\uff1a\n\n    import java.util.Comparator;\n\n    /**\n     * \u6392\u5e8f\u5668\u63a5\u53e3(\u7b56\u7565\u6a21\u5f0f: \u5c06\u7b97\u6cd5\u5c01\u88c5\u5230\u5177\u6709\u5171\u540c\u63a5\u53e3\u7684\u72ec\u7acb\u7684\u7c7b\u4e2d\u4f7f\u5f97\u5b83\u4eec\u53ef\u4ee5\u76f8\u4e92\u66ff\u6362)\n     * @author\u9a86\u660a\n     *\n     */\n    public interface Sorter {\n\n       /**\n        * \u6392\u5e8f\n        * @param list \u5f85\u6392\u5e8f\u7684\u6570\u7ec4\n        */\n       public &lt;T extends Comparable&lt;T&gt;&gt; void sort(T[] list);\n\n       /**\n        * \u6392\u5e8f\n        * @param list \u5f85\u6392\u5e8f\u7684\u6570\u7ec4\n        * @param comp \u6bd4\u8f83\u4e24\u4e2a\u5bf9\u8c61\u7684\u6bd4\u8f83\u5668\n        */\n       public &lt;T&gt; void sort(T[] list, Comparator&lt;T&gt; comp);\n    }\n\n    import java.util.Comparator;\n\n    /**\n     * \u5192\u6ce1\u6392\u5e8f\n     * \n     * @author\u9a86\u660a\n     *\n     */\n    public class BubbleSorter implements Sorter {\n\n        @Override\n        public &lt;T extends Comparable&lt;T&gt;&gt; void sort(T[] list) {\n            boolean swapped = true;\n            for (int i = 1, len = list.length; i &lt; len &amp;&amp; swapped; ++i) {\n                swapped = false;\n                for (int j = 0; j &lt; len - i; ++j) {\n                    if (list[j].compareTo(list[j + 1]) &gt; 0) {\n                        T temp = list[j];\n                        list[j] = list[j + 1];\n                        list[j + 1] = temp;\n                        swapped = true;\n                    }\n                }\n            }\n        }\n\n        @Override\n        public &lt;T&gt; void sort(T[] list, Comparator&lt;T&gt; comp) {\n            boolean swapped = true;\n            for (int i = 1, len = list.length; i &lt; len &amp;&amp; swapped; ++i) {\n                swapped = false;\n                for (int j = 0; j &lt; len - i; ++j) {\n                    if (comp.compare(list[j], list[j + 1]) &gt; 0) {\n                        T temp = list[j];\n                        list[j] = list[j + 1];\n                        list[j + 1] = temp;\n                        swapped = true;\n                    }\n                }\n            }\n        }\n    }\n95\u3001\u7528Java\u5199\u4e00\u4e2a\u6298\u534a\u67e5\u627e\u3002\n\u7b54\uff1a\u6298\u534a\u67e5\u627e\uff0c\u4e5f\u79f0\u4e8c\u5206\u67e5\u627e\u3001\u4e8c\u5206\u641c\u7d22\uff0c\u662f\u4e00\u79cd\u5728\u6709\u5e8f\u6570\u7ec4\u4e2d\u67e5\u627e\u67d0\u4e00\u7279\u5b9a\u5143\u7d20\u7684\u641c\u7d22\u7b97\u6cd5\u3002\u641c\u7d20\u8fc7\u7a0b\u4ece\u6570\u7ec4\u7684\u4e2d\u95f4\u5143\u7d20\u5f00\u59cb\uff0c\u5982\u679c\u4e2d\u95f4\u5143\u7d20\u6b63\u597d\u662f\u8981\u67e5\u627e\u7684\u5143\u7d20\uff0c\u5219\u641c\u7d20\u8fc7\u7a0b\u7ed3\u675f\uff1b\u5982\u679c\u67d0\u4e00\u7279\u5b9a\u5143\u7d20\u5927\u4e8e\u6216\u8005\u5c0f\u4e8e\u4e2d\u95f4\u5143\u7d20\uff0c\u5219\u5728\u6570\u7ec4\u5927\u4e8e\u6216\u5c0f\u4e8e\u4e2d\u95f4\u5143\u7d20\u7684\u90a3\u4e00\u534a\u4e2d\u67e5\u627e\uff0c\u800c\u4e14\u8ddf\u5f00\u59cb\u4e00\u6837\u4ece\u4e2d\u95f4\u5143\u7d20\u5f00\u59cb\u6bd4\u8f83\u3002\u5982\u679c\u5728\u67d0\u4e00\u6b65\u9aa4\u6570\u7ec4\u5df2\u7ecf\u4e3a\u7a7a\uff0c\u5219\u8868\u793a\u627e\u4e0d\u5230\u6307\u5b9a\u7684\u5143\u7d20\u3002\u8fd9\u79cd\u641c\u7d22\u7b97\u6cd5\u6bcf\u4e00\u6b21\u6bd4\u8f83\u90fd\u4f7f\u641c\u7d22\u8303\u56f4\u7f29\u5c0f\u4e00\u534a\uff0c\u5176\u65f6\u95f4\u590d\u6742\u5ea6\u662fO(logN)\u3002\n\n    import java.util.Comparator;\n\n    public class MyUtil {\n\n       public static &lt;T extends Comparable&lt;T&gt;&gt; int binarySearch(T[] x, T key) {\n          return binarySearch(x, 0, x.length- 1, key);\n       }\n\n       // \u4f7f\u7528\u5faa\u73af\u5b9e\u73b0\u7684\u4e8c\u5206\u67e5\u627e\n       public static &lt;T&gt; int binarySearch(T[] x, T key, Comparator&lt;T&gt; comp) {\n          int low = 0;\n          int high = x.length - 1;\n          while (low &lt;= high) {\n              int mid = (low + high) &gt;&gt;&gt; 1;\n              int cmp = comp.compare(x[mid], key);\n              if (cmp &lt; 0) {\n                low= mid + 1;\n              }\n              else if (cmp &gt; 0) {\n                high= mid - 1;\n              }\n              else {\n                return mid;\n              }\n          }\n          return -1;\n       }\n\n       // \u4f7f\u7528\u9012\u5f52\u5b9e\u73b0\u7684\u4e8c\u5206\u67e5\u627e\n       private static&lt;T extends Comparable&lt;T&gt;&gt; int binarySearch(T[] x, int low, int high, T key) {\n          if(low &lt;= high) {\n            int mid = low + ((high -low) &gt;&gt; 1);\n            if(key.compareTo(x[mid])== 0) {\n               return mid;\n            }\n            else if(key.compareTo(x[mid])&lt; 0) {\n               return binarySearch(x,low, mid - 1, key);\n            }\n            else {\n               return binarySearch(x,mid + 1, high, key);\n            }\n          }\n          return -1;\n       }\n    }\n\u8bf4\u660e\uff1a\u4e0a\u9762\u7684\u4ee3\u7801\u4e2d\u7ed9\u51fa\u4e86\u6298\u534a\u67e5\u627e\u7684\u4e24\u4e2a\u7248\u672c\uff0c\u4e00\u4e2a\u7528\u9012\u5f52\u5b9e\u73b0\uff0c\u4e00\u4e2a\u7528\u5faa\u73af\u5b9e\u73b0\u3002\u9700\u8981\u6ce8\u610f\u7684\u662f\u8ba1\u7b97\u4e2d\u95f4\u4f4d\u7f6e\u65f6\u4e0d\u5e94\u8be5\u4f7f\u7528(high+ low) / 2\u7684\u65b9\u5f0f\uff0c\u56e0\u4e3a\u52a0\u6cd5\u8fd0\u7b97\u53ef\u80fd\u5bfc\u81f4\u6574\u6570\u8d8a\u754c\uff0c\u8fd9\u91cc\u5e94\u8be5\u4f7f\u7528\u4ee5\u4e0b\u4e09\u79cd\u65b9\u5f0f\u4e4b\u4e00\uff1alow + (high - low) / 2\u6216low + (high \u2013 low) &gt;&gt; 1\u6216(low + high) &gt;&gt;&gt; 1\uff08&gt;&gt;&gt;\u662f\u903b\u8f91\u53f3\u79fb\uff0c\u662f\u4e0d\u5e26\u7b26\u53f7\u4f4d\u7684\u53f3\u79fb\uff09\n\u6765\u6e90\uff1ahttps://blog.csdn.net/jackfrued/article/details/44921941\n", "categories": [{"name": "\u6781\u5ba2", "slug": "\u6781\u5ba2", "permalink": "/category/\u6781\u5ba2/"}], "tags": [{"name": "Java", "slug": "Java", "permalink": "/tag/Java/"}, {"name": "\u9762\u8bd5\u9898", "slug": "\u9762\u8bd5\u9898", "permalink": "/tag/\u9762\u8bd5\u9898/"}, {"name": "IT", "slug": "IT", "permalink": "/tag/IT/"}]}, {"title": "Jetbrains \u81ea\u7528\u6ce8\u518c\u7801", "date": "2020-01-03T12:00:00-00.00", "path": "/archives/jetbrains-licenses/", "text": "\u6ce8\u518c\u7801\u4e00\u822c\u90fd\u662f\u6709\u671f\u9650\u7684\uff0c\u5982\u679c\u5931\u6548\uff0c\u8bf7\u8054\u7cfb\u535a\u4e3b\uff08\u53d1\u90ae\u4ef6\uff1a\u6ce8\u660eJetbrains\u6ce8\u518c\u7801\u5373\u53ef\uff092020\u5e7401\u670803\u65e5\u66f4\u65b0\n\u5230\u671f\u65f6\u95f4  2021-01-04\n\nQYYBAC9D3J-eyJsaWNlbnNlSWQiOiJRWVlCQUM5RDNKIiwibGljZW5zZWVOYW1lIjoi6LaF57qnIOeoi+W6j+WRmCIsImFzc2lnbmVlTmFtZSI6IiIsImFzc2lnbmVlRW1haWwiOiIiLCJsaWNlbnNlUmVzdHJpY3Rpb24iOiIiLCJjaGVja0NvbmN1cnJlbnRVc2UiOmZhbHNlLCJwcm9kdWN0cyI6W3siY29kZSI6IklJIiwiZmFsbGJhY2tEYXRlIjoiMjAyMC0wMS0wNCIsInBhaWRVcFRvIjoiMjAyMS0wMS0wMyJ9LHsiY29kZSI6IkFDIiwiZmFsbGJhY2tEYXRlIjoiMjAyMC0wMS0wNCIsInBhaWRVcFRvIjoiMjAyMS0wMS0wMyJ9LHsiY29kZSI6IkRQTiIsImZhbGxiYWNrRGF0ZSI6IjIwMjAtMDEtMDQiLCJwYWlkVXBUbyI6IjIwMjEtMDEtMDMifSx7ImNvZGUiOiJQUyIsImZhbGxiYWNrRGF0ZSI6IjIwMjAtMDEtMDQiLCJwYWlkVXBUbyI6IjIwMjEtMDEtMDMifSx7ImNvZGUiOiJHTyIsImZhbGxiYWNrRGF0ZSI6IjIwMjAtMDEtMDQiLCJwYWlkVXBUbyI6IjIwMjEtMDEtMDMifSx7ImNvZGUiOiJETSIsImZhbGxiYWNrRGF0ZSI6IjIwMjAtMDEtMDQiLCJwYWlkVXBUbyI6IjIwMjEtMDEtMDMifSx7ImNvZGUiOiJDTCIsImZhbGxiYWNrRGF0ZSI6IjIwMjAtMDEtMDQiLCJwYWlkVXBUbyI6IjIwMjEtMDEtMDMifSx7ImNvZGUiOiJSUzAiLCJmYWxsYmFja0RhdGUiOiIyMDIwLTAxLTA0IiwicGFpZFVwVG8iOiIyMDIxLTAxLTAzIn0seyJjb2RlIjoiUkMiLCJmYWxsYmFja0RhdGUiOiIyMDIwLTAxLTA0IiwicGFpZFVwVG8iOiIyMDIxLTAxLTAzIn0seyJjb2RlIjoiUkQiLCJmYWxsYmFja0RhdGUiOiIyMDIwLTAxLTA0IiwicGFpZFVwVG8iOiIyMDIxLTAxLTAzIn0seyJjb2RlIjoiUEMiLCJmYWxsYmFja0RhdGUiOiIyMDIwLTAxLTA0IiwicGFpZFVwVG8iOiIyMDIxLTAxLTAzIn0seyJjb2RlIjoiUk0iLCJmYWxsYmFja0RhdGUiOiIyMDIwLTAxLTA0IiwicGFpZFVwVG8iOiIyMDIxLTAxLTAzIn0seyJjb2RlIjoiV1MiLCJmYWxsYmFja0RhdGUiOiIyMDIwLTAxLTA0IiwicGFpZFVwVG8iOiIyMDIxLTAxLTAzIn0seyJjb2RlIjoiREIiLCJmYWxsYmFja0RhdGUiOiIyMDIwLTAxLTA0IiwicGFpZFVwVG8iOiIyMDIxLTAxLTAzIn0seyJjb2RlIjoiREMiLCJmYWxsYmFja0RhdGUiOiIyMDIwLTAxLTA0IiwicGFpZFVwVG8iOiIyMDIxLTAxLTAzIn0seyJjb2RlIjoiUlNVIiwiZmFsbGJhY2tEYXRlIjoiMjAyMC0wMS0wNCIsInBhaWRVcFRvIjoiMjAyMS0wMS0wMyJ9XSwiaGFzaCI6IjE2MDgwOTA5LzAiLCJncmFjZVBlcmlvZERheXMiOjcsImF1dG9Qcm9sb25nYXRlZCI6ZmFsc2UsImlzQXV0b1Byb2xvbmdhdGVkIjpmYWxzZX0=-I7c5mu4hUCMxcldrwZEJMaT+qkrzrF1bjJi0i5QHcrRxk2LO0jqzUe2fBOUR4L+x+7n6kCwAoBBODm9wXst8dWLXdq179EtjU3rfJENr1wXGgtef//FNow+Id5iRufJ4W+p+3s5959GSFibl35YtbELELuCUH2IbCRly0PUBjitgA0r2y+9jV5YD/dmrd/p4C87MccC74NxtQfRdeUEGx87vnhsqTFH/sP4C2VljSo/F/Ft9JqsSlGfwSKjzU8BreYt1QleosdMnMK7a+fkfxh7n5zg4DskdVlNbfe6jvYgMVE16DMXd6F1Zhwq+lrmewJA2jPToc+H5304rcJfa9w==-MIIElTCCAn2gAwIBAgIBCTANBgkqhkiG9w0BAQsFADAYMRYwFAYDVQQDDA1KZXRQcm9maWxlIENBMB4XDTE4MTEwMTEyMjk0NloXDTIwMTEwMjEyMjk0NlowaDELMAkGA1UEBhMCQ1oxDjAMBgNVBAgMBU51c2xlMQ8wDQYDVQQHDAZQcmFndWUxGTAXBgNVBAoMEEpldEJyYWlucyBzLnIuby4xHTAbBgNVBAMMFHByb2QzeS1mcm9tLTIwMTgxMTAxMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAxcQkq+zdxlR2mmRYBPzGbUNdMN6OaXiXzxIWtMEkrJMO/5oUfQJbLLuMSMK0QHFmaI37WShyxZcfRCidwXjot4zmNBKnlyHodDij/78TmVqFl8nOeD5+07B8VEaIu7c3E1N+e1doC6wht4I4+IEmtsPAdoaj5WCQVQbrI8KeT8M9VcBIWX7fD0fhexfg3ZRt0xqwMcXGNp3DdJHiO0rCdU+Itv7EmtnSVq9jBG1usMSFvMowR25mju2JcPFp1+I4ZI+FqgR8gyG8oiNDyNEoAbsR3lOpI7grUYSvkB/xVy/VoklPCK2h0f0GJxFjnye8NT1PAywoyl7RmiAVRE/EKwIDAQABo4GZMIGWMAkGA1UdEwQCMAAwHQYDVR0OBBYEFGEpG9oZGcfLMGNBkY7SgHiMGgTcMEgGA1UdIwRBMD+AFKOetkhnQhI2Qb1t4Lm0oFKLl/GzoRykGjAYMRYwFAYDVQQDDA1KZXRQcm9maWxlIENBggkA0myxg7KDeeEwEwYDVR0lBAwwCgYIKwYBBQUHAwEwCwYDVR0PBAQDAgWgMA0GCSqGSIb3DQEBCwUAA4ICAQAF8uc+YJOHHwOFcPzmbjcxNDuGoOUIP+2h1R75Lecswb7ru2LWWSUMtXVKQzChLNPn/72W0k+oI056tgiwuG7M49LXp4zQVlQnFmWU1wwGvVhq5R63Rpjx1zjGUhcXgayu7+9zMUW596Lbomsg8qVve6euqsrFicYkIIuUu4zYPndJwfe0YkS5nY72SHnNdbPhEnN8wcB2Kz+OIG0lih3yz5EqFhld03bGp222ZQCIghCTVL6QBNadGsiN/lWLl4JdR3lJkZzlpFdiHijoVRdWeSWqM4y0t23c92HXKrgppoSV18XMxrWVdoSM3nuMHwxGhFyde05OdDtLpCv+jlWf5REAHHA201pAU6bJSZINyHDUTB+Beo28rRXSwSh3OUIvYwKNVeoBY+KwOJ7WnuTCUq1meE6GkKc4D/cXmgpOyW/1SmBz3XjVIi/zprZ0zf3qH5mkphtg6ksjKgKjmx1cXfZAAX6wcDBNaCL+Ortep1Dh8xDUbqbBVNBL4jbiL3i3xsfNiyJgaZ5sX7i8tmStEpLbPwvHcByuf59qJhV/bZOl8KqJBETCDJcY6O2aqhTUy+9x93ThKs1GKrRPePrWPluud7ttlgtRveit/pcBrnQcXOl1rHq7ByB8CFAxNotRUYL9IF5n3wJOgkPojMy6jetQA5Ogc8Sm7RG6vg1yow==\n", "categories": [{"name": "\u6781\u5ba2", "slug": "\u6781\u5ba2", "permalink": "/category/\u6781\u5ba2/"}], "tags": [{"name": "Jetbrains", "slug": "Jetbrains", "permalink": "/tag/Jetbrains/"}, {"name": "IT", "slug": "IT", "permalink": "/tag/IT/"}, {"name": "IDE", "slug": "IDE", "permalink": "/tag/IDE/"}]}, {"title": "\u5feb\u901f\u5b9a\u4f4dJava\u7ebf\u4e0a\u5185\u5b58OOM\u95ee\u9898", "date": "2020-01-02T18:00:00-00.00", "path": "/archives/locate-java-oom/", "text": "Java\u7684OOM\u95ee\u9898\uff0c\u5404\u5f0f\u5404\u6837\u30021\u3001\u4f7f\u7528top\u67e5\u770bPID\n2\u3001\u4f7f\u7528jmap -heap PID \u67e5\u8be2JVM\u5185\u5b58\u4fe1\u606f\uff0c\u786e\u8ba4\u662f\u5426\u662f\u5185\u5b58\u672c\u8eab\u5c31\u5206\u914d\u7684\u4e0d\u591f\n3\u3001\u4f7f\u7528jmap -histo:live PID | more \u67e5\u627e\u5b9e\u4f8b\u5217\u8868\u4e2d\u6700\u8017\u5185\u5b58\u7684\u5bf9\u8c61\n\u5176\u4e2d\u6309\u7167\u6240\u5360\u5185\u5b58\u6392\u5e8f\uff0c\u5206\u522b\u662f\u5b9e\u4f8b\u6570\uff0c\u6240\u5728\u5185\u5b58\u5927\u5c0f\uff0c\u7c7b\u540d\u3002\u901a\u8fc7\u5217\u8868\u53ef\u4ee5\u76f4\u89c2\u7684\n\u627e\u5230\u6700\u8017\u5185\u5b58\u7684\u7c7b\u540d\uff0c\u7136\u540e\u5230\u4ee3\u7801\u4e2d\u627e\u5230\u5bf9\u5e94\u7684\u7c7b\u8fdb\u884c\u6392\u67e5\u95ee\u9898\u3002\n4\u3001\u786e\u8ba4\u662f\u5426\u8d44\u6e90\u8017\u5c3d\n\u4f7f\u7528pstree -up PID \u67e5\u770b\u8fdb\u7a0b\u7ebf\u7a0b\u6811\n\u4f7f\u7528netstat\u67e5\u770b\u7f51\u7edc\u8fde\u63a5\u6570\n\u8fd8\u53ef\u4ee5\u901a\u8fc7\nll /proc/${PID}/fd \u67e5\u770b\u53e5\u67c4\u8be6\u60c5\nll /proc/${PID}/task \u67e5\u770b\u7ebf\u7a0b\u6570\n\u7edf\u8ba1\u5224\u65ad\u8fdb\u7a0b\u6253\u5f00\u53e5\u67c4\u548c\u7ebf\u7a0b\u6570\uff0c\u53ea\u9700\u8981\u7b80\u5355\u7edf\u8ba1\u4e00\u4e0b\nll /proc/${PID}/fd | wc -l\nll /proc/${PID}/task | wc -l\npstree -p |wc -l\n", "categories": [{"name": "\u6781\u5ba2", "slug": "\u6781\u5ba2", "permalink": "/category/\u6781\u5ba2/"}], "tags": [{"name": "Java", "slug": "Java", "permalink": "/tag/Java/"}, {"name": "IT", "slug": "IT", "permalink": "/tag/IT/"}]}, {"title": "Docker\u955c\u50cf\u52a0\u901f", "date": "2020-01-02T08:00:00-00.00", "path": "/archives/docker-image-speedup/", "text": " docker\u4e00\u952e\u5b89\u88c5\u811a\u672c \uff1awget -qO- get.docker.com | sh \u6536\u96c6\u7684\u5e38\u89c1\u7684Docker\u955c\u50cf\u52a0\u901f\u5730\u5740\n\"https://hub-mirror.c.163.com\"\n\"https://mirror.ccs.tencentyun.com\"\n\"https://reg-mirror.qiniu.co\"\n\"http://f1361db2.m.daocloud.io\"\n\"https://registry.docker-cn.com\"\n\u4fee\u6539/etc/docker/daemon.json\n\n{\n    \"registry-mirrors\": [\n      \"http://f1361db2.m.daocloud.io\",\n      \"https://registry.docker-cn.com\",\n      \"http://hub-mirror.c.163.com\"\n    ]\n}\n", "categories": [{"name": "\u6781\u5ba2", "slug": "\u6781\u5ba2", "permalink": "/category/\u6781\u5ba2/"}], "tags": [{"name": "Docker", "slug": "Docker", "permalink": "/tag/Docker/"}, {"name": "IT", "slug": "IT", "permalink": "/tag/IT/"}]}, {"title": "\u6709\u8da3\u7684Docker\u955c\u50cf", "date": "2020-01-01T18:00:00-00.00", "path": "/archives/fun-docker-images/", "text": " docker\u4e00\u952e\u5b89\u88c5\u811a\u672c \uff1awget -qO- get.docker.com | sh rastasheep/ubuntu-sshd \uff08\u5e26ssh\u7684ubuntu\uff09\n\u5730\u5740\uff1ahttps://hub.docker.com/r/rastasheep/ubuntu-sshd/\nsudo docker run -d -p 22:22 rastasheep/ubuntu-sshd:16.04\n\u7528\u6237\u540d\u3001\u5bc6\u7801\u4e3aroot\nitscaro/debian-ssh \uff08\u5e26ssh\u7684debian\uff09\n\u5730\u5740\uff1ahttps://hub.docker.com/r/itscaro/debian-ssh/\nsudo docker run -d -p 22:22  itscaro/debian-ssh\n\u7528\u6237\u540d\u3001\u5bc6\u7801\u4e3aroot\ntutum/centos \uff08\u5e26ssh\u7684centos\uff09\n\u5730\u5740\uff1ahttps://hub.docker.com/r/tutum/centos/\nsudo docker run -d -p 22:22  tutum/centos\n\uff08centos7\uff1atutum/centos:centos7 \uff09\n\u7528\u6237\u540droot\uff0c\u5bc6\u7801\u968f\u673a\uff0c\u8bf7\u6267\u884c docker logs  \u67e5\u770b\nalexwhen/docker-2048\uff08\u6e38\u620f2048\uff09\n\u5730\u5740\uff1ahttps://hub.docker.com/r/alexwhen/docker-2048/\nsudo docker run -d -p 80:80 alexwhen/docker-2048\ndorowu/ubuntu-desktop-lxde-vnc\uff08noVNC\u3001Firefox51\uff09\n\u5730\u5740\uff1ahttps://hub.docker.com/r/dorowu/ubuntu-desktop-lxde-vnc/\ndocker run -it -p 80:80 dorowu/ubuntu-desktop-lxde-vnc\nBrowse http://localhost/\nconsol/centos-xfce-vnc \uff08VNC\u3001noVNC\u3001\u5bc6\u7801\u3001chrome\u3001Firefox45\uff09\n\u5730\u5740\uff1ahttps://hub.docker.com/r/dorowu/ubuntu-desktop-lxde-vnc/\nrun -it -p 5901:5901 -p 6901:6901 -e \"VNC_PW=my-new-password\" -e VNC_RESOLUTION=800x600 consol/centos-xfce-vnc\n\u9ed8\u8ba4VNC\u5bc6\u7801\uff1avncpassword\nVNC-Server (default VNC port 5901)\nnoVNC - HTML5 VNC client (default http port 6901)\n\u5176\u4ed6\u76f8\u5173\nconsol/centos-xfce-vnc: Centos7 with Xfce4 UI session\nconsol/ubuntu-xfce-vnc: Ubuntu with Xfce4 UI session\nconsol/centos-icewm-vnc: dev     Centos7 with IceWM UI session\nconsol/ubuntu-icewm-vnc: dev      Ubuntu with IceWM UI session\nfish/peerflix-server \uff08\u652f\u6301\u78c1\u529b\uff0c\u79cd\u5b50\uff09\n\u5730\u5740\uff1ahttps://hub.docker.com/r/dorowu/ubuntu-desktop-lxde-vnc/\ndocker run -it  -p 9000:9000 fish/peerflix-server\nBrowse http://localhost:9000/\njpillora/cloud-torrent\uff08\u79cd\u5b50\u4e0b\u8f7d\uff0c\u641c\u7d22\uff09\n\u5730\u5740\uff1ahttps://hub.docker.com/r/jpillora/cloud-torrent/\ndocker run -d -p 3000:3000 -v /path/to/my/downloads:/downloads jpillora/cloud-torrent\nBrowse http://localhost:3000/\nforsaken-mail\uff08\u4e34\u65f6\u90ae\u7bb1\uff09\n\u5730\u5740\uff1ahttps://hub.docker.com/r/rockmaity/forsaken-mail/\ndocker run --name forsaken-mail -itd -p 25:25 -p 3000:3000 rockmaity/forsaken-mail\nBrowse http://localhost:3000/\n", "categories": [{"name": "\u6781\u5ba2", "slug": "\u6781\u5ba2", "permalink": "/category/\u6781\u5ba2/"}], "tags": [{"name": "Docker", "slug": "Docker", "permalink": "/tag/Docker/"}, {"name": "IT", "slug": "IT", "permalink": "/tag/IT/"}]}, {"title": "Hello World!", "date": "2020-01-01T00:00:00-00.00", "path": "/archives/helloworld/", "text": " 2020 Start !The Next is New\n\u56fe\u68ee\u9644\u8fd1\u7d22\u8bfa\u5170\u6c99\u6f20\u4e2d\u7684\u5de8\u67f1\u4ed9\u4eba\u638c\uff0c\u4e9a\u5229\u6851\u90a3\u5dde (\u00a9 Jack Dykinga/Minden Pictures)\nPhotoset\n\n\u8d1d\u5e0c\u7279\u65af\u52a0\u767b\u53bf\u62c9\u59c6\u7ecd\u5c0f\u9547\u4e0a\u7ed3\u51b0\u7684Hintersee\u6e56\u548c\u6ed1\u51b0\u8005\uff0c\u5fb7\u56fd\u5df4\u4f10\u5229\u4e9a\n\u51ef\u5229\u6e29\u6cc9\u4e2d\u7684\u9ed1\u5634\u5929\u9e45\uff0c\u6000\u4fc4\u660e\u5dde (\u00a9 DEEPOL by plainpicture)\n\u6c60\u5858\u8fb9\u7ed3\u4e86\u51b0\u7684\u6811 (\u00a9 Philippe Sainte-Laudy Photography/Getty Images)\n\u4f4d\u4e8ePraprotno\u6751\u4e4b\u4e0a\u7684\u5723\u6258\u9a6c\u65af\u6559\u5802 (\u00a9 Guy Edwardes/Minden Pictures)\n\u534e\u6c99\u7684\u5723\u8bde\u8282\u65e5\u88c5\u9970\uff0c\u6ce2\u5170 (\u00a9 David Milsen/Alamy)\n\u632a\u5a01\u7684\u4e00\u7fa4\u9a6f\u9e7f (\u00a9 Lena Granefelt/plainpicture)", "categories": [{"name": "\u96f6\u788e", "slug": "\u96f6\u788e", "permalink": "/category/\u96f6\u788e/"}], "tags": []}], "pages": [{"title": "\u5173\u4e8e", "date": "2020-01-01T00:00:00-00.00", "path": "/about/", "text": "\u8fd9\u91cc\u662f177\u7684\u4e2a\u4eba\u535a\u5ba2\uff0c\u901a\u8fc7 GitHub \u7ba1\u7406\u4e0e\u6784\u5efa\u3002\n\u8054\u7cfb\u65b9\u5f0f\n\u90ae\u4ef6: 0#177.im (replace # with @)\nTelegram\uff1aiot\n", "categories": [], "tags": []}, {"title": "\u53cb\u94fe", "date": "2020-01-01T00:00:00-00.00", "path": "/links/", "text": "\u5c0f\u4f19\u4f34\u4eec\n\n                                  \u542c\u98ce\u884c\u535a\u5ba2\n                                  177\u4e3b\u9875Contact\nEmail: 0#177.im (replace # with @)\nTelegram\uff1aiot\n", "categories": [], "tags": []}]}